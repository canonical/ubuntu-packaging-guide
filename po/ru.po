# Russian translation for ubuntu-packaging-guide
# Copyright (c) 2012 Rosetta Contributors and Canonical Ltd 2012
# This file is distributed under the same license as the ubuntu-packaging-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: ubuntu-packaging-guide\n"
"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
"POT-Creation-Date: 2013-06-05 11:24+0000\n"
"PO-Revision-Date: 2013-04-02 15:19+0000\n"
"Last-Translator: Dmitry Shachnev <mitya57@gmail.com>\n"
"Language-Team: Russian <ru@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2013-06-06 05:36+0000\n"
"X-Generator: Launchpad (build 16667)\n"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:3
msgid "autopkgtest: Automatic testing for packages"
msgstr "autopkgtest: Автоматическое тестирование пакетов"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:5
msgid ""
"The `DEP 8 specification`_ defines how automatic testing can very easily be "
"integrated into packages. To integrate a test into a package, all you need "
"to do is:"
msgstr ""
"Документ `DEP 8 specification`_ определяет способ лёгкой интеграции "
"автоматического тестирования в пакеты. Всё, что необходимо сделать для "
"добавления теста к пакету, это:"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:9
msgid "add the following to the Source section in ``debian/control``::"
msgstr "добавить следующую строчку к разделу Source в ``debian/control``::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:13
msgid ""
"add a file called ``debian/tests/control`` which specifies the requirements "
"for the testbed,"
msgstr ""
"добавить файл ``debian/tests/control``, который определяет требования к "
"тестовому окружению,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:15
msgid "add the tests in ``debian/tests/``."
msgstr "добавить тесты в ``debian/tests``."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:19
msgid "Testbed requirements"
msgstr "Требования к тестовому окружению"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:21
msgid ""
"In ``debian/tests/control`` you specify what to expect from the testbed. So "
"for example you list all the required packages for the tests, if the testbed "
"gets broken during the build or if ``root`` permissions are required. The "
"`DEP 8 specification`_ lists all available options."
msgstr ""
"В файле ``debian/tests/control`` вы можете указать требования к тестовому "
"окружению. Например, можно задать список необходимых для тестирования "
"пакетов, указать, требуется ли восстановление окружения после тестов, и "
"нужны ли привилегии ``root``. Все доступные опции указаны в `DEP 8 "
"specification`_."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:26
msgid ""
"Below we are having a look at the ``glib2.0`` source package. In a very "
"simple case the file would look like this::"
msgstr ""
"Сейчас мы рассмотрим пакет исходного кода ``glib2.0``. В очень простом "
"случае он будет выглядеть так::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:32
msgid ""
"For the test in ``debian/tests/build`` this would ensure that the packages "
"``libglib2.0-dev`` and ``build-essential`` are installed."
msgstr ""
"Это будет означать, что для теста ``debian/tests/build`` требуются пакеты "
"``libglib2.0-dev`` и ``build-essential``."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:35
msgid ""
"You can use ``@`` in the ``Depends`` line to indicate that you want all the "
"packages installed which are built by the source package in question."
msgstr ""
"В поле ``Depends`` можно указать ``@``, если вы хотите установки всех "
"бинарных пакетов, собранных из рассматриваемого пакета исходного кода."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:41
msgid "The actual tests"
msgstr "Настоящие тесты"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:43
msgid "The accompanying test for the example above might be:"
msgstr ""
"Тест, соответствующий рассмотренному выше примеру, будет выглядеть так:"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:75
msgid ""
"Here a very simple piece of C code is written to a temporary directory. Then "
"this is compiled with system libraries (using flags and library paths as "
"provided by `pkg-config`). Then the compiled binary, which just exercises "
"some parts of core glib functionality, is run."
msgstr ""
"Здесь небольшая программа на языке C копируется во временную директорию, "
"затем компилируется с использованием системных библиотек (с использованием "
"флагов и путей к библиотекам, определённых через ``pkg-config``). Затем "
"запускается скомпилированный файл, который запускает несколько основных "
"функций glib."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:80
msgid ""
"While this test is very small and basic, it tests quite a number of core "
"components on a system. This may help to uncover critical issues early on."
msgstr ""
"Несмотря на то, что тест небольшой и очень простой, он тестирует некоторое "
"количество основных компонентов системы. Это позволит заранее выявить "
"критические ошибки, если они возникнут."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:84
msgid "Executing the test"
msgstr "Выполнение теста"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:86
msgid ""
"The test script can be easily executed on its own, but if you want to make "
"sure that the testbed is properly set up, you might want to use ``adt-run`` "
"from the ``autopkgtest`` package to execute the test. The easiest way to do "
"this is to run this command in the source tree::"
msgstr ""
"Тестовый скрипт может быть легко запущен сам по себе, но если вы хотите "
"убедиться, что тестовое окружение правильно настроено, вы можете "
"использовать для запуска скрипт ``adt-run`` из пакета ``autopkgtest``. Самый "
"простой способ — выполнение этой команды в дереве исходного кода::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:93
msgid ""
"The downside of this approach is that you test it locally, but can't ensure "
"that this will work in a minimal environment. For example will it be hard to "
"ensure that all the required packages are installed for the tests. With "
"`lp:auto-package-testing`_ we have a more comprehensive testing tool. It "
"uses a pristine virtual machine to run the tests. To set it up, firstly "
"install the needed dependencies::"
msgstr ""
"Минус данного подхода — то, что он позволяет запустить тесты на локальной "
"машине, но не даёт никаких гарантий того, что он будет работать в "
"минимальном окружении. Например, будет сложно убедиться, что правильно "
"указаны все нужные зависимости. С `lp:auto-package-testing`_, у нас есть "
"более продвинутые средства тестирования. Они используют «чистую» виртуальную "
"машину для запуска тестов. Чтобы воспользоваться этими средствами, сперва "
"нужно установить необходимые зависимости::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:102
msgid "Then, get the source code from Launchpad::"
msgstr "Затем получите исходный код с Launchpad::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:107
msgid "And provision a Raring AMD64 system::"
msgstr "И подготовьте систему Raring AMD64::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:111
msgid ""
"This command will create a pristine Raring AMD64 VM from a cloud image. To "
"run the tests, simply run::"
msgstr ""
"Эта команда создаст чистую виртуальную машину Raring AMD64 из облачного "
"образа. Для запуска тестов просто выполните::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:117
msgid ""
"This would use the source package in ``/tmp/glib2.0-2.35.7/`` and run the "
"tests from this tree against the package ``glib2.0`` from the archive. The "
"option ``-S`` also supports schemes for bzr, git, and apt sources. If you "
"only specify a source with ``-S`` but do not specify a package name, this "
"will instead build the branch and install the binaries from that build; this "
"is useful if you want to run tests on a newer version than the one packaged "
"in Ubuntu, or the package is not in Ubuntu at all. If use the ``-k`` flag "
"you can log into the virtual machine after the tests were run. This makes it "
"very easy to debug issues."
msgstr ""

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:127
msgid ""
"The `auto-package-testing documentation`_ has a lot more valuable "
"information on other testing options."
msgstr ""
"Больше ценной информации по опциям тестирования можно найти в `auto-package-"
"testing documentation`_."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:133
msgid "Further examples"
msgstr "Дальнейшие примеры"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:135
msgid ""
"This list is not comprehensive, but might help you get a better idea of how "
"automated tests are implemented and used in Ubuntu."
msgstr ""
"Этот список не полон, но может помочь вам получить представление о том, как "
"автоматические тесты реализованы, и как они используются в Ubuntu."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:138
msgid ""
"The `libxml2 tests`_ are very similar. They also run a test-build of a "
"simple piece of C code and execute it."
msgstr ""
"Тесты `libxml2 tests`_ очень похожи. Они также производят тестовую сборку "
"небольшого куска C-кода и запускают его."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:140
msgid ""
"The `gtk+3.0 tests`_ also do a compile/link/run check in the \"build\" test. "
"There is an additional \"python3-gi\" test which verifies that the GTK "
"library can also be used through introspection."
msgstr ""
"Тесты `gtk+3.0 tests`_ также производят проверку компиляции/линковки/запуска "
"в тесте «build». Есть также дополнительный тест «python3-gi», который "
"проверяет, что библиотека GTK может быть использована через механизм "
"интроспекции."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:143
msgid "In the `ubiquity tests`_ the upstream test-suite is executed."
msgstr ""
"В `ubiquity tests`_, выполняются тесты, предоставленные разработчиками."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:144
msgid ""
"The `gvfs tests`_ have comprehensive testing of their functionality and are "
"very interesting because they emulate usage of CDs, Samba, DAV and other "
"bits."
msgstr ""
"Тесты `gvfs tests`_ тестируют различную функциональность gvfs и представляют "
"интерес, так как эмулируют использование CD, Samba, DAV и других компонентов."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:149
msgid "Ubuntu infrastructure"
msgstr "Инфраструктура Ubuntu"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:151
msgid ""
"Packages which have ``autopkgtest`` enabled will have their tests run "
"whenever they get uploaded or any of their reverse-dependencies change. The "
"output of `automatically run autopkgtest tests`_ can be viewed on the web "
"and is regularly updated."
msgstr ""
"Для пакетов с включённым ``autopkgtest`` тесты будут выполняться каждый раз "
"при загрузке новой версии или изменениях обратных зависимостей. Выход "
"`automatically run autopkgtest tests`_ доступен через web-интерфейс и "
"регулярно обновляется."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:156
msgid ""
"While Debian does not have an automatic testing infrastructure set up yet, "
"they should still be submitted to Debian, as DEP-8 is a Debian specification "
"and Debian developers or users can still manually run the tests."
msgstr ""
"Несмотря на то, что у Debian пока нет инфраструктуры автоматического "
"тестирования, тесты следует отправлять в Debian, так как DEP-8 — "
"спецификация Debian, и разработчики и пользователи Debian могут запускать "
"тесты вручную."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:160
msgid ""
"Packages in Debian with a testsuite header will also be automatically added "
"when they are synced to Ubuntu."
msgstr ""
"Пакеты Debian с заголовком ``XS-Testsuite``, скопированные в Ubuntu, также "
"будут добавлены в список тестируемых пакетов."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:164
msgid "Getting the test into Ubuntu"
msgstr "Добавление теста в Ubuntu"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:166
msgid ""
"The process of submitting an autopkgtest for a package is largely similar to "
":doc:`fixing a bug in Ubuntu<./fixing-a-bug>`. Essentially you simply:"
msgstr ""
"Процесс добавления и отправки autopkgtest-теста для пакета похож на "
":doc:`процесс исправления ошибки в Ubuntu<./fixing-a-bug>`. Необходимо "
"просто:"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:169
msgid "run ``bzr branch ubuntu:<packagename>``,"
msgstr "выполните ``bzr branch ubuntu:<имя_пакета>``,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:170
msgid "edit ``debian/control`` to enable the tests,"
msgstr "включите тесты в ``debian/control``,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:171
msgid "add the ``debian/tests`` directory,"
msgstr "создайте директорию ``debian/tests``,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:172
msgid ""
"write the ``debian/tests/control`` based on the `DEP 8 Specification`_,"
msgstr ""
"создайте ``debian/tests/control``, следуя требованиям `DEP 8 Specification`_,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:173
msgid "add your test case(s) to ``debian/tests``,"
msgstr "добавьте ваши тесты в ``debian/tests``,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:174
msgid ""
"commit your changes, push them to Launchpad, propose a merge and get it "
"reviewed just like any other improvement in a source package."
msgstr ""
"закрепить ваши изменения, отправить их на Launchpad, создать заявку на "
"слияние (merge proposal) и дождаться, пока она будет рассмотрена (как и "
"любое другое изменение пакета)."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:179
msgid "What you can do"
msgstr "Чем вы можете помочь"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:181
msgid ""
"The Ubuntu Engineering team put together a `list of required test-cases`_, "
"where packages which need tests are put into different categories. Here you "
"can find examples of these tests and easily assign them to yourself."
msgstr ""
"Команда инженеров Ubuntu создала список необходимых тестов (`list of "
"required test-cases`_), где пакеты, которым требуются тесты, разбиты на "
"различные категории. Там вы можете посмотреть на примеры таких тестов и сами "
"заняться каким-то из них."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:185
msgid ""
"If you should run into any problems, you can join the `#ubuntu-quality IRC "
"channel`_ to get in touch with developers who can help you."
msgstr ""
"Если у вас возникнут какие-то проблемы, зайдите на `#ubuntu-quality IRC "
"channel`_, на котором есть готовые помочь вам разработчики."

#: ../ubuntu-packaging-guide/backports.rst:3
msgid "Backporting software updates"
msgstr "Бэкпортирование обновлений программ"

#: ../ubuntu-packaging-guide/backports.rst:5
msgid ""
"Sometimes you might want to make new functionality available in a stable "
"release which is not connected to a critical bug fix. For these scenarios "
"you have two options: either you `upload to a PPA "
"<https://help.launchpad.net/Packaging/PPA>`_ or prepare a backport."
msgstr ""
"Иногда вам требуется сделать новую функциональность доступной в стабильном "
"выпуске, и это не исправление критической ошибки. Для этого есть две опции: "
"`загрузить пакет в PPA <https://help.launchpad.net/Packaging/PPA>`_ или "
"подготовить бэкпорт."

#: ../ubuntu-packaging-guide/backports.rst:12
msgid "Personal Package Archive (PPA)"
msgstr "Персональные архивы пакетов (PPA)"

#: ../ubuntu-packaging-guide/backports.rst:14
msgid ""
"Using a PPA has a number of benefits. It is fairly straight-forward, you "
"don't need approval of anyone, but the downside of it is that your users "
"will have to manually enable it. It is a non-standard software source."
msgstr ""
"Использование PPA имеет ряд преимуществ. Это достаточно просто, вам не "
"понадобится одобрение от кого бы то ни было, но недостаток в том, что "
"пользователям придётся вручную подключать PPA. Это нестандартный источник "
"приложений."

#: ../ubuntu-packaging-guide/backports.rst:18
msgid ""
"The `PPA documentation on Launchpad`_ is fairly comprehensive and should get "
"you up and running in no time."
msgstr ""
"`Документация по PPA на Launchpad`_ достаточно подробна и на её освоение вам "
"не потребуется много времени."

#: ../ubuntu-packaging-guide/backports.rst:25
msgid "Official Ubuntu Backports"
msgstr "Официальные бэкпорты Ubuntu"

#: ../ubuntu-packaging-guide/backports.rst:27
msgid ""
"The Backports Project is a means to provide new features to users. Because "
"of the inherent stability risks in backporting packages, users do not get "
"backported packages without some explicit action on their part. This "
"generally makes backports an inappropriate avenue for fixing bugs. If a "
"package in an Ubuntu release has a bug, it should be fixed either through "
"the :doc:`Security Update or the Stable Release Update process<./security-"
"and-stable-release-updates>`, as appropriate."
msgstr ""
"Целью проекта Backports является предоставление пользователям новой "
"функциональности. Из-за рисков уменьшения стабильности при портировании "
"новшеств, бэкпорты недоступны пользователям, пока они не включат их. Поэтому "
"бэкпорты не являются местом для исправления ошибок. Если в пакете Ubuntu "
"обнаружена ошибка, она должна быть исправлена через :doc:`обновления "
"безопасности и стабильности<./security-and-stable-release-updates>`."

#: ../ubuntu-packaging-guide/backports.rst:35
msgid ""
"Once you determined you want a package to be backported to a stable release, "
"you will need to test-build and test it on the given stable release. "
"``pbuilder-dist`` (in the ``ubuntu-dev-tools`` package) is a very handy tool "
"to do this easily."
msgstr ""
"Когда вы определите, требуется ли вам адаптировать ваши изменения для "
"стабильного релиза, вам будет необходимо собрать и протестировать ваш пакет "
"на данном релизе. Команда ``pbuilder-dist`` (из пакета ``ubuntu-dev-tools``) "
"поможет вам сделать это."

#: ../ubuntu-packaging-guide/backports.rst:40
msgid ""
"To report the backport request and get it processed by the Backporters team, "
"you can use the ``requestbackport`` tool (also in the ``ubuntu-dev-tools`` "
"package). It will determine the intermediate releases that package needs to "
"be backported to, list all reverse-dependencies, and file the backporting "
"request.  Also will it include a testing checklist in the bug."
msgstr ""
"Чтобы подать заявку на бэкпорт, можно использовать утилиту "
"``requestbackport`` (также из пакета ``ubuntu-dev-tools``). Она определит "
"все промежуточные выпуски, для которых пакет также придётся бэкпортировать, "
"покажет, какие пакеты зависят от данного, и создаст заявку. Она также "
"включит список требуемых тестов в заявку."

#: ../ubuntu-packaging-guide/chroots.rst:3
msgid "Using Chroots"
msgstr "Использование chroot-окружений"

#: ../ubuntu-packaging-guide/chroots.rst:5
msgid ""
"If you are running one version of Ubuntu but working on packages for another "
"versions you can create the environment of the other version with a "
"``chroot``."
msgstr ""
"Если вы пользуетесь одной из версий Ubuntu, но работаете над пакетами для "
"другой версии, вы можете создать среду другой версии с помощью ``chroot``."

#: ../ubuntu-packaging-guide/chroots.rst:9
msgid ""
"A ``chroot`` allows you to have a full filesystem from another distribution "
"which you can work in quite normally.  It avoids the overhead of running a "
"full virtual machine."
msgstr ""
"Использование ``chroot`` позволит вам иметь в распоряжении полную файловую "
"систему другого дистрибутива для удобства работы. Это позволяет избежать "
"затрат, связанных с установкой виртуальной машины."

#: ../ubuntu-packaging-guide/chroots.rst:14
msgid "Creating a Chroot"
msgstr "Создание chroot"

#: ../ubuntu-packaging-guide/chroots.rst:16
msgid "Use the command ``debootstrap`` to create a new chroot::"
msgstr "Используйте команду ``debootstrap``, чтобы создать новый chroot::"

#: ../ubuntu-packaging-guide/chroots.rst:20
msgid ""
"This will create a directory ``oneiric`` and install a minimal oneiric "
"system into it."
msgstr ""
"Это позволит создать каталог ``oneiric`` и установит в него минимальную "
"систему oneiric."

#: ../ubuntu-packaging-guide/chroots.rst:23
msgid ""
"If your version of ``debootstrap`` does not know about oneiric you can try "
"upgrading to the version in ``backports``."
msgstr ""
"Если ваша версия ``debootstrap`` не знает об oneiric, вы можете попробовать "
"обновление до версии ``backports``."

#: ../ubuntu-packaging-guide/chroots.rst:26
msgid "You can then work inside the chroot::"
msgstr "После этого вы можете работать внутри chroot::"

#: ../ubuntu-packaging-guide/chroots.rst:30
msgid ""
"Where you can install or remove any package you wish without affecting your "
"main system."
msgstr ""
"Где можно установить или удалить любой пакет, который вы хотите, без ущерба "
"для основной системы."

#: ../ubuntu-packaging-guide/chroots.rst:33
msgid ""
"You might want to copy your GPG/ssh keys and Bazaar configuration into the "
"chroot so you can access and sign packages directly::"
msgstr ""
"Вы можете скопировать свои ключи GPG и SSH, а также конфигурацию Bazaar в "
"chroot, чтобы получать доступ и подписывать пакеты непосредственно оттуда::"

#: ../ubuntu-packaging-guide/chroots.rst:39
msgid ""
"To stop apt and other programs complaining about missing locales you can "
"install your relevant language pack::"
msgstr ""
"Чтобы apt и другие программы не жаловались на отсутствующие локали, можно "
"установить соответствующий языковой пакет::"

#: ../ubuntu-packaging-guide/chroots.rst:44
msgid ""
"If you want to run X programs you will need to bind the /tmp directory into "
"the chroot, from outside the chroot run::"
msgstr ""
"Если вам нужно запускать программы, использующие X-сервер, вам нужно "
"добавить в chroot директорию /tmp, для этого снаружи chroot запустите::"

#: ../ubuntu-packaging-guide/chroots.rst:50
msgid "Some programs may need you to bind /dev or /proc."
msgstr ""
"Для некоторых программ, возможно, понадобится привязать /dev или /proc."

#: ../ubuntu-packaging-guide/chroots.rst:52
msgid ""
"For more information on chroots see our `Debootstrap Chroot wiki page`_."
msgstr ""
"Более подробную информацию о chroot вы можете найти на нашей странице  "
"`Debootstrap Chroot wiki page`_."

#: ../ubuntu-packaging-guide/chroots.rst:55
msgid "Alternatives"
msgstr "Альтернативы"

#: ../ubuntu-packaging-guide/chroots.rst:57
msgid ""
"SBuild is a system similar to PBuilder for creating an environment to run "
"test package builds in.  It closer matches that used by Launchpad for "
"building packages but takes some more setup compared to PBuilder.  See `the "
"Security Team Build Environment wiki page`_ for a full explanation."
msgstr ""
"SBuild — система, похожая на PBuilder, также позволяет создать окружение и "
"произвести тестовую сборку. Она более похожа на то, что используется на "
"Launchpad для сборки пакетов, но подготовка такого окружения занимает больше "
"времени по сравнению с PBuilder. Смотрите `the Security Team Build "
"Environment wiki page`_ для подробного объяснения."

#: ../ubuntu-packaging-guide/chroots.rst:59
msgid ""
"Full virtual machines can be useful for packaging and testing programs.  "
"TestDrive is a program to automate syncing and running daily ISO images, see "
"`the TestDrive wiki page`_ for more information."
msgstr ""
"Полные виртуальные машины могут быть полезны для упаковки и тестирования "
"программ. TestDrive — это программа, позволяющая автоматизировать "
"синхронизацию и запуск ежедневных ISO-образов, смотрите `вики-страницу "
"TestDrive`_,  чтобы узнать больше."

#: ../ubuntu-packaging-guide/chroots.rst:63
msgid ""
"You can also set up pbuilder to pause when it comes across a build failure.  "
"Copy C10shell from /usr/share/doc/pbuilder/examples into a directory and use "
"the ``--hookdir=`` argument to point to it."
msgstr ""
"Можно также настроить pbuilder так, чтобы он приостанавливался при "
"обнаружении ошибки сборки.  Скопируйте C10shell из "
"/usr/share/doc/pbuilder/examples в каталог и используйте аргумент ``--"
"hookdir=``, чтобы указать на него."

#: ../ubuntu-packaging-guide/chroots.rst:67
msgid ""
"Amazon's `EC2 cloud computers`_ allow you to hire a computer paying a few US "
"cents per hour, you can set up Ubuntu machines of any supported version and "
"package on those.  This is useful when you want to compile many packages at "
"the same time or to overcome bandwidth restraints."
msgstr ""
"`Облачные компьютеры EC2 Amazon`_ позволяют нанимать компьютер за несколько "
"центов в час. Вы можете установить на них Ubuntu любой поддерживаемой версии "
"и пакеты. Это полезно, когда вам надо скомпилировать много пакетов "
"одновременно или преодолеть ограничения пропускной способности."

#: ../ubuntu-packaging-guide/communication.rst:3
msgid "Communication in Ubuntu Development"
msgstr "Связь в  Ubuntu Development"

#: ../ubuntu-packaging-guide/communication.rst:5
msgid ""
"In a project where thousands of lines of code are changed, lots of decisions "
"are made and hundreds of people interact every day, it is important to "
"communicate effectively."
msgstr ""
"В проекте, где подвергаются изменениям тысячи строк кода, принимается "
"множество решений, и где сотни людей должны взаимодействовать каждый день, "
"важно иметь эффективную связь."

#: ../ubuntu-packaging-guide/communication.rst:10
msgid "Mailing lists"
msgstr "Почтовые рассылки"

#: ../ubuntu-packaging-guide/communication.rst:12
msgid ""
"Mailing lists are a very important tool if you want to communicate ideas to "
"a broader team and make sure that you reach everybody, even across timezones."
msgstr ""
"Почтовые рассылки — это достаточно эффективный инструмент, если вы хотите "
"обсудить идеи в команде и убедиться что вы оповестили всех, несмотря на "
"различия в часовых поясах."

#: ../ubuntu-packaging-guide/communication.rst:16
msgid "In terms of development, these are the most important ones:"
msgstr "С точки зрения разработки, это наиболее важные из рассылок:"

#: ../ubuntu-packaging-guide/communication.rst:18
msgid ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel-announce (announce-"
"only, the most important development announcements go here)"
msgstr ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel-announce (только "
"анонсы, самые важные объявления разработки попадают сюда)"

#: ../ubuntu-packaging-guide/communication.rst:20
msgid ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel (general Ubuntu "
"development discussion)"
msgstr ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel (главная дискуссия "
"разработчиков Ubuntu )"

#: ../ubuntu-packaging-guide/communication.rst:22
msgid ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-motu (MOTU Team discussion, "
"get help with packaging)"
msgstr ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-motu (обсуждения команды "
"MOTU, получение справки по созданию пакетов)"

#: ../ubuntu-packaging-guide/communication.rst:27
msgid "IRC Channels"
msgstr "Каналы IRC"

#: ../ubuntu-packaging-guide/communication.rst:29
msgid ""
"For real-time discussions, please connect to irc.freenode.net and join one "
"or any of these channels:"
msgstr ""
"Для онлайн-дискуссии подключитесь к irc.freenode.net и присоединяйтесь к "
"любому из каналов:"

#: ../ubuntu-packaging-guide/communication.rst:32
msgid "#ubuntu-devel (for general development discussion)"
msgstr "#ubuntu-devel (для главной дискуссии разработчиков)"

#: ../ubuntu-packaging-guide/communication.rst:33
msgid "#ubuntu-motu (for MOTU team discussion and generally getting help)"
msgstr "#ubuntu-motu (для обсуждений команды MOTU и получения помощи)"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:2
msgid "Basic Overview of the ``debian/`` Directory"
msgstr "Общий обзор каталога ``debian/``"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:4
msgid ""
"This article will briefly explain the different files important to the "
"packaging of Ubuntu packages which are contained in the ``debian/`` "
"directory. The most important of them are ``changelog``, ``control``, "
"``copyright``, and ``rules``. These are required for all packages. A number "
"of additional files in the ``debian/`` may be used in order to customize and "
"configure the behavior of the package. Some of these files are discussed in "
"this article, but this is not meant to be a complete list."
msgstr ""
"Эта статья даёт краткие пояснения к различным файлам, важным для создания "
"пакетов Ubuntu, которые содержатся в каталоге ``debian/``. Самыми важными из "
"них являются ``changelog``, ``control``, ``copyright``, and ``rules``. Они "
"требуются для всех пакетов. Многие дополнительные файлы в ``debian/`` могут "
"использоваться для настройки и изменения поведения пакета. Некоторые из этих "
"файлов обсуждаются в этой статье, но это далеко не полный список."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:13
msgid "The changelog"
msgstr "Файл changelog"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:15
msgid ""
"This file is, as its name implies, a listing of the changes made in each "
"version. It has a specific format that gives the package name, version, "
"distribution, changes, and who made the changes at a given time. If you have "
"a GPG key (see: :doc:`Getting set up<./getting-set-up/>`), make sure to use "
"the same name and email address in ``changelog`` as you have in your key. "
"The following is a template ``changelog``::"
msgstr ""
"Этот файл, как следует из его названия — это список изменений, внесённых в "
"каждую версию. Он имеет особый формат, который показывает имя пакета, "
"версию, дистрибутив, изменения, и кто вносил изменения в данное время. Если "
"у вас есть ключ GPG (смотрите: :doc:`Подготовка<./getting-set-up/>`), "
"убедитесь, что вы используете в ``changelog`` те же имя и адрес электронной "
"почты, что и в вашем ключе. Ниже приведен шаблон ``changelog``::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:31
msgid ""
"The format (especially of the date) is important. The date should be in "
":rfc:`5322` format, which can be obtained by using the command ``date -R``. "
"For convenience, the command ``dch`` may be used to edit changelog. It will "
"update the date automatically."
msgstr ""
"Формат (особенно даты) важен. Дата должна быть в формате :rfc:`5322`, "
"который можно увидеть при выполнении команды ``date -R``. Для удобства, "
"можно использовать для редактирования changelog команду ``dch``. Она обновит "
"дату автоматически."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:36
msgid ""
"Minor bullet points are indicated by a dash \"-\", while major points use an "
"asterisk \"*\"."
msgstr ""
"Пункты с незначительными изменениями отмечаются дефисом «-», в то время как "
"в важных пунктах используется звездочка «*»."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:39
msgid ""
"If you are packaging from scratch, ``dch --create`` (``dch`` is in the "
"``devscripts`` package) will create a standard ``debian/changelog`` for you."
msgstr ""
"Если вы создаёте пакет «с нуля», ``dch --create`` (``dch`` находится в "
"пакете ``devscripts``) создаст для вас стандартный файл ``debian/changelog``."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:43
msgid "Here is a sample ``changelog`` file for hello::"
msgstr "Вот пример файла ``changelog`` для hello::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:52
msgid ""
"Notice that the version has a ``-0ubuntu1`` appended to it, this is the "
"distro revision, used so that the packaging can be updated (to fix bugs for "
"example) with new uploads within the same source release version."
msgstr ""
"Обратите внимание, что версия имеет ``-0ubuntu1`` добавленный к нему, это - "
"distro версия, используемая так, чтобы упаковка могла быть обновлена (чтобы "
"исправить ошибки, например) с новыми закачками в той же исходной версии "
"выпуска."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:56
msgid ""
"Ubuntu and Debian have slightly different package versioning schemes to "
"avoid conflicting packages with the same source version. If a Debian package "
"has been changed in Ubuntu, it has ``ubuntuX`` (where ``X`` is the Ubuntu "
"revision number) appended to the end of the Debian version. So if the Debian "
"hello ``2.6-1`` package was changed by Ubuntu, the version string would be "
"``2.6-1ubuntu1``. If a package for the application does not exist in Debian, "
"then the Debian revision is ``0`` (e.g. ``2.6-0ubuntu1``)."
msgstr ""
"Ubuntu и Debian используют немного различающиеся схемы нумерации версий "
"пакетов, чтобы избежать конфликта пакетов с одной и той же исходной версией. "
"Если пакет Debian был изменён в Ubuntu, к концу Debian-версии добавляется "
"``ubuntuX`` (где ``X`` — номер редакции в  Ubuntu). Таким образом, если "
"пакет Debian hello ``2.6-1`` был изменён в Ubuntu, номер версии будет ``2.6-"
"1ubuntu1``. Если пакет приложения в Debian не существует, то редакция Debian "
"равна ``0`` (например, ``2.6-0ubuntu1``)."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:64
msgid ""
"For further information, see the `changelog section (Section 4.4) "
"<http://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog>`_ "
"of the Debian Policy Manual."
msgstr ""
"Для дальнейшей информации смотрите `раздел о файле changelog (Раздел 4.4) "
"<http://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog>`_ в "
"«Debian Policy Manual»."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:70
msgid "The control file"
msgstr "Файл control"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:72
msgid ""
"The ``control`` file contains the information that the package manager (such "
"as ``apt-get``, ``synaptic``, and ``adept``) uses, build-time dependencies, "
"maintainer information, and much more."
msgstr ""
"Файл ``control`` содержит информацию, которую использует менеджер пакетов "
"(такой, как ``apt-get``, ``synaptic`` или ``adept``), сборочные зависимости, "
"информацию мэйнтейнера и многое другое."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:76
msgid ""
"For the Ubuntu ``hello`` package, the ``control`` file looks something like "
"this:"
msgstr ""
"Для пакета Ubuntu ``hello`` файл ``control`` выглядит следующим образом:"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:101
msgid ""
"The first paragraph describes the source package including the list of "
"packages required to build the package from source in the ``Build-Depends`` "
"field. It also contains some meta-information such as the maintainer's name, "
"the version of Debian Policy that the package complies with, the location of "
"the packaging version control repository, and the upstream home page."
msgstr ""
"Первый абзац описывает исходный пакет, включая список пакетов, требуемых для "
"сборки данного пакета из исходного кода, в поле ``Build-Depends``. Он также "
"содержит некоторую метаинформацию, такую как имя мэйнтейнера, версию Debian "
"Policy, с которой компилируется пакет, местоположение репозитория управления "
"версиями и домашнюю страницу апстрима."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:108
msgid ""
"Note that in Ubuntu, we set the ``Maintainer`` field to a general address "
"because anyone can change any package (this differs from Debian where "
"changing packages is usually restricted to an individual or a team). "
"Packages in Ubuntu should generally have the ``Maintainer`` field set to "
"``Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>``. If the "
"Maintainer field is modified, the old value should be saved in the ``XSBC-"
"Original-Maintainer`` field. This can be done automatically with the  "
"``update-maintainer`` script available in the ``ubuntu-dev-tools`` package. "
"For further information, see the `Debian Maintainer Field spec "
"<https://wiki.ubuntu.com/DebianMaintainerField>`_ on the Ubuntu wiki."
msgstr ""
"Обратите внимание, что в Ubuntu мы указываем в поле ``Maintainer`` общий "
"адрес, поскольку кто угодно может внести изменения в любой пакет (в отличие "
"от Debian, где изменение пакетов обычно доступно лишь определённому человеку "
"или команде). Обычно в пакетах  Ubuntu в поле ``Maintainer`` указывается "
"``Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>``. Если это поле "
"было изменено, старое значение сохраняется в поле ``XSBC-Original-"
"Maintainer``. Это делается автоматически сценарием ``update-maintainer`` из "
"пакета ``ubuntu-dev-tools``. Дополнительную информацию смотрите в `Debian "
"Maintainer Field spec <https://wiki.ubuntu.com/DebianMaintainerField>`_ на "
"вики-страницах Ubuntu."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:120
msgid "Each additional paragraph describes a binary package to be built."
msgstr ""
"Каждый дополнительный абзац описывает бинарный пакет, который будет создан."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:122
msgid ""
"For further information, see the `control file section (Chapter 5) "
"<http://www.debian.org/doc/debian-policy/ch-controlfields.html>`_ of the "
"Debian Policy Manual."
msgstr ""
"Для получения дополнительной информации смотрите `раздел о файле control "
"(Глава 5) <http://www.debian.org/doc/debian-policy/ch-controlfields.html>`_ "
"в «Debian Policy Manual»."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:128
msgid "The copyright file"
msgstr "Файл copyright"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:130
msgid ""
"This file gives the copyright information for both the upstream source and "
"the packaging. Ubuntu and `Debian Policy (Section 12.5) "
"<http://www.debian.org/doc/debian-policy/ch-docs.html#s-copyrightfile>`_ "
"require that each package installs a verbatim copy of its copyright and "
"license information to ``/usr/share/doc/$(package_name)/copyright``."
msgstr ""
"Этот файл показывает информацию о копирайте на исходный код upstream и "
"файлы, необходимые для сборки пакетов. Ubuntu и `Debian Policy (Section "
"12.5) <http://www.debian.org/doc/debian-policy/ch-docs.html#s-"
"copyrightfile>`_ требуют, чтобы каждый пакет устанавливал сжатую версию "
"информации о копирайте и лицензии в "
"``/usr/share/doc/$(package_name)/copyright``."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:136
msgid ""
"Generally, copyright information is found in the ``COPYING`` file in the "
"program's source directory. This file should include such information as the "
"names of the author and the packager, the URL from which the source came, a "
"Copyright line with the year and copyright holder, and the text of the "
"copyright itself. An example template would be::"
msgstr ""
"Как правило, информацию об авторских правах можно найти в файле ``COPYING`` "
"в каталоге с исходным кодом программы. Этот файл должен включать такую "
"информацию, как имена автора и упаковщика, URL, из которого получен "
"источник, строку со значком копирайта с указанием года и владельца авторских "
"прав, а также сам текст авторского права. Шаблон для примера::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:178
msgid ""
"This example follows the `Machine-readable debian/copyright "
"<http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/>`_ "
"format. You are encouraged to use this format as well."
msgstr ""
"Этот пример соответствует формату `Machine-readable debian/copyright "
"<http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/>`_. Мы "
"рекомендуем вам также использовать этот формат."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:184
msgid "The rules file"
msgstr "Файл rules"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:186
msgid ""
"The last file we need to look at is ``rules``. This does all the work for "
"creating our package. It is a Makefile with targets to compile and install "
"the application, then create the ``.deb`` file from the installed files. It "
"also has a target to clean up all the build files so you end up with just a "
"source package again."
msgstr ""
"Последний файл, который мы рассмотрим, это ``rules``. Он выполняет всю "
"работу по сборке нашего пакета. Это Makefile, в котором есть функции "
"компиляции программы, её установки и создания ``.deb``-пакета из "
"установленных файлов. В нём есть также функция очистки файлов сборки, "
"которая удаляет всё, кроме собственно пакета исходного кода."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:194
msgid ""
"Here is a simplified version of the rules file created by ``dh_make`` (which "
"can be found in the ``dh-make`` package):"
msgstr ""
"Вот упрощённый пример файла rules, созданного ``dh_make`` (который можно "
"найти в пакете ``dh-make``):"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:208
msgid ""
"Let us go through this file in some detail. What this does is pass every "
"build target that ``debian/rules`` is called with as an argument to "
"``/usr/bin/dh``, which itself will call all the necessary ``dh_*`` commands."
msgstr ""
"Давайте рассмотрим этот файл внимательнее. На каждом этапе сборки "
"``debian/rules`` вызывается с аргументом, который передаётся "
"``/usr/bin/dh``, который, в свою очередь, вызывает необходимые команды "
"``dh_*``."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:212
msgid ""
"``dh`` runs a sequence of debhelper commands. The supported sequences "
"correspond to the targets of a ``debian/rules`` file: \"build\", \"clean\", "
"\"install\", \"binary-arch\", \"binary-indep\", and \"binary\". In order to "
"see what commands are run in each target, run::"
msgstr ""
"``dh`` запускает последовательность команд debhelper. Поддерживаемые "
"последовательности соответствуют целям файла ``debian/rules``: «build», "
"«clean», «install», «binary-arch», «binary-indep» и «binary». Чтобы увидеть, "
"какие команды выполняются в каждой цели, наберите::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:221
msgid ""
"Commands in the binary-indep sequence are passed the \"-i\" option to ensure "
"they only work on binary independent packages, and commands in the binary-"
"arch sequences are passed the \"-a\" option to ensure they only work on "
"architecture dependent packages."
msgstr ""
"Командам из последовательности ``binary-indep`` передаётся аргумент ``-i``, "
"чтобы они затрагивали только архитектурно-независимые пакеты, а командам из "
"последовательности ``binary-arch`` — аргумент ``-a``, чтобы онм затрагивали "
"только архитектурно-зависимые пакеты."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:226
msgid ""
"Each debhelper command will record when it's successfully run in "
"``debian/package.debhelper.log``. (Which dh_clean deletes.) So dh can tell "
"which commands have already been run, for which packages, and skip running "
"those commands again."
msgstr ""
"Каждая команда debhelper  при  её успешном выполненении делает запись в "
"журнале ``debian/package.debhelper.log`` (который затем удаляет dh_clean.) "
"Таким образом dh может определить, какие команды уже были выполнены и для "
"каких пакетов, что помогает избежать повторного выполнения этих команд."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:231
msgid ""
"Each time ``dh`` is run, it examines the log, and finds the last logged "
"command that is in the specified sequence. It then continues with the next "
"command in the sequence. The ``--until``, ``--before``, ``--after``, and ``--"
"remaining`` options can override this behavior."
msgstr ""
"При каждом запуске ``dh`` он изучает журнал, находит добавленные последними "
"команды, которые относятся к указанной последовательности. Затем он "
"продолжает выполнение со следующей команды в этой последовательности. Опции "
"``--until``, ``--before``, ``--after`` и ``--remaining`` могут изменить это "
"поведение."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:236
msgid ""
"If ``debian/rules`` contains a target with a name like "
"``override_dh_command``, then when it gets to that command in the sequence, "
"``dh`` will run that target from the rules file, rather than running the "
"actual command. The override target can then run the command with additional "
"options, or run entirely different commands instead. (Note that to use this "
"feature, you should Build-Depend on debhelper 7.0.50 or above.)"
msgstr ""
"Если в ``debian/rules`` есть функция с именем, похожим на "
"``override_dh_команда``, то вместо данной команды ``dh`` выполнит данную "
"функцию. Эта функция может запустить ту же команду с другими аргументами, "
"или же совершенно другую команду. (Замечание: для использования этой "
"функциональности при сборке требуется пакет debhelper версии не менее "
"7.0.50)."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:245
msgid ""
"Have a look at ``/usr/share/doc/debhelper/examples/`` and ``man dh`` for "
"more examples. Also see `the rules section (Section 4.9) "
"<http://www.debian.org/doc/debian-policy/ch-source.html#s-debianrules>`_ of "
"the Debian Policy Manual."
msgstr ""
"За дополнительными примерами обратитесь к "
"``/usr/share/doc/debhelper/examples/`` и ``man dh``. Смотрите также `раздел "
"о файле  rules (Раздел 4.9) <http://www.debian.org/doc/debian-policy/ch-"
"source.html#s-debianrules>`_ в «Debian Policy Manual»."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:251
msgid "Additional Files"
msgstr "Дополнительные файлы"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:254
msgid "The install file"
msgstr "Файл install"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:256
msgid ""
"The ``install`` file is used by ``dh_install`` to install files into the "
"binary package. It has two standard use cases:"
msgstr ""
"Файл ``install`` используется  ``dh_install`` для установки файлов в "
"двоичный пакет. Он имеет два стандартных варианта использования:"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:259
msgid ""
"To install files into your package that are not handled by the upstream "
"build system."
msgstr ""
"Для установки в ваш пакет файлов, не установленных оригинальной системой "
"сборки."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:260
msgid ""
"Splitting a single large source package into multiple binary packages."
msgstr ""
"Разделение одного большого пакета источника на несколько бинарных пакетов."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:262
msgid ""
"In the first case, the ``install`` file should have one line per file "
"installed, specifying both the file and the installation directory. For "
"example, the following ``install`` file would install the script ``foo`` in "
"the source package's root directory to ``usr/bin`` and a desktop file in the "
"``debian`` directory to ``usr/share/applications``::"
msgstr ""
"В первом случае файл ``install`` должен содержать одну строку для каждого "
"устанавливаемого файла, указывающую как файл, так и установочный каталог. "
"Например, следующий файл ``install`` установит сценарий ``foo`` из корневого "
"каталога пакета исходного кода в ``usr/bin`` и desktop-файл из каталога "
"``debian`` в ``usr/share/applications``::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:273
msgid ""
"When a source package is producing multiple binary packages ``dh`` will "
"install the files into ``debian/tmp`` rather than directly into "
"``debian/<package>``. Files installed into ``debian/tmp`` can then be moved "
"into separate binary packages using multiple ``$package_name.install`` "
"files. This is often done to split large amounts of architecture independent "
"data out of architecture dependent packages and into ``Architecture: all`` "
"packages. In this case, only the name of the files (or directories) to be "
"installed are needed without the installation directory. For example, "
"``foo.install`` containing only the architecture dependent files might look "
"like::"
msgstr ""
"Если пакет исходного кода производит несколько двоичных пакетов, ``dh`` "
"установит файлы в ``debian/tmp`` вместо установки непосредственно в "
"``debian/<пакет>``. Файлы, установленные в ``debian/tmp`` затем можно "
"переместить в отдельные двоичные пакеты с помощью нескольких файлов "
"``$имя_пакета.install``. Это часто делается, чтобы разбить большое "
"количество не зависящих от архитектуры данных из зависящих от архитектуры "
"пакетов в пакеты ``Architecture: all``. В этом случае нужно указать только "
"имена устанавливаемых файлов (или каталогов), без установочного каталога. "
"Например, ``foo.install``, содерщащий только зависящие от архитектуры файлы, "
"может выглядеть наподобие::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:286
msgid ""
"While ``foo-common.install`` containing only the architecture independent "
"file might look like::"
msgstr ""
"В то время как ``foo-common.install``, содержащий только не зависящие от "
"архитектуры файлы, может выглядеть так::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:294
msgid ""
"This would create two binary packages, ``foo`` and ``foo-common``. Both "
"would require their own paragraph in ``debian/control``."
msgstr ""
"Будут созданы два двоичных пакета: ``foo`` и ``foo-common``. Для обоих "
"требуется их собственный абзац в ``debian/control``."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:297
msgid ""
"See ``man dh_install`` and the `install file section (Section 5.11) "
"<http://www.debian.org/doc/manuals/maint-guide/dother.en.html#install>`_  of "
"the Debian New Maintainers' Guide for additional details."
msgstr ""
"Для дополнительных подробностей смотрите ``man dh_install`` и `раздел о "
"файле install (Раздел 5.11) <http://www.debian.org/doc/manuals/maint-"
"guide/dother.en.html#install>`_  в «Debian New Maintainers' Guide»."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:302
msgid "The watch file"
msgstr "Файл watch"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:304
msgid ""
"The ``debian/watch`` file allows us to check automatically for new upstream "
"versions using the tool ``uscan`` found in the ``devscripts`` package. The "
"first line of the watch file must be the format version (3, at the time of "
"this writing), while the following lines contain any URLs to parse. For "
"example::"
msgstr ""
"Файл ``debian/watch`` позволяет автоматически проверять наличие новых версий "
"в апстриме с помощью инструмента ``uscan`` из пакета ``devscripts``. Первой "
"строкой файла watch должна быть версия формата (3 на момент написания этого "
"руководства), а следующий строки содержат любые URL для анализа. Например::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:313
msgid ""
"Running ``uscan`` in the root source directory will now compare the upstream "
"version number in ``debian/changelog`` with the latest available upstream "
"version. If a new upstream version is found, it will be automatically "
"downloaded. For example::"
msgstr ""
"Запуск ``uscan`` в корневом каталоге исходников сравнит номер апстрим-версии "
"в ``debian/changelog`` с последней доступной в апстриме версией. Если в "
"апстриме найдена новая версия, она будет автоматически загружена. Например::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:326
msgid ""
"If your tarballs live on Launchpad, the ``debian/watch`` file is a little "
"more complicated (see `Question 21146`_ and `Bug 231797`_ for why this is).  "
"In that case, use something like::"
msgstr ""
"Если ваши тарболы «живут» на Launchpad, файл ``debian/watch`` будет немного "
"более сложным (о том, почему это так, смотрите `Question 21146`_ и `Bug "
"231797`_).  В этом случае используйте что-то наподобие::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:333
msgid ""
"For further information, see ``man uscan`` and the `watch file section "
"(Section 4.11) <http://www.debian.org/doc/debian-policy/ch-source.html#s-"
"debianwatch>`_ of the Debian Policy Manual."
msgstr ""
"Дополнительные сведения смотрите в ``man uscan`` и в `разделе о файле watch "
"(Раздел 4.11) <http://www.debian.org/doc/debian-policy/ch-source.html#s-"
"debianwatch>`_ «Debian Policy Manual»."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:337
msgid ""
"For a list of packages where the ``watch`` file reports they are not in sync "
"with upstream see `Ubuntu External Health Status "
"<http://qa.ubuntuwire.org/uehs/no_updated.html>`_."
msgstr ""
"Список пакетов, для которых файл ``watch`` сообщает о том, что они не "
"синхронизированы с апстримом, смотрите `Ubuntu External Health Status "
"<http://qa.ubuntuwire.org/uehs/no_updated.html>`_."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:342
msgid "The source/format file"
msgstr "Файл source/format"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:344
msgid ""
"This file indicates the format of the source package. It should contain a "
"single line indicating the desired format:"
msgstr ""
"Этот файл указывает формат пакета исходного кода. Он должен содержать одну "
"строку, показывающую выбранный формат:"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:347
msgid "``3.0 (native)`` for Debian native packages (no upstream version)"
msgstr ""
"``3.0 (native)`` для «родных» пакетов Debian (апстрим-версия отсутствует)"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:349
msgid "``3.0 (quilt)`` for packages with a separate upstream tarball"
msgstr "``3.0 (quilt)`` для пакетов с отдельным тарболом из апстрима"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:351
msgid "``1.0`` for packages wishing to explicitly declare the default format"
msgstr "``1.0`` для пакетов, желающих явно указать формат по умолчанию"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:353
msgid ""
"Currently, the package source format will default to 1.0 if this file does "
"not exist. You can make this explicit in the source/format file. If you "
"choose not to use this file to define the source format, Lintian will warn "
"about the missing file. This warning is informational only and may be safely "
"ignored."
msgstr ""
"В настоящее время по умолчанию выбирается формат пакета исходного кода 1.0, "
"если этот файл отсутствует. В файле source/format можно указать его явно. "
"Если вы не используете этот файл для указания формата исходного кода, "
"Lintian выдаст предупреждение об отстутствии файла. Это чисто информационное "
"предупреждение и его можно без опасений проигнорировать."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:358
msgid ""
"You are encouraged to use the newer 3.0 source format. It provides a number "
"of new features:"
msgstr ""
"Рекомендуется использовать более новый формат 3.0. Он предоставляет "
"некоторые новые возможности:"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:361
msgid "Support for additional compression formats: bzip2, lzma and xz"
msgstr "Поддержка дополнительных форматов сжатия: bzip2, lzma и xz"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:363
msgid "Support for multiple upstream tarballs"
msgstr "Поддержка нескольких архивов с оригинальным исходным кодом"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:365
msgid ""
"Not necessary to repack the upstream tarball to strip the debian directory"
msgstr ""
"Необязательно перепаковывать архив с оригинальным исходным кодом, чтобы "
"удалить директорию ``debian``."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:367
msgid ""
"Debian-specific changes are no longer stored in a single .diff.gz but in "
"multiple patches compatible with quilt under ``debian/patches/``"
msgstr ""
"Специфичные для Debian изменения теперь хранятся не в одном файле .diff.gz, "
"а в виде нескольких патчей, совместимых с quilt, в каталоге "
"``debian/patches/``"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:369
msgid ""
"http://wiki.debian.org/Projects/DebSrc3.0 summarizes additional information "
"concerning the switch to the 3.0 source package formats."
msgstr ""
"http://wiki.debian.org/Projects/DebSrc3.0 подытоживает дополнительную "
"информацию, касающуюся перехода на формат пакетов исходого кода 3.0."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:372
msgid ""
"See ``man dpkg-source`` and the `source/format section (Section 5.21) "
"<http://www.debian.org/doc/manuals/maint-guide/dother.en.html#sourcef>`_  of "
"the Debian New Maintainers' Guide for additional details."
msgstr ""
"Для получения дополнительных подробностей смотрите  ``man dpkg-source`` и "
"`раздел о файле source/format (Раздел 5.21) "
"<http://www.debian.org/doc/manuals/maint-guide/dother.en.html#sourcef>`_  в "
"«Debian New Maintainers' Guide»."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:377
msgid "Additional Resources"
msgstr "Дополнительные ресурсы"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:379
msgid ""
"In addition to the links to the Debian Policy Manual in each section above, "
"the Debian New Maintainers' Guide has more detailed descriptions of each "
"file. `Chapter 4, \"Required files under the debian directory\" "
"<http://www.debian.org/doc/maint-guide/dreq.en.html>`_ further discusses the "
"control, changelog, copyright and rules files. `Chapter 5, \"Other files "
"under the debian directory\" <http://www.debian.org/doc/maint-"
"guide/dother.en.html>`_ discusses additional files that may be used."
msgstr ""
"В дополнение к ссылкам на «Debian Policy Manual» в каждом вышеприведённом "
"разделе, «Debian New Maintainers' Guide» содержит более подробное описание "
"каждого файла. `Глава 4, «Required files under the debian directory» "
"<http://www.debian.org/doc/maint-guide/dreq.en.html>`_ описывает файлы "
"control, changelog, copyright и rules. В `Главе 5, «Other files under the "
"debian directory» <http://www.debian.org/doc/maint-guide/dother.en.html>`_ "
"описаны дополнительные файлы, которые могут быть использованы."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:3
msgid "Fixing a bug in Ubuntu"
msgstr "Исправление ошибок в Ubuntu"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:6
#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:9
msgid "Introduction"
msgstr "Вступление"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:8
msgid ""
"If you followed the instructions to :doc:`get set up with Ubuntu "
"Development<./getting-set-up>`, you should be all set and ready to go."
msgstr ""
"Если вы следовали инструкциям по :doc:`подготовке к разработке "
"Ubuntu<./getting-set-up>`, всё должно быть уже готово к работе."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:13
msgid ""
"As you can see in the image above, there is no surprises in the process of "
"fixing bugs in Ubuntu: you found a problem, you get the code, work on the "
"fix, test it, push your changes to Launchpad and ask for it to be reviewed "
"and merged. In this guide we will go through all the necessary steps one by "
"one."
msgstr ""
"Как вы можете видеть на картинке выше, в процессе исправления ошибок в "
"Ubuntu нет никаких сюрпризов: вы находите проблему, получаете код, "
"исправляете его, тестируете, отправляете на Launchpad и просите, чтобы его "
"проверили и объединили с основным кодом. В этом руководстве мы пройдем через "
"все необходимые шаги, один за другим."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:20
msgid "Finding the problem"
msgstr "Поиск проблемы"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:22
msgid ""
"There are a lot of different ways to find things to work on. It might be a "
"bug report you are encountering yourself (which gives you a good opportunity "
"to test the fix), or a problem you noted elsewhere, maybe in a bug report."
msgstr ""
"Существуют различные способы найти, над чем можно поработать. Это может быть "
"ошибка, которую вы обнаружили сами (что даёт вам отличную возможность "
"проверить своё исправление) или проблема, которую вы заметили где-то ещё, "
"например в отчёте об ошибке."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:26
msgid ""
"`Harvest <http://harvest.ubuntu.com/>`_ is where we keep track of various "
"TODO lists regarding Ubuntu development. It lists bugs that were fixed "
"upstream or in Debian already, lists small bugs (we call them 'bitesize'), "
"and so on. Check it out and find your first bug to work on."
msgstr ""
"`Harvest <http://harvest.ubuntu.com/>`_ хранит различные списки TODO, "
"касающиеся разработки Ubuntu. Это списки ошибок, которые были уже исправлены "
"в апстриме или в Debian, списки небольших ошибок (мы называем их «bitesize») "
"и так далее. Просмотрите их и найдите ошибку, исправлением которой вы хотите "
"заняться."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:35
msgid "Figuring out what to fix"
msgstr "Выяснение того, что нужно исправить"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:37
msgid ""
"If you don't know the source package containing the code that has the "
"problem, but you do know the path to the affected program on your system, "
"you can discover the source package that you'll need to work on."
msgstr ""
"Если вы не знаете, в каком пакете исходного кода содержится ошибка, но "
"знаете путь к этому приложению в вашей системе, то вы сможете найти пакет "
"исходного кода, над которым требуется поработать."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:41
msgid ""
"Let's say you've found a bug in Tomboy, a note taking desktop application. "
"The Tomboy application can be started by running ``/usr/bin/tomboy`` on the "
"command line.  To find the binary package containing this application, use "
"this command::"
msgstr ""
"Предположим, вы обнаружили ошибку в Tomboy, приложении для создания заметок "
"на рабочем столе. Приложение Tomboy можно запустить, выполнив "
"``/usr/bin/tomboy`` в командной строке.  Чтобы найти двоичный пакет, "
"содержащий это приложение, используйте следующую команду::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:48
msgid "This would print out::"
msgstr "Команда выведет следующую информацию::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:52
msgid ""
"Note that the part preceding the colon is the binary package name.  It's "
"often the case that the source package and binary package will have "
"different names. This is most common when a single source package is used to "
"build multiple different binary packages.  To find the source package for a "
"particular binary package, type::"
msgstr ""
"Обратите внимание на то, что часть, предшествующая двоеточию, является "
"именем двоичного пакета. Часто бывает так, что у пакета исходного кода и "
"двоичного пакета различные имена. Чаще всего это происходит, когда один "
"пакет исходного кода используется, чтобы создать несколько различных "
"двоичных пакетов. Чтобы найти исходный пакет для определенного двоичного "
"пакета, введите::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:63
msgid "``apt-cache`` is part of the standard installation of Ubuntu."
msgstr "Команда ``apt-cache`` установлена в Ubuntu по умолчанию."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:66
msgid "Getting the code"
msgstr "Получение кода"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:68
msgid ""
"Once you know the source package to work on, you will want to get a copy of "
"the code on your system, so that you can debug it.  In Ubuntu Distributed "
"Development this is done by :ref:`branching the source package <branching>` "
"branch corresponding to the source package.  Launchpad maintains source "
"package branches for all the packages in Ubuntu."
msgstr ""
"Когда вы знаете, над каким пакетом исходного кода работать, вы можете "
"загрузить копию этого пакета, и заняться отладкой. При распределённой "
"разработке Ubuntu это делается при помощи :ref:`клонирования bzr-репозитория "
"<branching>` этого пакета. Launchpad поддерживает Bazaar-ветки для всех "
"пакетов в Ubuntu."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:74
msgid ""
"Once you've got a local branch of the source package, you can investigate "
"the bug, create a fix, and upload your proposed fix to Launchpad, in the "
"form of a Bazaar branch.  When you are happy with your fix, you can "
":ref:`submit a merge proposal <merge-proposal>`, which asks other Ubuntu "
"developers to review and approve your change.  If they agree with your "
"changes, an Ubuntu developer will upload the new version of the package to "
"Ubuntu so that everyone gets the benefit of your excellent fix - and you get "
"a little bit of credit.  You're now on your way to becoming an Ubuntu "
"developer!"
msgstr ""
"Как только вы получили локальную копию исходного кода, вы можете исследовать "
"ошибку, исправить её, и отправить своё исправление на Launchpad, в виде "
"Bazaar-ветки. Как только вы станете достаточно уверены в своём исправлении, "
"вы можете отправить :ref:`заявку на слияние <merge-proposal>`, то есть "
"попросить других разработчиков просмотреть и одобрить ваше изменение. В "
"случае согласия с вашими изменениями они загрузят ваши изменения в "
"репозиторий. От вашего изменения получать пользу все — в том числе и вы, чьё "
"имя будет стоять в списке изменений. Вы теперь на пути становления "
"разработчиком Ubuntu!"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:83
msgid ""
"We'll describe specifics on how to branch the code, push your fix, and "
"request a review in the following sections."
msgstr ""
"Мы опишем специфику загрузки кода, отправки изменений, и создания заявки на "
"просмотр в следующимх разделах."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:89
msgid "Work on a fix"
msgstr "Исправление ошибки"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:91
msgid ""
"There are entire books written about finding bugs, fixing them, testing "
"them, etc. If you are completely new to programming, try to fix easy bugs "
"such as obvious typos first. Try to keep changes as minimal as possible and "
"document your change and assumptions clearly."
msgstr ""
"Есть целые книги о нахождении ошибок, их исправлении, тестировании и так "
"далее. Если вы новичок в программировании, попробуйте исправлять лёгкие "
"ошибки, такие как опечатки. Пытайтесь делать ваши изменения минимальными и "
"чётко документировать ваши изменения и предположения."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:96
msgid ""
"Before working on a fix yourself, make sure to investigate if nobody else "
"has fixed it already or is currently working on a fix. Good sources to check "
"are:"
msgstr ""
"Перед тем, как работать над ошибкой, убедитесь, что она не исправлена уже "
"кем-то другим, и никто не занимается в данный момент её исправлением. Не "
"помешает проверить следующие источники:"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:99
msgid "Upstream (and Debian) bug tracker (open and closed bugs),"
msgstr ""
"Система отслеживания ошибок апстрима (и Debian) — открытые и закрытые ошибки,"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:100
msgid ""
"Upstream revision history (or newer release) might have fixed the problem,"
msgstr ""
"История версий в апстриме (или в новой версии) может содержать сведения об "
"исправлении ошибки,"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:101
msgid "bugs or package uploads of Debian or other distributions."
msgstr ""
"отчёты об ошибках и новые версии пакетов в Debian и других дистрибутивах."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:106
msgid ""
"You now want to create a patch which includes the fix.  The command ``edit-"
"patch`` is a simple way to add a patch to a package. Run::"
msgstr ""
"Теперь можно создать патч, содержащий исправление ошибки.  Команда ``edit-"
"patch`` — самый простой способ добавить патч к пакету. Выполните::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:111
msgid ""
"This will copy the packaging to a temporary directory.  You can now edit "
"files with a text editor or apply patches from upstream, for example::"
msgstr ""
"Эта команда скопирует файлы, необходимые для сборки пакета, во временную "
"директорию. Вы можете изменять эти файлы в текстовом редакторе или применять "
"патчи из upstream, например::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:116
msgid ""
"After editing the file type ``exit`` or press ``control-d`` to quit the "
"temporary shell.  The new patch will have been added into ``debian/patches``."
msgstr ""
"После редактирования файла наберите ``exit`` или нажмите ``control-d``, "
"чтобы выйти из временной командной оболочки.  Новый патч будет добавлен в "
"``debian/patches``."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:121
#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:204
msgid "Testing the fix"
msgstr "Тестирование исправления"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:123
msgid "To build a test package with your changes, run these commands::"
msgstr ""
"Чтобы собрать тестовый пакет с вашими изменениями, выполните следующие "
"команды::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:128
msgid ""
"This will create a source package from the branch contents (``-us -uc`` will "
"just omit the step to sign the source package) and ``pbuilder-dist`` will "
"build the package from source for whatever ``release`` you choose."
msgstr ""
"Это создаст пакет исходного кода из содержимого ветки (``-us -uc`` просто "
"позволяет пропустить этап подписывания пакета исходного кода), а ``pbuilder-"
"dist`` соберёт пакет из исходного кода для любого выбранного вами ``релиза``."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:132
msgid ""
"Once the build succeeds, install the package from "
"``~/pbuilder/<release>_result/`` (using ``sudo dpkg -i "
"<package>_<version>.deb``).  Then test to see if the bug is fixed."
msgstr ""
"После успешного завершения сборки установите пакет из "
"``~/pbuilder/<release>_result/`` (с помощью ``sudo dpkg -i "
"<пакет>_<версия>.deb``).  Затем проверьте, удалось ли устранить ошибку."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:139
#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:155
msgid "Documenting the fix"
msgstr "Документирование исправления"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:141
msgid ""
"It is very important to document your change sufficiently so developers who "
"look at the code in the future won't have to guess what your reasoning was "
"and what your assumptions were. Every Debian and Ubuntu package source "
"includes ``debian/changelog``, where changes of each uploaded package are "
"tracked."
msgstr ""
"Очень важно документировать свои изменения в достаточной степени, чтобы "
"разработчикам впоследствии не пришлось гадать, какими были основания и "
"предпосылки сделанных вами изменений. Каждый пакет исходного кода Debian и "
"Ubuntu включает в себя файл ``debian/changelog``, в котором отслеживаются "
"вносимые в пакет изменения."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:146
msgid "The easiest way to update this is to run::"
msgstr "Самый простой способ обновить его — это выполнить::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:150
msgid ""
"This will add a boilerplate changelog entry for you and launch an editor "
"where you can fill in the blanks. An example of this could be::"
msgstr ""
"Эта команда добавит в файл шаблон записи и запустит редактор, в котором вы "
"сможете добавить недостающую информацию. Вот пример этой записи::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:159
msgid ""
"``dch`` should fill out the first and last line of such a changelog entry "
"for you already. Line 1 consists of the source package name, the version "
"number, which Ubuntu release it is uploaded to, the urgency (which almost "
"always is 'low'). The last line always contains the name, email address and "
"timestamp (in :rfc:`5322` format) of the change."
msgstr ""
"Команда ``dch`` должна заполнить первую и последнюю строку этой записи в "
"файле changelog. Первая строка содержит имя пакета исходного кода, номер его "
"версии, в какой релиз Ubuntu он загружен, срочность (почти всегда низкая — "
"'low'). Последняя строка всегда содержит имя, адрес электронной почты и "
"метку времени изменения (в формате :rfc:`5322`)."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:165
msgid ""
"With that out of the way, let's focus on the actual changelog entry itself: "
"it is very important to document:"
msgstr ""
"Теперь давайте сфокусируемся на том, что должно содержаться в самой записи "
"файла changelog. Очень важно задокументировать:"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:168
msgid "where the change was done"
msgstr "где сделано изменение"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:169
msgid "what was changed"
msgstr "что было изменено"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:170
msgid "where the discussion of the change happened"
msgstr "где происходило обсуждение этого изменения"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:172
msgid ""
"In our (very sparse) example the last point is covered by ``(LP: #123456)`` "
"which refers to Launchpad bug 123456. Bug reports or mailing list threads or "
"specifications are usually good information to provide as a rationale for a "
"change. As a bonus, if you use the ``LP: #<number>`` notation for Launchpad "
"bugs, the bug will be automatically closed when the package is uploaded to "
"Ubuntu."
msgstr ""
"В нашем (довольно редком) примере последнему пункту соответствует ``(LP: "
"#123456)``, то есть сслыка на ошибку на Launchpad с номером 123456. Отчёты "
"об ошибках, темы списков рассылки или спецификации обычно являются хорошими "
"источниками информации для обоснования изменений. В качестве дополнительного "
"приза, если вы используете нотацию ``LP: #<номер>`` для ошибок на Launchpad, "
"то ошибка автоматически получит статус закрытой при отправке пакета в Ubuntu."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:181
msgid "Committing the fix"
msgstr "Закрепление изменения"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:183
msgid "With the changelog entry written and saved, you can just run::"
msgstr "Написав и сохранив запись в changelog, мы можем просто запустить::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:187
msgid ""
"and the change will be committed (locally) with your changelog entry as a "
"commit message."
msgstr ""
"и изменение будет залито (локально) с вашей записью changelog в качестве "
"сообщения коммита."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:190
msgid ""
"To push it to Launchpad, as the remote branch name, you need to stick to the "
"following nomenclature::"
msgstr ""
"Для Launchpad-репозитория, в который отправлять ваши изменения, используйте "
"cледующее имя::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:195
msgid "This could for example be::"
msgstr "Это может быть, например::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:199
msgid "So if you just run::"
msgstr "Так что, если вы просто выполните::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:204
msgid ""
"you should be all set. The push command should push it to Launchpad and the "
"second command will open the Launchpad page of the remote branch in your "
"browser. There find the \"(+) Propose for merging\" link, click it to get "
"the change reviewed by somebody and included in Ubuntu."
msgstr ""
"всё должно быть готово. Команда push выполнит отправку на Launchpad, а "
"вторая команда откроет страницу удалённой ветки на Launchpad в вашем "
"браузере. Найдите там ссылку «(+) Propose for merging» и щёлкните на ней, "
"чтобы кто-нибудь проверил изменение и включил его в Ubuntu."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:209
msgid ""
"Our article about :doc:`seeking sponsorship<./udd-sponsorship>` goes into "
"more detail about getting feedback for your proposed changes."
msgstr ""
"Наша статья о :doc:`поиске поручительства<./udd-sponsorship>` предоставляет "
"дополнительные подробности о получении обратной связи для предложенных вами "
"изменений."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:212
msgid ""
"If your branch fixes issues in stable releases or it is a security fix, you "
"might want to have a look at our :doc:`Security and stable release "
"updates<./security-and-stable-release-updates>` article."
msgstr ""
"Если ваша ветка исправляет ошибку в стабильном выпуске или это исправление "
"безопасности, прочтите нашу статью :doc:`Обновления безопасности и "
"стабильных выпусков<./security-and-stable-release-updates>`."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:3
msgid "Tutorial: Fixing a bug in Ubuntu"
msgstr "Демонстрация: исправление ошибки в Ubuntu"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:5
msgid ""
"While the mechanics for :doc:`fixing a bug<./fixing-a-bug>` are the same for "
"every bug, every problem you look at is likely to be different from another. "
"An example of a concrete problem might help to get an idea what to consider "
"generally."
msgstr ""
"Хотя техника :doc:`исправления ошибки<./fixing-a-bug>` одинакова для любых "
"ошибок, каждая ошибка всё же в чём то отличается от других. Данный пример "
"исправления конкретной ошибки может помочь вам понять, что обычно следует "
"принять во внимание."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:10
msgid ""
"At the time of writing this article this was not fixed yet. When you are "
"reading the article this might actually be fixed. Take this as an example "
"and try to adapt it to the specific problem you are facing."
msgstr ""
"Во время написания данной статьи эта ошибка ещё не была исправлена. "
"Возможно, у тому времени, когда вы будете читать статью, ошибку уже "
"исправят. Считайте это просто примером и постарайте адаптировать его к "
"конкретной проблеме, с которой вы столкнётесь."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:15
msgid "Confirming the problem"
msgstr "Подтверждение проблемы"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:17
msgid ""
"Let's say the package ``bumprace`` does not have a homepage in its package "
"description. As a first step you would check if the problem is not solved "
"already. This is easy to check, either take a look at Software Center or "
"run::"
msgstr ""
"Предположим, в описании пакета ``bumprace`` отсутствует информация о его "
"домашней странице. В качестве первого шага, следует проверить, не исправлена "
"ли уже эта ошибка. Сделать это просто: посмотрите в Центре приложений или "
"запустите::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:23
msgid "The output should be similar to this::"
msgstr "Вывод команды должен быть примерно следующим::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:49
msgid "A counter-example would be ``gedit``, which has a homepage set::"
msgstr ""
"В качестве контрпримера можно привести ``gedit``, где домашняя страница "
"указана::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:55
msgid ""
"Sometimes you will find that a particular problem you are looking into is "
"already fixed. To avoid wasting efforts and duplicating work it makes sense "
"to first do some detective work."
msgstr ""
"В некоторых случаях вы можете столкнуться с тем, что проблема, решение "
"которой вы ищете, уже кем-то устранена. Чтобы избежать напрасной траты "
"времени и труда, имеет смысл проделать кое-какую детективную работу."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:61
msgid "Research bug situation"
msgstr "Изучение ситуации с ошибкой"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:63
msgid ""
"First we should check if a bug for the problem exists in Ubuntu already. "
"Maybe somebody is working on a fix already, or we can contribute to the "
"solution somehow. For Ubuntu we have a quick look at "
"https://bugs.launchpad.net/ubuntu/+source/bumprace and there is no open bug "
"with our problem there."
msgstr ""
"Сначала нужно проверить, не существует ли уже сообщения об этой ошибке в "
"Ubuntu. Возможно, кто-то уже работает над её исправлением, или мы можем как-"
"то внести свой вклад в решение этой проблемы. Для Ubuntu мы взглянем на "
"https://bugs.launchpad.net/ubuntu/+source/bumprace и увидим, что открытого "
"отчёта о нашей ошибке там нет."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:69
msgid ""
"For Ubuntu the URL ``https://bugs.launchpad.net/ubuntu/+source/<package>`` "
"should always take to the bug page of the source package in question."
msgstr ""
"Для Ubuntu URL ``https://bugs.launchpad.net/ubuntu/+source/<пакет>`` всегда "
"приводит на страницу ошибок в указанном пакете исходного кода."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:73
msgid ""
"For Debian, which is the major source for Ubuntu's packages, we have a look "
"at http://bugs.debian.org/src:bumprace and can't find a bug report for our "
"problem either."
msgstr ""
"В Debian, который является основным источником пакетов Ubuntu мы взглянем на "
"http://bugs.debian.org/src:bumprace и также не найдём там сообщения о нашей "
"ошибке."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:77
msgid ""
"For Debian the URL ``http://bugs.debian.org/src:<package>`` should always "
"take to the bug page of the source package in question."
msgstr ""
"Для Debian URL ``http://bugs.debian.org/src:<пакет>`` всегда приводит на "
"страницу ошибок в указанном пакете исходного кода."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:80
msgid ""
"The problem we are working on is special as it only concerns the packaging-"
"related bits of ``bumprace``. If it was a problem in the source code it "
"would be helpful to also check the Upstream bug tracker. This is "
"unfortunately often different for every package you have a look at, but if "
"you search the web for it, you should in most cases find it pretty easily."
msgstr ""
"Ошибка, над которой мы работаем, необычна в том смысле, что она касается "
"только пакетирования ``bumprace``. Если бы это была ошибка в исходном коде, "
"полезно было бы также проверить систему отслеживания ошибок апстрима. К "
"сожалению, эта процедура часто различается для каждого отдельного пакета, но "
"всегда можно воспользоваться поиском в интернете, и в большинстве случаев вы "
"обнаружите, что она окажется не такой уж сложной."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:88
msgid "Offering help"
msgstr "Предложение помощи"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:90
msgid ""
"If you found an open bug and it is not assigned to somebody and you are in a "
"position to fix it, you should comment on it with your solution. Be sure to "
"include as much information as you can: Under which circumstances does the "
"bug occur? How did you fix the problem? Did you test your solution?"
msgstr ""
"Если вы обнаружили открытую ошибку, которая ещё никому не назначена, и вы "
"готовы взяться за её устранение, следует написать комментарий с вашим "
"решением. Включите в него как можно больше информации: При каких "
"обстоятельствах появляется ошибка? Как вы её исправили? Тестировали ли вы "
"свой способ устранения ошибки?"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:95
msgid ""
"If no bug report has been filed, you can file a bug for it. What you might "
"want to bear in mind is: Is the issue so small that just asking for somebody "
"to commit it is good enough? Did you manage to only partially fix the issue "
"and you want to at least share your part of it?"
msgstr ""
"Если сообщение об ошибке не было зарегистрировано, вы можете его создать. "
"Подумайте над двумя вещами: Может быть, изменение настолько мало, что "
"достаточно просто попросить кого-нибудь применить его? Может быть, у вас "
"получилось только частично исправить ошибку, и вы хотите поделиться вашей "
"частью?"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:100
msgid "It is great if you can offer help and will surely be appreciated."
msgstr ""
"Будет замечательно, если вы можете предложить свою помощь, и она, "
"несомненно, будет с готовностью принята."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:104
msgid "Fixing the issue"
msgstr "Исправление ошибки"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:106
msgid ""
"For this specific example it is enough to search the web for ``bumprace`` "
"and find the homepage of it. Be sure it is a live site and not just a "
"software catalogue. http://www.linux-games.com/bumprace/ looks like it is "
"the proper place."
msgstr ""
"В данном конкретном примере недостаточно просто найти веб-сайт ``bumprace`` "
"и определить адрес его домашней страницы. Нужно убедиться, что сайт "
"работает, и он не является просто каталогом различных программ. "
"http://www.linux-games.com/bumprace/ выглядит подходящим местом."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:111
msgid ""
"To address the issue in the source package, we first need the source and we "
"can easily get it by running::"
msgstr ""
"Чтобы взяться за ошибку в пакете исходного кода, нам понадобится этот "
"исходный код, и мы легко можем получить его, набрав::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:117
msgid ""
"If you read :doc:`the Debian Directory Overview<./debian-dir-overview>` "
"before, you might remember, that the homepage for a package is specified in "
"the first part of ``debian/control``, the section which starts with "
"``Source:``."
msgstr ""
"Если вы прочитали :doc:`обзор каталога Debian<./debian-dir-overview>`, то "
"помните, вероятно, что домашняя страница указывается в первой части "
"``debian/control``, в секции, начинающейся с ``Source:``."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:121
msgid "So what we do next is run::"
msgstr "Так что теперь мы должны выполнить команду::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:125
msgid ""
"and edit ``debian/control`` to add ``Homepage: http://www.linux-"
"games.com/bumprace/``. At the end of the first section should be a good "
"place for it. Once you have done this, save the file."
msgstr ""
"и отредактировать ``debian/control``, добавив ``Homepage: http://www.linux-"
"games.com/bumprace/``. В конце первой секции должно быть подходящее место "
"для этого. После внесения изменений сохраните файл."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:129
msgid "If you now run::"
msgstr "Если теперь вы выполните::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:133
msgid "you should see something like this:"
msgstr "вы должны увидеть что-то вроде этого:"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:149
msgid ""
"The diff is pretty simple to understand. The ``+`` indicates a line which "
"was added. In our cases it was added just before the second section, "
"starting with ``Package``, which indicates a resulting binary package."
msgstr ""
"Синтаксис diff очень прост для понимания. ``+`` указывает строку, которая "
"была добавлена. В нашем случае она была добавлена непосредственно перед "
"второй секцией, начинающейся с ``Package``, которая указывает на готовый "
"двоичный пакет."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:157
msgid ""
"It is important to explain to your fellow developers what exactly you did. "
"If you run::"
msgstr ""
"Важно пояснить своим коллегам - разработчикам, что именно вы сделали. Если "
"вы наберёте::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:163
msgid ""
"this will start an editor with a boilerplate changelog entry which you just "
"have to fill out. In our case something like ``debian/control: Added "
"project's homepage.`` should do. Then save the file. To double-check this "
"worked out, run::"
msgstr ""
"это запустит редактор, с шаблоном записи в changelog, которую вам остаётся "
"лишь дозаполнить. В нашем случае должно подойти что-то наподобие "
"``debian/control: Added project's homepage.`` Затем сохраните файл. Чтобы "
"ещё раз проверить, что всё работает, наберите::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:170
msgid "and you will see something like this:"
msgstr "и вы увидите что-то вроде этого:"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:189
msgid "A few additional considerations:"
msgstr "Несколько дополнительных соображений:"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:191
msgid ""
"If you have a reference to a Launchpad bug which is fixed by the issue, add "
"(``LP: #<bug number>``) to the changelog entry line, ie: ``(LP: #123456)``."
msgstr ""
"Если у вас есть ссылка на ошибку на Launchpad, которую исправляет ваше "
"изменение, добавьте (``LP: #<номер ошибки>``) в запись changelog, например: "
"``(LP: #123456)``."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:193
msgid ""
"If you want to get your fix included in Debian, for a Debian bug the syntax "
"is ``(Closes: #<bug number>)``, ie: ``(Closes: #123456)``."
msgstr ""
"Если вы хотите, чтобы ваше исправление было включено в Debian, синтаксис для "
"ошибки в Debian будет ``(Closes: #<номер ошибки>)``, например: ``(Closes: "
"#123456)``."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:195
msgid ""
"If it is a reference to an upstream or Debian bug or a mailing list "
"discussion, mention it as well."
msgstr ""
"Если это ссылка на сообщение об ошибке в апстриме или в Debian, или на "
"обсуждение в почтовой рассылке, также укажите её."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:197
msgid "Try to wrap your lines at 80 characters."
msgstr "Старайтесь делать перенос строк после 80 символов."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:198
msgid ""
"Try to be specific, not an essay, but enough for somebody (who did not "
"deeply look into the issue) to understand."
msgstr ""
"Старайтесь излагать подробно: не стоит писать  целое эссе, но укажите "
"достаточно информации, чтобы понять мог любой человек (даже если он не "
"вникал глубоко в эту проблему)."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:200
msgid "Mention how you fixed the issue and where."
msgstr "Укажите, как и где вы исправили ошибку."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:206
msgid ""
"To test the fix, you need to :doc:`have your development environment set "
"up<./getting-set-up>`, then to build the package, install it and verify the "
"problem is solved. In our case this would be::"
msgstr ""
"Чтобы проверить исправление, вам понадобится :doc:`настроить свою среду "
"разработки<./getting-set-up>`, затем собрать пакет, установить его и "
"проверить, что проблема устранена. В нашем случае это будут следующие "
"действия::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:214
msgid ""
"In step one we build the source package from the branch, then build it by "
"using ``pbuilder``, then inspect the resulting package to check if the "
"Homepage field was added properly."
msgstr ""
"Первой командой мы создаём пакет исходного кода из ветки, затем собираем его "
"с помощью  ``pbuilder``, после чего проверяем,  правильно ли добавлено поле "
"домашней страницы в получившемся пакете."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:218
msgid ""
"In a lot of cases you will have to actually install the package to make sure "
"it works as expected. Our case is a lot easier. If the build succeeded, you "
"will find the binary packages in ``~/pbuilder/<release>_result``. Install "
"them via ``sudo dpkg -i <package>.deb`` or by double-clicking on them in "
"your file manager."
msgstr ""
"В большинстве случаев вам придётся действительно установить пакет, чтобы "
"проверить правильность его работы. Наш случай намного проще. Если сборка "
"завершилась успешно, готовые двоичные пакеты можно будет найти в "
"``~/pbuilder/<выпуск>_result``. Установите их с помощью ``sudo dpkg -i "
"<пакет>.deb`` или двойного щелчка на них в файловом менеджере."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:225
msgid ""
"As we verified, the problem is now solved, so the next step is sharing our "
"solution with the world."
msgstr ""
"После того, как мы убедились, что проблема решена, следующим шагом будет "
"поделиться своим решением со всем миром."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:229
msgid "Getting the fix included"
msgstr "Применение исправления"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:231
msgid ""
"It makes to get fix included as Upstream as possible. Doing that you can "
"guarantee that everybody can take the Upstream source as-is and don't need "
"to have local modifications to fix it."
msgstr ""
"Важно попытаться продвинуть ваше исправление как можно дальше в upstream. "
"Это позволит любому взять исходный код в том виде, в каком он представлен в "
"upstream, и не применять к нему никаких дополнительных модификаций."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:235
msgid ""
"In our case we established that we have a problem with the packaging, both "
"in Ubuntu and Debian. As Ubuntu is based on Debian, we will send the fix to "
"Debian. Once it is included there, it will be picked up by Ubuntu "
"eventually. The issue in our tutorial is clearly non-critical, so this "
"approach makes sense. If it is important to fix the issue as soon as "
"possible, you will need to send the solution to multiple bug trackers. "
"Provided the issue affects all parties in question."
msgstr ""
"В нашем случае мы установили, что ошибка относится только к пакетам Ubuntu и "
"Debian. Так как Ubuntu основана на Debian, мы должны отправить исправление в "
"Debian. После того, как в Debian появится исправленный пакет, он попадёт "
"также и в Ubuntu. Наша ошибка не критична, поэтому можно так сделать. Если "
"же важно применить исправление как можно скорее, то необходимо отправить "
"исправление в несколько баг-трекеров (если оно затрагивает соотвествующие "
"проекты)."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:243
msgid "To submit the patch to Debian, simply run::"
msgstr "Чтобы отправить патч в Debian, просто наберите::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:247
msgid ""
"This will take you through a series of steps to make sure the bug ends up in "
"the correct place. Be sure to review the diff again to make sure it does not "
"include random changes you made earlier."
msgstr ""
"Эта команда проведёт вас через несколько шагов, необходимых для оформления "
"отчёта об ошибке и отправки его в правильное место. Обязательно просмотрите "
"ваши изменения, чтобы убедиться, что там нет ничего постороннего."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:251
msgid ""
"Communication is important, so when you add some more description to it to "
"the inclusion request, be friendly, explain it well."
msgstr ""
"Коммуникация имеет очень большое значение, поэтому при добавлении описания "
"предоставьте хорошее и дружественное объяснение."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:254
msgid ""
"If everything went well you should get a mail from Debian's bug tracking "
"system with more information. This might sometimes take a few minutes."
msgstr ""
"Если всё прошло нормально, то вы должны получить почтовое сообщение от "
"системы отслеживания ошибок Debian с дополнительной информацией. Иногда это "
"может занять несколько минут."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:257
msgid ""
"If the problem is just in Ubuntu, you might want to consider :doc:`Seeking "
"Review and Sponsorship<./udd-sponsorship>` to get the fix included."
msgstr ""
"Если проблема наблюдается только в Ubuntu, вы можете воспользоваться "
":doc:`инструкцией по поиску спонсора<./udd-sponsorship>`."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:263
msgid "Additional considerations"
msgstr "Дополнительные замечания"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:265
msgid ""
"If you find a package and find that there are a couple of trivial things you "
"can fix at the same time, do it. This will speed up review and inclusion."
msgstr ""
"Если вы можете внести в пакет несколько тривиальных исправлений сразу, "
"сделайте это. Это позволит разработчикам быстрее рассмотреть и применить эти "
"изменения."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:268
msgid ""
"If there are multiple big things you want to fix, it might be advisable to "
"send individual patches or merge proposals instead. If there are individual "
"bugs filed for the issues already, this makes it even easier."
msgstr ""
"Если вы хотите внести несколько больших изменений, лучше посылать патчи или "
"запросы на слияние отдельно для каждого изменения. Это проще, если уже "
"созданы индивидуальные сообщения об ошибках."

#: ../ubuntu-packaging-guide/getting-set-up.rst:3
msgid "Getting Set Up"
msgstr "Подготовка"

#: ../ubuntu-packaging-guide/getting-set-up.rst:5
msgid ""
"There are a number of things you need to do to get started developing for "
"Ubuntu. This article is designed to get your computer set up so that you can "
"start working with packages, and upload your packages to Ubuntu's hosting "
"platform, Launchpad. Here's what we'll cover:"
msgstr ""
"Существует несколько вещей, которые нужно сделать перед началом разработки в "
"Ubuntu. Эта статья поможет вам подготовить компьютер к работе с пакетами и "
"отправке ваших пакетов на платформу хостинга Ubuntu — Launchpad. Вот что "
"здесь описано:"

#: ../ubuntu-packaging-guide/getting-set-up.rst:10
msgid "Installing packaging-related software. This includes:"
msgstr "Установка программ для работы с пакетами. Они включают в себя:"

#: ../ubuntu-packaging-guide/getting-set-up.rst:12
msgid "Ubuntu-specific packaging utilities"
msgstr "специфичные для Ubuntu утилиты создания пакетов"

#: ../ubuntu-packaging-guide/getting-set-up.rst:13
msgid "Encryption software so your work can be verified as being done by you"
msgstr ""
"криптографическую программу, которая позволит другим удостовериться, что "
"работа выполнена именно вами"

#: ../ubuntu-packaging-guide/getting-set-up.rst:14
msgid "Additional encryption software so you can securely transfer files"
msgstr ""
"дополнительные программы шифрования, обеспечивающие безопасную передачу "
"файлов"

#: ../ubuntu-packaging-guide/getting-set-up.rst:16
msgid "Creating and configuring your account on Launchpad"
msgstr "Создание и настройка учётной записи на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:17
msgid ""
"Setting up your development environment to help you do local builds of "
"packages, interact with other developers, and propose your changes on "
"Launchpad."
msgstr ""
"Настройка вашей среды разработки для облегчения локальной сборки пакетов, "
"взаимодействия с другими разработчиками и отправки ваших изменений на "
"Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:22
msgid ""
"It is advisable to do packaging work using the current development version "
"of Ubuntu. Doing so will allow you to test changes in the same environment "
"where those changes will actually be applied and used."
msgstr ""
"Рекомендуется выполнять работу по созданию пакетов в текущей разрабатываемой "
"версии Ubuntu. Это позволит вам тестировать изменения в той же среде, в "
"которую они в действительности затем будут внесены."

#: ../ubuntu-packaging-guide/getting-set-up.rst:26
msgid ""
"Don't worry though, the `Ubuntu development release wiki page "
"<https://wiki.ubuntu.com/UsingDevelopmentReleases>`_ shows a variety of ways "
"to safely use the development release."
msgstr ""
"Не беспокойтесь, на вики-странице `Использование разрабатываемых версий "
"<https://wiki.ubuntu.com/UsingDevelopmentReleases>`_ описано множество "
"способов безопасно использовать разрабатываемые выпуски."

#: ../ubuntu-packaging-guide/getting-set-up.rst:32
msgid "Install basic packaging software"
msgstr "Установка базового программного обеспечения для создания пакетов"

#: ../ubuntu-packaging-guide/getting-set-up.rst:34
msgid ""
"There are a number of tools that will make your life as an Ubuntu developer "
"much easier.  You will encounter these tools later in this guide.  To "
"install most of the tools you will need run this command::"
msgstr ""
"Существует множество инструментов, которые могут значительно упростить жизнь "
"разработчику Ubuntu.  Вы познакомитесь с ними далее в этом руководстве.  "
"Чтобы установить большинство инструментов, нужно выполнить следующую "
"команду::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:41
msgid ""
"Note: Since Ubuntu 11.10 \"Oneiric Ocelot\" (or if you have Backports "
"enabled on a currently supported release), the following command will "
"install the above and other tools which are quite common in Ubuntu "
"development::"
msgstr ""
"Примечание: Начиная с Ubuntu 11.10 «Oneiric Ocelot» (или если включен "
"репозиторий Backports в текущем поддерживаемом выпуске), следующая команда "
"устанавливает всё вышеупомянутое и другие инструменты, часто используемые в "
"разработке Ubuntu::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:49
msgid "This command will install the following software:"
msgstr "Эта команда установит следующие программы:"

#: ../ubuntu-packaging-guide/getting-set-up.rst:51
msgid ""
"``gnupg`` -- `GNU Privacy Guard`_ contains tools you will need to create a "
"cryptographic key with which you will sign files you want to upload to "
"Launchpad."
msgstr ""
"``gnupg`` -- `GNU Privacy Guard`_, содержит инструменты, необходимые для "
"создания криптографического ключа, которым вы будете подписывать файлы, "
"отправляемые на Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:54
msgid ""
"``pbuilder`` -- a tool to do reproducible builds of a package in a clean and "
"isolated environment."
msgstr ""
"``pbuilder`` -- инструмент для создания готовых к дальнейшему "
"распространению сборок пакетов в чистой и изолированной среде."

#: ../ubuntu-packaging-guide/getting-set-up.rst:56
msgid ""
"``ubuntu-dev-tools`` (and ``devscripts``, a direct dependency) -- a "
"collection of tools that make many packaging tasks easier."
msgstr ""
"``ubuntu-dev-tools`` (и его непосредственная зависимость ``devscripts``) -- "
"набор инструментов, упрощающих многие задачи по созданию пакетов."

#: ../ubuntu-packaging-guide/getting-set-up.rst:58
msgid ""
"``bzr-builddeb`` (and ``bzr``, a dependency) -- distributed version control "
"with Bazaar, a new way of working with packages for Ubuntu that will make it "
"easy for many developers to collaborate and work on the same code while "
"keeping it trivial to merge each other's work."
msgstr ""
"``bzr-builddeb`` (и его зависимость -- ``bzr``) -- управление "
"распределёнными версиями с помощью Bazaar, новый способ работы с пакетами "
"для Ubuntu, упрощающий совместную работу многих людей над одним и тем же "
"кодом и позволяющий с лёгкостью объединять результаты их труда друг с другом."

#: ../ubuntu-packaging-guide/getting-set-up.rst:62
msgid ""
"``apt-file`` provides an easy way to find the binary package that contains a "
"given file."
msgstr ""
"``apt-file`` предоставляет простой способ найти двоичный пакет, содержащий "
"заданный файл."

#: ../ubuntu-packaging-guide/getting-set-up.rst:67
msgid "Create your GPG key"
msgstr "Создание ключа GPG"

#: ../ubuntu-packaging-guide/getting-set-up.rst:69
msgid ""
"GPG stands for `GNU Privacy Guard`_ and it implements the OpenPGP standard "
"which allows you to sign and encrypt messages and files. This is useful for "
"a number of purposes. In our case it is important that you can sign files "
"with your key so they can be identified as something that you worked on. If "
"you upload a source package to Launchpad, it will only accept the package if "
"it can absolutely determine who uploaded the package."
msgstr ""
"GPG или `GNU Privacy Guard`_ — это реализация стандарта OpenPGP, "
"позволяющего подписывать и шифровать сообщения и файлы. Это может быть "
"полезно для различных целей. В нашем случае важно иметь возможность "
"подписывать файлы своим ключом, чтобы другие могли убедиться, что над "
"файлами работали именно вы. При отправке пакета исходного кода на Launchpad "
"он будет принят только в том случае, если можно точно определить, кто именно "
"отправил пакет."

#: ../ubuntu-packaging-guide/getting-set-up.rst:76
msgid "To generate a new GPG key, run::"
msgstr "Чтобы сгенерировать новый ключ GPG, наберите::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:80
msgid ""
"GPG will first ask you which kind of key you want to generate. Choosing the "
"default (RSA and DSA) is fine. Next it will ask you about the keysize. The "
"default (currently 2048) is fine, but 4096 is more secure. Afterwards, it "
"will ask you if you want it to expire the key at some stage. It is safe to "
"say \"0\", which means the key will never expire. The last questions will be "
"about your name and email address. Just pick the ones you are going to use "
"for Ubuntu development here, you can add additional email addresses later "
"on. Adding a comment is not necessary. Then you will have to set a "
"passphrase, choose a safe one (a passphrase is just a password which is "
"allowed to include spaces)."
msgstr ""
"GPG сначала спросит, какой тип ключа вы хотите создать. Выбор по умолчанию "
"(RSA и DSA) вполне подойдёт. Далее он попросит указать размер ключа. Размер "
"по умолчанию (в настоящее время 2048) подойдёт, но 4096 надёжнее. Далее, "
"программа спросит, хотите ли вы, чтобы срок действия ключа истёк через какое-"
"то время. Безопаснее ответить \"0\", что означает, что срок действия не "
"истечёт никогда. Последний вопрос будет о вашем имени и адресе электронной "
"почты. Просто выберите адрес, которым вы пользуетесь при разработке Ubuntu, "
"дополнительные адреса можно будет добавить позже. Добавлять комментарий не "
"обязательно. После этого нужно указать надёжную парольную фразу (парольная "
"фраза — это просто пароль, в котором допускается использовать пробелы)."

#: ../ubuntu-packaging-guide/getting-set-up.rst:90
msgid ""
"Now GPG will create a key for you, which can take a little bit of time; it "
"needs random bytes, so if you give the system some work to do it will be "
"just fine.  Move the cursor around, type some paragraphs of random text, "
"load some web page."
msgstr ""
"Теперь GPG создаст для вас ключ, что может занять некоторое время. Для его "
"создания понадобятся случайные байты, поэтому будет просто замечательно, "
"если вы зададите своей системе какую-нибудь работу. Подвигайте указатель "
"мыши, наберите несколько абзацев случайного текста, загрузите любую веб-"
"страницу."

#: ../ubuntu-packaging-guide/getting-set-up.rst:95
msgid "Once this is done, you will get a message similar to this one::"
msgstr ""
"Когда процесс будет завершён, вы получите сообщение наподобие следующего::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:102
msgid "In this case ``43CDE61D`` is the *key ID*."
msgstr "В данном случае, ``43CDE61D`` — это идентификатор ключа (*key ID*)."

#: ../ubuntu-packaging-guide/getting-set-up.rst:104
msgid ""
"Next, you need to upload the public part of your key to a keyserver so the "
"world can identify messages and files as yours. To do so, enter::"
msgstr ""
"Затем нужно загрузить открытую (public) часть вашего ключа на сервер ключей, "
"чтобы все могли идентифицировать сообщения и файлы, как отправленные вами. "
"Для этого введите::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:109
msgid ""
"This will send your key to the Ubuntu keyserver, but a network of keyservers "
"will automatically sync the key between themselves. Once this syncing is "
"complete, your signed public key will be ready to verify your contributions "
"around the world."
msgstr ""

#: ../ubuntu-packaging-guide/getting-set-up.rst:116
msgid "Create your SSH key"
msgstr "Создание ключа SSH"

#: ../ubuntu-packaging-guide/getting-set-up.rst:118
msgid ""
"SSH_ stands for *Secure Shell*, and it is a protocol that allows you to "
"exchange data in a secure way over a network. It is common to use SSH to "
"access and open a shell on another computer, and to use it to securely "
"transfer files. For our purposes, we will mainly be using SSH to securely "
"upload source packages to Launchpad."
msgstr ""
"SSH_ или *Secure Shell* — это протокол, позволяющий безопасно обмениваться "
"данными по сети. Обычной практикой является использование SSH для доступа и "
"открытия командной оболочки на другом компьютере и для безопасной пересылки "
"файлов. В наших целях мы в основном будем использовать SSH для безопасной "
"отправки пакетов исходного кода на Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:124
msgid "To generate an SSH key, enter::"
msgstr "Чтобы сгенерировать ключ SSH, введите::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:128
msgid ""
"The default file name usually makes sense, so you can just leave it as it "
"is. For security purposes, it is highly recommended that you use a "
"passphrase."
msgstr ""
"Имя файла по умолчанию обычно вполне годится, так что можете оставить его "
"как есть. Для целей безопасности настоятельно рекомендуется задать парольную "
"фразу."

#: ../ubuntu-packaging-guide/getting-set-up.rst:133
msgid "Set up pbuilder"
msgstr "Настройка pbuilder"

#: ../ubuntu-packaging-guide/getting-set-up.rst:135
msgid ""
"``pbuilder`` allows you to build packages locally on your machine. It serves "
"a couple of purposes:"
msgstr ""
"``pbuilder`` позволяет локально собирать пакеты на вашем компьютере. Он "
"служит нескольким целям:"

#: ../ubuntu-packaging-guide/getting-set-up.rst:138
msgid ""
"The build will be done in a minimal and clean environment. This helps you "
"make sure your builds succeed in a reproducible way, but without modifying "
"your local system"
msgstr ""
"Сборка будет выполнена в минимальной и чистой среде. Это даст возможность "
"убедиться, что сборку удастся успешно воспроизвести и на других компьютерах, "
"но при этом поможет избежать изменений в вашей локальной системе"

#: ../ubuntu-packaging-guide/getting-set-up.rst:141
msgid ""
"There is no need to install all necessary *build dependencies* locally"
msgstr ""
"Отпадает необходимость в локальной установке всех *сборочных зависимостей*"

#: ../ubuntu-packaging-guide/getting-set-up.rst:142
msgid ""
"You can set up multiple instances for various Ubuntu and Debian releases"
msgstr ""
"Можно настроить несколько экземпляров для различных выпусков Ubuntu и Debian"

#: ../ubuntu-packaging-guide/getting-set-up.rst:144
msgid "Setting ``pbuilder`` up is very easy, run::"
msgstr "Настроить ``pbuilder`` очень просто. Наберите ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:148
msgid ""
"where <release> is for example `natty`, `maverick`, `lucid` or in the case "
"of Debian maybe `sid`. This will take a while as it will download all the "
"necessary packages for a \"minimal installation\". These will be cached "
"though."
msgstr ""
"где <release> — это, например, `natty`, `maverick`, `lucid` или, в случае "
"Debian, `sid`. Загрузка всех необходимых для «минимальной установки» пакетов "
"займёт некоторое время. Впрочем, они будут кэшироваться."

#: ../ubuntu-packaging-guide/getting-set-up.rst:154
msgid "Get set up to work with Launchpad"
msgstr "Подготовка к работе с Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:156
msgid ""
"With a basic local configuration in place, your next step will be to "
"configure your system to work with Launchpad. This section will focus on the "
"following topics:"
msgstr ""
"После того, как базовая локальная конфигурация создана, следующим шагом "
"будет настройка системы для работы с Launchpad. В этом разделе мы "
"сфокусируемся на следующих вопросах:"

#: ../ubuntu-packaging-guide/getting-set-up.rst:160
msgid "What Launchpad is and creating a Launchpad account"
msgstr "Что такое Launchpad и как создать учётную запись на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:161
msgid "Uploading your GPG and SSH keys to Launchpad"
msgstr "Загрузка ваших ключей GPG и SSH на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:162
msgid "Configuring Bazaar to work with Launchpad"
msgstr "Настройка Bazaar для работы с Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:163
msgid "Configuring Bash to work with Bazaar"
msgstr "Настройка Bash для работы с Bazaar"

#: ../ubuntu-packaging-guide/getting-set-up.rst:167
msgid "About Launchpad"
msgstr "Сведения о Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:169
msgid ""
"Launchpad is the central piece of infrastructure we use in Ubuntu. It not "
"only stores our packages and our code, but also things like translations, "
"bug reports, and information about the people who work on Ubuntu and their "
"team memberships.  You will also use Launchpad to publish your proposed "
"fixes, and get other Ubuntu developers to review and sponsor them."
msgstr ""
"Launchpad является центральным элементом инфраструктуры, используемой нами в "
"Ubuntu. Он хранит не только наши пакеты и наш код, но и такие вещи, как "
"переводы, отчёты об ошибках, а также информацию о людях, работающих над "
"Ubuntu и их принадлежности к различным командам. Вы можете также "
"использовать Launchpad, чтобы опубликовать предлагаемые вами исправления и "
"попросить других разработчиков Ubuntu проверить и поддержать их."

#: ../ubuntu-packaging-guide/getting-set-up.rst:175
msgid ""
"You will need to register with Launchpad and provide a minimal amount of "
"information. This will allow you to download and upload code, submit bug "
"reports, and more."
msgstr ""
"Вам понадобится зарегистрироваться на Launchpad и предоставить некоторое "
"минимальное количество информации о себе. Это позволит вам скачивать или "
"отправлять исходный код, отправлять отчёты об ошибках и т.п."

#: ../ubuntu-packaging-guide/getting-set-up.rst:179
msgid ""
"Besides hosting Ubuntu, Launchpad can host any Free Software project. For "
"more information see the `Launchpad Help wiki "
"<https://help.launchpad.net/>`_."
msgstr ""
"Кроме хостинга Ubuntu, Launchpad может предоставлять место для любого "
"свободного программного проекта. Дополнительную информацию смотрите на "
"`Справочных вики-страницах Launchpad <https://help.launchpad.net/>`_."

#: ../ubuntu-packaging-guide/getting-set-up.rst:184
msgid "Get a Launchpad account"
msgstr "Создание учётной записи на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:186
msgid ""
"If you don't already have a Launchpad account, you can easily `create one`_. "
"If you have a Launchpad account but cannot remember your Launchpad id, you "
"can find this out by going to https://launchpad.net/~ and looking for the "
"part after the `~` in the URL."
msgstr ""
"Если у вас ещё нет учётной записи на Launchpad, можно легко `создать её`_. "
"Если учётная запись есть, но вы не помните свой Launchpad id, его можно "
"определить, зайдя на https://launchpad.net/~ и взглянув на часть URL после "
"символа «~»."

#: ../ubuntu-packaging-guide/getting-set-up.rst:191
msgid ""
"Launchpad's registration process will ask you to choose a display name. It "
"is encouraged for you to use your real name here so that your Ubuntu "
"developer colleagues will be able to get to know you better."
msgstr ""
"При регистрации на Launchpad вас попросят выбрать отображаемое имя. "
"Рекомендуется указать здесь ваше настоящее имя, чтобы ваши коллеги - "
"разработчики Ubuntu могли лучше с вами познакомиться."

#: ../ubuntu-packaging-guide/getting-set-up.rst:195
msgid ""
"When you register a new account, Launchpad will send you an email with a "
"link you need to open in your browser in order to verify your email address. "
"If you don't receive it, check in your spam folder."
msgstr ""
"При регистрации новой учётной записи Launchpad отправит вам письмо со "
"ссылкой, которую нужно открыть в веб-браузере, чтобы подтвердить указанный "
"вами адрес электронной почты. Если вы не получили письмо, проверьте папку "
"нежелательной почты (спама)."

#: ../ubuntu-packaging-guide/getting-set-up.rst:199
msgid ""
"`The new account help page "
"<https://help.launchpad.net/YourAccount/NewAccount>`_ on Launchpad has more "
"information about the process and additional settings you can change."
msgstr ""
"`Справочная страница новой учётной записи "
"<https://help.launchpad.net/YourAccount/NewAccount>`_ на Launchpad "
"предоставит больше информации о процессе и дополнительных настройках, "
"которые вы можете изменить."

#: ../ubuntu-packaging-guide/getting-set-up.rst:205
msgid "Upload your GPG key to Launchpad"
msgstr "Загрузка вашего ключа GPG на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:207
msgid "To find about your GPG fingerprint, run::"
msgstr "Чтобы узнать свой отпечаток ключа GPG (fingerprint), наберите::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:211
msgid "and it will print out something like::"
msgstr "и вы увидите что-то наподобие::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:219
msgid ""
"Head to https://launchpad.net/~/+editpgpkeys and copy the \"Key "
"fingerprint\" into the text box. In the case above this would be ``5C28 0144 "
"FB08 91C0 2CF3  37AC 6F0B F90F 43CD E61D``. Now click on \"Import Key\"."
msgstr ""
"Зайдите на https://launchpad.net/~/+editpgpkeys и скопируйте данные из "
"строки «Key fingerprint»  в текстовое поле. В приведённом выше примере это "
"будет ``5C28 0144 FB08 91C0 2CF3  37AC 6F0B F90F 43CD E61D``. Затем щёлкните "
"«Import Key»."

#: ../ubuntu-packaging-guide/getting-set-up.rst:224
msgid ""
"Launchpad will use the fingerprint to check the Ubuntu key server for your "
"key and, if successful, send you an encrypted email asking you to confirm "
"the key import. Check your email account and read the email that Launchpad "
"sent you. `If your email client supports OpenPGP encryption, it will prompt "
"you for the password you chose for the key when GPG generated it. Enter the "
"password, then click the link to confirm that the key is yours.`"
msgstr ""
"Launchpad воспользуется отпечатком ключа для проверки наличия вашего ключа "
"на сервере ключей Ubuntu и, в случае успеха, отправит вам зашифрованное "
"сообщение электронной почты, предлагающее подтвердить импорт ключа. "
"Проверьте свою почту и прочтите письмо, полученное с Launchpad. `Если ваш "
"клиент электронной почты поддерживает шифрование OpenPGP, он предложит "
"ввести пароль, который вы выбрали при создании ключа GPG. Введите пароль, "
"затем щёлкните на ссылке, чтобы подтвердить, что этот ключ принадлежит вам.`"

#: ../ubuntu-packaging-guide/getting-set-up.rst:231
msgid ""
"Launchpad encrypts the email, using your public key, so that it can be sure "
"that the key is yours. If you are using Thunderbird, the default Ubuntu "
"email client, you can install the `Enigmail plugin "
"<https://apps.ubuntu.com/cat/applications/enigmail/>`_ to easily decrypt the "
"message. If your email software does not support OpenPGP encryption, copy "
"the encrypted email's contents, type ``gpg`` in your terminal, then paste "
"the email contents into your terminal window."
msgstr ""
"Launchpad зашифрует своё почтовое сообщение вашим открытым ключом, чтобы "
"убедиться, что ключ действительно ваш. Если вы пользуетесь почтовым клиентом "
"Thunderbird, используемым по умолчанию в Ubuntu, для дешифровки сообщения "
"можно установить расширение `Enigmail "
"<https://apps.ubuntu.com/cat/applications/enigmail/>`_. Если ваш почтовый "
"клиент не поддерживает шифрование OpenPGP, скопируйте зашифрованное "
"содержимое письма, наберите в терминале ``gpg`` и вставьте содержимое письма "
"в окно терминала."

#: ../ubuntu-packaging-guide/getting-set-up.rst:240
msgid ""
"Back on the Launchpad website, use the Confirm button and Launchpad will "
"complete the import of your OpenPGP key."
msgstr ""
"Вернувшись на сайт Launchpad, воспользуйтесь кнопкой «Confirm», чтобы "
"Launchpad завершил импорт вашего ключа OpenPGP."

#: ../ubuntu-packaging-guide/getting-set-up.rst:243
msgid ""
"Find more information at "
"https://help.launchpad.net/YourAccount/ImportingYourPGPKey"
msgstr ""
"Дополнительную информацию можно найти на "
"https://help.launchpad.net/YourAccount/ImportingYourPGPKey"

#: ../ubuntu-packaging-guide/getting-set-up.rst:247
msgid "Upload your SSH key to Launchpad"
msgstr "Загрузка вашего ключа SSH на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:249
msgid ""
"Open https://launchpad.net/~/+editsshkeys in a web browser, also open "
"``~/.ssh/id_rsa.pub`` in a text editor. This is the public part of your SSH "
"key, so it is safe to share it with Launchpad. Copy the contents of the file "
"and paste them into the text box on the web page that says \"Add an SSH "
"key\". Now click \"Import Public Key\"."
msgstr ""
"Откройте в веб-браузере https://launchpad.net/~/+editsshkeys, а в текстовом "
"редакторе файл ``~/.ssh/id_rsa.pub``. Это открытая часть вашего ключа SSH, "
"поэтому можно без опасений предоставить к ней общий доступ на Launchpad. "
"Скопируйте содержимое файла и вставьте его в текстовое поле на веб-странице "
"с меткой «Add an SSH key». Затем щёлкните «Import Public Key»."

#: ../ubuntu-packaging-guide/getting-set-up.rst:255
msgid ""
"For more information on this process, visit the `creating an SSH keypair "
"<https://help.launchpad.net/YourAccount/CreatingAnSSHKeyPair>`_ page on "
"Launchpad."
msgstr ""
"Для получения дополнительной информации об этом процессе посетите страницу о "
"`создании ключевой пары SSH "
"<https://help.launchpad.net/YourAccount/CreatingAnSSHKeyPair>`_ на Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:261
msgid "Configure Bazaar"
msgstr "Настройка Bazaar"

#: ../ubuntu-packaging-guide/getting-set-up.rst:263
msgid ""
"Bazaar is the tool we use to store code changes in a logical way, to "
"exchange proposed changes and merge them, even if development is done "
"concurrently.  It is used for the new Ubuntu Distributed Development method "
"of working with Ubuntu packages."
msgstr ""
"Bazaar — это инструмент, который мы используем для хранения изменений в коде "
"логичным и предсказуемым способом, а также обмена предлагаемыми изменениями "
"и их слияния, даже в том случае, если разработка ведётся параллельно "
"несколькими людьми.  Он используется в новом методе работы с пакетами Ubuntu "
"— Ubuntu Distributed Development."

#: ../ubuntu-packaging-guide/getting-set-up.rst:268
msgid "To tell Bazaar who you are, simply run::"
msgstr "Что сообщить Bazaar о том, кто вы, просто наберите::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:273
msgid ""
"`whoami` will tell Bazaar which name and email address it should use for "
"your commit messages. With `launchpad-login` you set your Launchpad ID. This "
"way code that you publish in Launchpad will be associated with you."
msgstr ""
"`whoami` сообщит Bazaar, какое имя и адрес электронной почты он должен "
"использовать для ваших коммитов. С помощью `launchpad-login` вы указываете "
"свой Launchpad ID. Это код, который идентифицирует вашу учётную запись на "
"Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:277
msgid ""
"Note: If you can not remember the ID, go to https://launchpad.net/~ and see "
"where it redirects you. The part after the \"~\" in the URL is your "
"Launchpad ID.)"
msgstr ""
"Примечание: если вы не помните свой идентификатор, перейдите на "
"https://launchpad.net/~ и посмотрите, куда вас перенаправляет эта страница. "
"Часть URL после символа «~» — это и есть ваш Launchpad ID."

#: ../ubuntu-packaging-guide/getting-set-up.rst:283
msgid "Configure your shell"
msgstr "Настройка командной оболочки"

#: ../ubuntu-packaging-guide/getting-set-up.rst:284
msgid ""
"Similar to Bazaar, the Debian/Ubuntu packaging tools need to learn about you "
"as well. Simply open your `~/.bashrc` in a text editor and add something "
"like this to the bottom of it::"
msgstr ""
"Как и Bazaar, инструментам создания пакетов Debian/Ubuntu понадобится "
"некоторая информация о вас. Просто откройте `~/.bashrc` в текстовом "
"редакторе и добавьте внизу что-то вроде этого::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:291
msgid "Now save the file and either restart your terminal or run::"
msgstr "Затем сохраните файл и перезапустите терминал или наберите::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:295
msgid ""
"(If you do not use the default shell, which is `bash`, please edit the "
"configuration file for that shell accordingly.)"
msgstr ""
"(Если вы не пользуетесь стандартной командной оболочкой `bash`, "
"отредактируйте конфигурационный файл той оболочки, которую вы предпочитаете "
"использовать.)"

#: ../ubuntu-packaging-guide/index.rst:9
msgid "Ubuntu Packaging Guide"
msgstr "Руководство разрабочика Ubuntu"

#: ../ubuntu-packaging-guide/index.rst:11
msgid ""
"Welcome to the Ubuntu Packaging and Development Guide! This is the official "
"place for learning all about Ubuntu Development and packaging. After reading "
"this guide you will have:"
msgstr ""
"Добро пожаловать в руководство разработчика Ubuntu! Это официальная "
"документация по всем темам, связанных с разработкой Ubuntu и сборкой пакетов "
"для этой операционной системы. После прочтения этого руководства вы:"

#: ../ubuntu-packaging-guide/index.rst:15
msgid ""
"heard about the most important players, processes and tools in Ubuntu "
"development,"
msgstr ""
"будете знать о самых важных утилитах, процессах и командах в разработке "
"Ubuntu,"

#: ../ubuntu-packaging-guide/index.rst:17
msgid "your development environment set up correctly,"
msgstr "сможете правильно настроить вашу среду разработки,"

#: ../ubuntu-packaging-guide/index.rst:18
msgid "a better idea of how to join our community,"
msgstr "узнаете, как присоединиться к нашему сообществу,"

#: ../ubuntu-packaging-guide/index.rst:19
msgid "fixed an actual Ubuntu bug as part of the tutorials."
msgstr "исправите настоящую ошибку в Ubuntu в процессе изучения руководства."

#: ../ubuntu-packaging-guide/index.rst:21
msgid ""
"Ubuntu is not only a free and open source operating system, its platform is "
"also open and developed in a transparent fashion. The source code for every "
"single component can be obtained easily and every single change to the "
"Ubuntu platform can be reviewed."
msgstr ""
"Ubuntu — не только свободная операционная система с открытым исходным кодом, "
"её платформа также является открытой и обеспечивает прозрачность разработки. "
"Можно легко получить исходный код для каждого отдельного компонента, и "
"каждое отдельное изменение в платформе Ubuntu можно проверить."

#: ../ubuntu-packaging-guide/index.rst:26
msgid ""
"This means you can actively get involved in improving it and the community "
"of Ubuntu platform developers is always interested in helping peers getting "
"started."
msgstr ""
"Это означает, что вы можете принять активное участие в её улучшении, и "
"сообщество разработчиков платформы Ubuntu всегда заинтересовано в "
"привлечении новых участников."

#: ../ubuntu-packaging-guide/index.rst:30
msgid ""
"Ubuntu is also a community of great people who believe in free software and "
"that it should be accessible for everyone. Its members are welcoming and "
"want you to be involved as well. We want you to get involved, to ask "
"questions, to make Ubuntu better together with us."
msgstr ""
"Ubuntu также является сообществом замечательных людей, верящих в то, что "
"программное обеспечение должно быть свободным и доступным для всех. "
"Участники сообщества приветствуют вас и хотят, чтобы вы тоже к ним "
"присоединились. Мы хотим, чтобы вы принимали участие в нашей работе, "
"задавали вопросы, делали Ubuntu лучше вместе с нами."

#: ../ubuntu-packaging-guide/index.rst:35
msgid ""
"If you run into problems: don't panic! Check out the :doc:`communication "
"article<./communication>` and you will find out how to most easily get in "
"touch with other developers."
msgstr ""
"Если у вас возникнут трудности: не волнуйтесь! Прочтите :doc:`раздел о "
"коммуникации<./communication>`, и вы узнаете, как легко связаться с "
"остальными разработчиками."

#: ../ubuntu-packaging-guide/index.rst:39
msgid "The guide is split up into two sections:"
msgstr "Это руководство состоит из двух разделов:"

#: ../ubuntu-packaging-guide/index.rst:41
msgid "A list of articles based on tasks, things you want to get done."
msgstr ""
"Список статей, основанных на определённых задачах, которые вам может "
"понадобиться выполнить."

#: ../ubuntu-packaging-guide/index.rst:42
msgid ""
"A set of knowledge-base articles that dig deeper into specific bits of our "
"tools and workflows."
msgstr ""
"Набор статей базы знаний, в которых подробнее рассматриваются используемые "
"нами инструменты и рабочие процессы."

#: ../ubuntu-packaging-guide/index.rst:45
msgid ""
"This guide focuses on the Ubuntu Distributed Development packaging method. "
"This is a new way of packaging which uses Distributed Revision Control "
"branches.  It currently has some limitations which mean many teams in Ubuntu "
"use :doc:`traditional packaging<./traditional-packaging>` methods.  See the "
":doc:`UDD Introduction<./udd-intro>` page for an introduction to the "
"differences."
msgstr ""
"Это руководство фокусируется на методе создания пакетов Ubuntu Distributed "
"Development. Это новый способ работы с пакетами, который использует ветки "
"распределённой системы управления версиями.  В настоящее время он имеет "
"некоторые ограничения, поэтому многие команды Ubuntu по-прежнему пользуются "
":doc:`традиционными<./traditional-packaging>` методами создания пакетов.  "
"Чтобы узнать о различиях, смотрите страницу :doc:`Введение в UDD<./udd-"
"intro>`."

#: ../ubuntu-packaging-guide/index.rst:52
msgid "Articles"
msgstr "Статьи"

#: ../ubuntu-packaging-guide/index.rst:69
msgid "Knowledge Base"
msgstr "База знаний"

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:3
msgid "Introduction to Ubuntu Development"
msgstr "Введение в разработку Ubuntu"

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:5
msgid ""
"Ubuntu is made up of thousands of different components, written in many "
"different programming languages. Every component -  be it a software "
"library, a tool or a graphical application - is available as a source "
"package. Source packages in most cases consist of two parts: the actual "
"source code and metadata. Metadata includes the dependencies of the package, "
"copyright and licensing information, and instructions on how to build the "
"package. Once this source package is compiled, the build process provides "
"binary packages, which are the .deb files users can install."
msgstr ""
"Ubuntu состоит из тысяч различных компонентов, написанных на множестве "
"языков программирования. Каждый компонент —  библиотека, утилита или "
"графическое приложение — доступен в виде пакета исходного кода. Пакты "
"исходных кодов в большинстве случаев состоят из двух частей: сам исходный "
"код и метаданные. Метаданные включают в себя зависимости пакета, информацию "
"об авторском праве и лицензии, а также инструкции по сборке пакета. После "
"того, как пакет исходных кодов скомпилирован, в процессе сборки мы получим "
"двоичные пакеты, являющиеся .deb файлами, которые пользователи могут "
"установить."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:14
msgid ""
"Every time a new version of an application is released, or when someone "
"makes a change to the source code that goes into Ubuntu, the source package "
"must be uploaded to Launchpad's build machines to be compiled. The resulting "
"binary packages then are distributed to the archive and its mirrors in "
"different countries. The URLs in ``/etc/apt/sources.list`` point to an "
"archive or mirror. Every day images are built for a selection of different "
"Ubuntu flavours. They can be used in various circumstances. There are images "
"you can put on a USB key, you can burn them on DVDs, you can use netboot "
"images and there are images suitable for your phone and table. Ubuntu "
"Desktop, Ubuntu Server, Kubuntu and others specify a list of required "
"packages that get on the image. These images are then used for installation "
"tests and provide the feedback for further release planning."
msgstr ""

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:27
msgid ""
"Ubuntu's development is very much dependent on the current stage of the "
"release cycle. We release a new version of Ubuntu every six months, which is "
"only possible because we have established strict freeze dates. With every "
"freeze date that is reached developers are expected to make fewer, less "
"intrusive changes. Feature Freeze is the first big freeze date after the "
"first half of the cycle has passed. At this stage features must be largely "
"implemented. The rest of the cycle is supposed to be focused on fixing bugs. "
"After that the user interface, then the documentation, the kernel, etc. are "
"frozen, then the beta release is put out which receives a lot of testing. "
"From the beta release onwards, only critical bugs get fixed and a release "
"candidate release is made and if it does not contain any serious problems, "
"it becomes the final release."
msgstr ""
"Разработка Ubuntu сильно зависит от текущей фазы цикла выпуска. Мы выпускаем "
"новую версию Ubuntu каждые шесть месяцев, что возможно только благодаря "
"тому, что мы устанавливаем точные даты «заморозки». По достижении каждой "
"даты заморозки ожидается, что разработчики будут вносить более редкие и "
"менее значительные изменения. Заморозка новых функций (feature freeze) — это "
"первая крупная дата заморозки, наступающая после прохождения первой половины "
"цикла разработки. На этом этапе новые функции должны в основном быть "
"реализованы. В оставшуюся часть цикла предполагается сфокусироваться на "
"исправлении ошибок. После этого «замораживается» пользовательский интерфейс, "
"затем документация, ядро и т.п., после чего выпускается бета-версия (beta "
"release), которая подвергается интенсивному тестированию. После того, как "
"выпущена бета-версия, исправляются только критические ошибки, и выпускается "
"release candidate, который, если он не содержит серьёзных ошибок, становится "
"в дальнейшем финальным выпуском."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:42
msgid ""
"Thousands of source packages, billions of lines of code, hundreds of "
"contributors require a lot of communication and planning to maintain high "
"standards of quality. At the beginning and in the middle of each release "
"cycle we have the Ubuntu Developer Summit where developers and contributors "
"come together to plan the features of the next releases. Every feature is "
"discussed by its stakeholders and a specification is written that contains "
"detailed information about its assumptions, implementation, the necessary "
"changes in other places, how to test it and so on. This is all done in an "
"open and transparent fashion, so you can participate remotely and listen to "
"a videocast, chat with attendants and subscribe to changes of "
"specifications, so you are always up to date."
msgstr ""

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:54
msgid ""
"Not every single change can be discussed in a meeting though, particularly "
"because Ubuntu relies on changes that are done in other projects. That is "
"why contributors to Ubuntu constantly stay in touch. Most teams or projects "
"use dedicated mailing lists to avoid too much unrelated noise. For more "
"immediate coordination, developers and contributors use Internet Relay Chat "
"(IRC). All discussions are open and public."
msgstr ""
"Однако на совещании могут быть обсуждены не все  изменения, так как Ubuntu "
"зависит от изменений, вносимых в другие проекты. Поэтому участники "
"разработки Ubuntu остаются постоянно на связи. Большинство команд или "
"проектов используют отдельные списки рассылки, чтобы избежать большого "
"потока не связанных с их специализацией писем. Для более непосредственной "
"координации разработчики и добровольные участники используют Internet Relay "
"Chat (IRC). Все обсуждения являются открытыми и публичными."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:61
msgid ""
"Another important tool regarding communication is bug reports. Whenever a "
"defect is found in a package or piece of infrastructure, a bug report is "
"filed in Launchpad. All information is collected in that report and its "
"importance, status and assignee updated when necessary. This makes it an "
"effective tool to stay on top of bugs in a package or project and organise "
"the workload."
msgstr ""
"Ещё одним важным инструментом связи являются отчёты об ошибках. Если в "
"пакете или части инфраструктуры обнаружена ошибка,  отчёт о ней отправляется "
"на Launchpad. В этом отчёте собрана вся информация, и при необходимости "
"сведения о важности, статусе ошибки и лице, назначенном для её устранения, "
"обновляются. Это делает отчёт об ошибке эффективным средством отслеживания "
"ошибок в пакетах или проектах и оптимизации рабочей нагрузки."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:68
msgid ""
"Most of the software available through Ubuntu is not written by Ubuntu "
"developers themselves. Most of it is written by developers of other Open "
"Source projects and then integrated into Ubuntu. These projects are called "
"\"Upstreams\", because their source code flows into Ubuntu, where we "
"\"just\" integrate it. The relationship to Upstreams is critically important "
"to Ubuntu. It is not just code that Ubuntu gets from Upstreams, but it is "
"also that Upstreams get users, bug reports and patches from Ubuntu (and "
"other distributions)."
msgstr ""
"Большая часть доступных в Ubuntu программ создана не самими разработчиками "
"Ubuntu. Многие из программ написаны разработчиками из других проектов с "
"открытым исходным кодом, а затем интегрированы в Ubuntu. Такие проекты "
"принято называть «апстримом» (от англ. upstream — вверх по течению), так как "
"их исходный код вливается в Ubuntu, где мы «просто» интегрируем его в "
"систему. Связь с апстримом очень важна для Ubuntu. Не только Ubuntu получает "
"программный код из апстрима, но и апстрим получает пользователей, отчёты об "
"ошибках и патчи от Ubuntu (и других дистрибутивов)."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:77
msgid ""
"The most important Upstream for Ubuntu is Debian. Debian is the distribution "
"that Ubuntu is based on and many of the design decisions regarding the "
"packaging infrastructure are made there. Traditionally, Debian has always "
"had dedicated maintainers for every single package or dedicated maintenance "
"teams. In Ubuntu there are teams that have an interest in a subset of "
"packages too, and naturally every developer has a special area of expertise, "
"but participation (and upload rights) generally is open to everyone who "
"demonstrates ability and willingness."
msgstr ""
"Наиболее важным апстримом для Ubuntu является Debian. Debian — это "
"дистрибутив, на котором основана Ubuntu, и именно там созданы многие "
"инженерные  решения, касающиеся инфраструктуры пакетов. По традиции, в "
"Debian для каждого отдельного пакета всегда имеется сопровождающий "
"(мэйнтейнер) или отдельная группа сопровождения. В Ubuntu тоже есть команды, "
"заинтересованные в работе над подмножеством пакетов и, разумеется, каждый "
"разработчик имеет собственную область компетенции, но участие (и права "
"загрузки изменений) обычно доступны любому, кто продемонстрирует способность "
"и желание работать."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:86
msgid ""
"Getting a change into Ubuntu as a new contributor is not as daunting as it "
"seems and can be a very rewarding experience. It is not only about learning "
"something new and exciting, but also about sharing the solution and solving "
"a problem for millions of users out there."
msgstr ""
"Внести изменение в Ubuntu новому участнику не так трудно, как кажется, и это "
"может быть весьма полезным опытом. Это позволяет не только научиться чему-то "
"новому и увлекательному, но и поделиться своим решением проблемы с "
"миллионами других пользователей."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:91
msgid ""
"Open Source Development happens in a distributed world with different goals "
"and different areas of focus. For example there might be the case that a "
"particular Upstream is interested in working on a new big feature while "
"Ubuntu, because of the tight release schedule, is interested in shipping a "
"solid version with just an additional bug fix. That is why we make use of "
"\"Distributed Development\", where code is being worked on in various "
"branches that are merged with each other after code reviews and sufficient "
"discussion."
msgstr ""
"Разработка открытого программного обеспечения происходит в распределённом "
"мире, в котором у разработчиков могут быть различные цели и различные "
"области интересов. Например, может быть так, что отдельный апстрим "
"заинтересован в работе над крупным нововведением, в то время как Ubuntu, "
"вследствие тесного расписания релизов, более заинтересована в выпуске "
"стабильной версии, в которой лишь исправлены некоторые ошибки. Поэтому мы "
"используем «Ubuntu Distributed Development», где работа над кодом ведётся в "
"различных ветках, которые затем сливаются друг с другом после проверки кода "
"и достаточного количества обсуждений."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:101
msgid ""
"In the example mentioned above it would make sense to ship Ubuntu with the "
"existing version of the project, add the bugfix, get it into Upstream for "
"their next release and ship that (if suitable) in the next Ubuntu release. "
"It would be the best possible compromise and a situation where everybody "
"wins."
msgstr ""
"В приведённом выше примере имеет смысл включить в Ubuntu существующую версию "
"проекта, сделать исправления ошибок, добавить их в апстрим для следующего "
"выпуска проекта и включить его (если он к этому пригоден) в следующий выпуск "
"Ubuntu. Это будет наилучшим компромиссом и ситуацией, в которой выигрывают "
"обе стороны."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:106
msgid ""
"To fix a bug in Ubuntu, you would first get the source code for the package, "
"then work on the fix, document it so it is easy to understand for other "
"developers and users, then build the package to test it. After you have "
"tested it, you can easily propose the change to be included in the current "
"Ubuntu development release. A developer with upload rights will review it "
"for you and then get it integrated into Ubuntu."
msgstr ""
"Чтобы исправить ошибку в Ubuntu, нужно сначала получить исходный код пакета, "
"поработать над его исправлением, снабдить свою работу документацией, чтобы "
"другим разработчикам и пользователям было легко понять, что именно вы "
"сделали, а затем собрать пакет и протестировать его. После того, как вы "
"протестировали изменённый пакет, можно предложить включить его в текущий "
"разрабатываемый релиз Ubuntu. Разработчик с правом загрузки проверит ваш "
"пакет и затем интегрирует его в Ubuntu."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:115
msgid ""
"When trying to find a solution it is usually a good idea to check with "
"Upstream and see if the problem (or a possible solution) is known already "
"and, if not, do your best to make the solution a concerted effort."
msgstr ""
"При попытке найти решение полезно проверить, известно ли о проблеме, над "
"которой вы работаете, в апстриме и не найдено ли там уже её возможное "
"решение. Если нет, сделайте всё возможное, чтобы решить проблему совместными "
"усилиями."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:119
msgid ""
"Additional steps might involve getting the change backported to an older, "
"still supported version of Ubuntu and forwarding it to Upstream."
msgstr ""
"Дополнительные шаги, которые вы можете предпринять, — это адаптирование "
"вашего изменения для предыдущих поддерживаемых выпусков Ubuntu и отправление "
"его в апстрим."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:122
msgid ""
"The most important requirements for success in Ubuntu development are: "
"having a knack for \"making things work again,\" not being afraid to read "
"documentation and ask questions, being a team player and enjoying some "
"detective work."
msgstr ""
"Наиболее важные требования для успешной разработки в Ubuntu: уметь "
"«заставлять вещи снова работать», не бояться читать документацию и задавать "
"вопросы, быть командным игроком и иметь некоторую склонность к работе "
"детектива."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:126
msgid ""
"Good places to ask your questions are ``ubuntu-motu@lists.ubuntu.com`` and "
"``#ubuntu-motu`` on ``irc.freenode.net``. You will easily find a lot of new "
"friends and people with the same passion that you have: making the world a "
"better place by making better Open Source software."
msgstr ""
"Подходящими местами для получения ответов на ваши вопросы являются ``ubuntu-"
"motu@lists.ubuntu.com`` и ``#ubuntu-motu`` на ``irc.freenode.net``. Там вы "
"легко найдёте множество новых друзей и людей, разделяющих вашу страсть: "
"делать мир лучше, улучшая открытое программное обеспечение."

#: ../ubuntu-packaging-guide/kde.rst:3
msgid "KDE Packaging"
msgstr "Работа с пакетами KDE"

#: ../ubuntu-packaging-guide/kde.rst:5
msgid ""
"Packaging of KDE programs in Ubuntu is managed by the Kubuntu and MOTU "
"teams.  You can contact the Kubuntu team on the `Kubuntu mailing list`_ and "
"``#kubuntu-devel`` Freenode IRC channel.  More information about Kubuntu "
"development is on the `Kubuntu wiki page`_."
msgstr ""
"Создание пакетов приложений KDE в Ubuntu управляется командами Kubuntu и "
"MOTU.  Связаться с командой Kubuntu можно через `список рассылки Kubuntu`_ и "
"Freenode IRC-канал ``#kubuntu-devel``.  Дополнительная информация о "
"разработке Kubuntu находится на  `вики-странице Kubuntu`_."

#: ../ubuntu-packaging-guide/kde.rst:10
msgid ""
"Our packaging follows the practices of the `Debian Qt/KDE Team`_ and Debian "
"KDE Extras Team.  Most of our packages are derived from the packaging of "
"these Debian teams."
msgstr ""
"Наша работа с пакетами следует практике `команды Debian Qt/KDE`_ и команды "
"Debian KDE Extras.  Большинство наших пакетов являются производными от "
"пакетов этих команд Debian."

#: ../ubuntu-packaging-guide/kde.rst:15
msgid "Patching Policy"
msgstr "Политика создания патчей"

#: ../ubuntu-packaging-guide/kde.rst:17
msgid ""
"Kubuntu does not add patches to KDE programs unless they come from the "
"upstream authors or submitted upstream with the expectation they will be "
"merged soon or we have consulted the issue with the upstream authors."
msgstr ""
"Kubuntu добавляет патчи в приложения KDE, только если они исходят от "
"оригинальных авторов, либо если они были отправлены в upstream и есть "
"уверенность в их скором принятии, либо если мы обсудили проблемы с "
"разработчиками KDE."

#: ../ubuntu-packaging-guide/kde.rst:22
msgid ""
"Kubuntu does not change the branding of packages except where upstream "
"expects this (such as the top left logo of the Kickoff menu) or to simplify "
"(such as removing splash screens)."
msgstr ""
"Kubuntu не меняет фирменного оформления пакетов, кроме случаев, когда этого "
"требует апстрим (например, логотип в верхнем левом углу меню Kickoff) или "
"для упрощения (например, удаление показываемых при запуске заставок)."

#: ../ubuntu-packaging-guide/kde.rst:27
#: ../ubuntu-packaging-guide/python-packaging.rst:31
msgid "debian/rules"
msgstr "debian/rules"

#: ../ubuntu-packaging-guide/kde.rst:29
msgid ""
"Debian packages include some additions to the basic Debhelper usage. These "
"are kept in the ``pkg-kde-tools`` package."
msgstr ""
"Пакеты Debian включают некоторые дополнения к обычному использованию "
"Debhelper. Они хранятся в пакете ``pkg-kde-tools``."

#: ../ubuntu-packaging-guide/kde.rst:32
msgid ""
"Packages which use Debhelper 7 should add the ``--with=kde`` option. This "
"will ensure the correct build flags are used and add options such as "
"handling kdeinit stubs and translations::"
msgstr ""
"Пакеты, использующие Debhelper 7, должны добавить опцию ``--with=kde``. Это "
"позволит убедиться в использовании правильных флагов сборки и опций, таких "
"как обработка заданий kdeinit и файлов перевода."

#: ../ubuntu-packaging-guide/kde.rst:39
msgid ""
"Some newer KDE packages use the ``dhmk`` system, an alternative to ``dh`` "
"made by the Debian Qt/KDE team.  You can read about it in /usr/share/pkg-kde-"
"tools/qt-kde-team/2/README.  Packages using this will ``include "
"/usr/share/pkg-kde-tools/qt-kde-team/2/debian-qt-kde.mk`` instead of running "
"``dh``."
msgstr ""
"Некоторые новые пакеты KDE используют систему ``dhmk``, альтернативу ``dh``, "
"созданную командой Debian Qt/KDE.  Прочесть о ней можно в /usr/share/pkg-kde-"
"tools/qt-kde-team/2/README.  Использующие её пакеты будут ``включать "
"/usr/share/pkg-kde-tools/qt-kde-team/2/debian-qt-kde.mk`` вместо запуска "
"``dh``."

#: ../ubuntu-packaging-guide/kde.rst:47
msgid "Translations"
msgstr "Переводы"

#: ../ubuntu-packaging-guide/kde.rst:49
msgid ""
"Packages in main have their translations imported into Launchpad and "
"exported from Launchpad into Ubuntu's language-packs."
msgstr ""
"Переводы пакетов из репозитория main импортируются на Launchpad и "
"экспортируются с Launchpad в языковые пакеты Ubuntu."

#: ../ubuntu-packaging-guide/kde.rst:52
msgid ""
"So any KDE package in main must generate translation templates, include or "
"make available upstream translations and handle ``.desktop`` file "
"translations."
msgstr ""
"Итак, каждый KDE-пакет в main должен создавать шаблоны переводов, включать "
"оригинальные переводы и обрабатывать переводимые строки в ``.desktop``-"
"файлах."

#: ../ubuntu-packaging-guide/kde.rst:56
msgid ""
"To generate translation templates the package must include a ``Messages.sh`` "
"file; complain to the upstream if it does not.  You can check it works by "
"running ``extract-messages.sh`` which should produce one or more ``.pot`` "
"files in ``po/``.  This will be done automatically during build if you use "
"the ``--with=kde`` option to ``dh``."
msgstr ""
"Для генерации шаблонов переводов пакет должен содержать файл "
"``Messages.sh``; если его там нет, обратитесь в апстрим.  Проверить его "
"работу можно, выполнив сценарий ``extract-messages.sh``, который должен "
"создать один или несколько файлов ``.pot`` в каталоге ``po/``.  В процессе "
"сборки это будет сделано автоматически, если вы используете опцию ``--"
"with=kde`` для ``dh``."

#: ../ubuntu-packaging-guide/kde.rst:63
msgid ""
"Upstream will usually have also put the translation ``.po`` files into the "
"``po/`` directory.  If they do not, check if they are in separate upstream "
"language packs such as the KDE SC language packs.  If they are in separate "
"language packs Launchpad will need to associate these together manually, "
"contact `dpm`_ to do this."
msgstr ""
"Апстрим обычно также помещает файлы перевода ``.po`` в каталог ``po/``.  "
"Если их там нет, проверьте, не находятся ли они в отдельных языковых пакетах "
"апстрима, таких как языковые пакеты KDE SC.  Если они в отдельном языковом "
"пакете, Launchpad нужно будет объединить их вручную, свяжитесь для этого с "
"`dpm`_."

#: ../ubuntu-packaging-guide/kde.rst:69
msgid ""
"If a package is moved from universe to main it will need to be re-uploaded "
"before the translations get imported into Launchpad."
msgstr ""
"Если пакет перемещён из universe в main, его следует перевыгрузить перед "
"импортом переводов на Launchpad."

#: ../ubuntu-packaging-guide/kde.rst:72
msgid ""
"``.desktop`` files also need translations.  We patch KDELibs to read "
"translations out of ``.po`` files which are pointed to by a line ``X-Ubuntu-"
"Gettext-Domain=`` added to ``.desktop`` files at package build time.  A .pot "
"file for each package is be generated at build time and .po files need to be "
"downloaded from upstream and included in the package or in our language "
"packs.  The list of .po files to be downloaded from KDE's repositories is in "
"``/usr/lib/kubuntu-desktop-i18n/desktop-template-list``."
msgstr ""
"Файлы ``.desktop`` также требуют перевода.  Мы добавили патч к KDELibs для "
"чтения переводов из ``.po``-файлов, указывающих на строку ``X-Ubuntu-Gettext-"
"Domain=``, добавляемую к файлам ``.desktop`` во время сборки пакета.  Файл "
".pot для каждого пакета генерируется во время сборки и .po-файлы необходимо "
"скачать из апстрима и включить в пакет или в наши языковые пакеты.  Список  "
".po-файлов, которые нужно скачать из репозиториев KDE, находится в "
"``/usr/lib/kubuntu-desktop-i18n/desktop-template-list``."

#: ../ubuntu-packaging-guide/kde.rst:82
msgid "Library Symbols"
msgstr "Библиотечные символы"

#: ../ubuntu-packaging-guide/kde.rst:84
msgid ""
"Library symbols are tracked in ``.symbols`` files to ensure none go missing "
"for new releases.  KDE uses C++ libraries which act a little differently "
"compared to C libraries.  Debian's Qt/KDE Team have scripts to handle this. "
"See `Working with symbols files`_ for how to create and keep these files up "
"to date."
msgstr ""
"Библиотечные символы хранятся в файлах ``.symbols``, для того чтобы при "
"появлении новых версий не было отсутствующих символов. KDE использует "
"библиотеки C++, которые немного отличаются от библиотек C. Команда Debian "
"Qt/KDE имеет скрипты, обрабатывающие это. Смотрите страницу `Working with "
"symbols files`_ для подробностей по созданию этих файлов и поддерживанию их "
"в актуальном состоянии."

#: ../ubuntu-packaging-guide/libraries.rst:3
msgid "Shared Libraries"
msgstr "Общие библиотеки"

#: ../ubuntu-packaging-guide/libraries.rst:5
msgid ""
"Shared libraries are compiled code which is intended to be shared among "
"several different programs.  They are distributed as ``.so`` files in "
"``/usr/lib/``."
msgstr ""
"Общие библиотеки — это скомпилированный код, предназначенный для совместного "
"использования несколькими различными программами. Они распространяются в "
"виде файлов ``.so`` в ``/usr/lib/``."

#: ../ubuntu-packaging-guide/libraries.rst:9
msgid ""
"A library exports symbols which are the compiled versions of functions, "
"classes and variables.  A library has a name called an SONAME which includes "
"a version number.  This SONAME version does not necessarily match the public "
"release version number.  A program gets compiled against a given SONAME "
"version of the library.  If any of the symbols is removed or changes then "
"the version number needs to be changed which forces any packages using that "
"library to be recompiled against the new version.  Version numbers are "
"usually set by upstream and we follow them in our binary package names "
"called an ABI number, but sometimes upstreams do not use sensible version "
"numbers and packagers have to keep separate version numbers."
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:21
msgid ""
"Libraries are usually distributed by upstream as standalone releases. "
"Sometimes they are distributed as part of a program.  In this case they can "
"be included in the binary package along with the program (this is called "
"bundling) if you do not expect any other programs to use the library, more "
"often they should be split out into separate binary packages."
msgstr ""
"Библиотеки обычно распространяются апстримом в виде отдельных выпусков. "
"Иногда они распространяются, как часть программы. В последнем случае они "
"могут быть включены в двоичный пакет вместе с программой (это называется "
"bundling), если вы не предполагаете использование этих библиотек другими "
"программами, но чаще их всё же следует выделять в отдельные двоичные пакеты."

#: ../ubuntu-packaging-guide/libraries.rst:27
msgid ""
"The libraries themselves are put into a binary package named ``libfoo1`` "
"where ``foo`` is the name of the library and ``1`` is the version from the "
"SONAME. Development files from the package, such as header files, needed to "
"compile programs against the library are put into a package called ``libfoo-"
"dev``."
msgstr ""
"Сами библиотеки помещаются в двоичный пакет с именем ``libfoo1``, где "
"``foo`` — имя библиотеки, а ``1`` — версия из SONAME. Файлы разработки из "
"пакета, такие как заголовочные файлы, необходимые для компиляции программ с "
"библиотекой, помещаются в пакет с именем ``libfoo-dev``."

#: ../ubuntu-packaging-guide/libraries.rst:34
msgid "An Example"
msgstr "Пример"

#: ../ubuntu-packaging-guide/libraries.rst:36
msgid "We will use libnova as an example::"
msgstr "В качестве примера мы используем libnova::"

#: ../ubuntu-packaging-guide/libraries.rst:41
msgid "To find the SONAME of the library run::"
msgstr "Чтобы найти SONAME библиотеки, выполните::"

#: ../ubuntu-packaging-guide/libraries.rst:45
msgid ""
"The SONAME is ``libnova-0.12.so.2``, which matches the file name (usually "
"the case but not always). Here upstream has put the upstream version number "
"as part of the SONAME and given it an ABI version of ``2``.  Library package "
"names should follow the SONAME of the library they contain. The library "
"binary package is called ``libnova-0.12-2`` where ``libnova-0.12`` is the "
"name of the library and ``2`` is our ABI number."
msgstr ""
"SONAME в данном случае ``libnova-0.12.so.2``, что соответствует имени файла "
"(как правило, но не всегда). Здесь апстрим поместил номер версии из "
"апстрима, как часть SONAME, и задал ABI-версию ``2``.  Имена библиотечных "
"пакетов должны следовать SONAME библиотеки, которую они содержат. Двоичный "
"библиотечный пакет называется ``libnova-0.12-2``, где ``libnova-0.12`` — имя "
"библиотеки, а ``2`` —  наш ABI-номер."

#: ../ubuntu-packaging-guide/libraries.rst:52
msgid ""
"If upstream makes incompatible changes to their library they will have to "
"reversion their SONAME and we will have to rename our library.  Any other "
"packages using our library package will need to recompiled against the new "
"version, this is called a transition and can take some effort. Hopefully our "
"ABI number will continue to match upstream's SONAME but sometimes they "
"introduce incompatibilities without changing their version number and we "
"will need to change ours."
msgstr ""
"Если авторы из апстрима внесли несовместимые изменения в свою библиотеку, "
"они должны изменить номер версии SONAME, а мы должны переименовать нашу "
"библиотеку. Любые другие пакеты, использующие наш библиотечный пакет, нужно "
"будет перекомпилировать с новой весрией, это называется переходом "
"(transition) и требует некоторых усилий. Надо надеяться, наш ABI-номер "
"продолжит соответствовать SONAME апстрима, но иногда они вносят "
"несовместимости без изменения их номера версии, а нам нужно изменить наш."

#: ../ubuntu-packaging-guide/libraries.rst:60
msgid ""
"Looking in debian/libnova-0.12-2.install we see it includes two files::"
msgstr ""
"Взглянув на debian/libnova-0.12-2.instal, мы увидим, что он включает в себя "
"два файла::"

#: ../ubuntu-packaging-guide/libraries.rst:65
msgid ""
"The last one is the actual library, complete with minor and point version "
"number.  The first one is a symlink which points to the actual library.  The "
"symlink is what programs using the library will look for, the running "
"programs do not care about the minor version number."
msgstr ""
"Вторая строчка — настоящая библиотека, с полным номером версии. Первая — "
"символическая ссылка, указывающая на настоящую библиотеку. Программы, "
"использующие библиотеку, как правило, будут пользоваться символической "
"ссылкой."

#: ../ubuntu-packaging-guide/libraries.rst:70
msgid ""
"``libnova-dev.install`` includes all the files needed to compile a program "
"with this library.  Header files, a config binary, the ``.la`` libtool file "
"and ``libnova.so`` which is another symlink pointing at the library, "
"programs compiling against the library do not care about the major version "
"number (although the binary they compile into will)."
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:76
msgid ""
"``.la`` libtool files are needed on some non-Linux systems with poor library "
"support but usually cause more problems than they solve on Debian systems.  "
"It is a current `Debian goal to remove .la files`_ and we should help with "
"this."
msgstr ""
"Файлы ``.la`` (libtool) необходимы в некоторых не-Linux системах с плохой "
"поддержкой библиотек, но в системах Debian они обычно вызывают больше "
"проблем, чем решают.  Текущая цель Debian — убрать файлы .la (`Debian goal "
"to remove .la files`_), и мы должны  в этом помочь."

#: ../ubuntu-packaging-guide/libraries.rst:82
msgid "Static Libraries"
msgstr "Статические библиотеки"

#: ../ubuntu-packaging-guide/libraries.rst:84
msgid ""
"The -dev package also ships ``usr/lib/libnova.a``.  This is a static "
"library, an alternative to the shared library.  Any program compiled against "
"the static library will include the code directory into itself.  This gets "
"round worrying about binary compatibility of the library.  However it also "
"means that any bugs, including security issues, will not be updated along "
"with the library until the program is recompiled.  For this reason programs "
"using static libraries are discouraged."
msgstr ""
"Пакет -dev также содержит ``usr/lib/libnova.a``.  Это статическая "
"библиотека, альтернатива общей библиотеке.  Любая программа, "
"скомпилированная со статической библиотекой, содержит её код непосредственно "
"в себе.  Это позволяет не беспокоиться о двоичной совместимости библиотеки.  "
"Однако это также означает, что любые ошибки, в том числе уязвимости в "
"безопасности, не будут исправлены за счёт обновления библиотеки, пока "
"программа не будет перекомпилирована.  По этой причине использовать "
"программы со статическими библиотеками не рекомендуется."

#: ../ubuntu-packaging-guide/libraries.rst:94
msgid "Symbol Files"
msgstr "Символьные файлы"

#: ../ubuntu-packaging-guide/libraries.rst:96
msgid ""
"When a package builds against a library the ``shlibs`` mechanism will add a "
"package dependency on that library.  This is why most programs will have "
"``Depends: ${shlibs:Depends}`` in ``debian/control``.  That gets replaced "
"with the library dependencies at build time.  However shlibs can only make "
"it depend on the major ABI version number, ``2`` in our libnova example, so "
"if new symbols get added in libnova 2.1 a program using these symbols could "
"still be installed against libnova ABI 2.0 which would then crash."
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:104
msgid ""
"To make the library dependencies more precise we keep ``.symbols`` files "
"that list all the symbols in a library and the version they appeared in."
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:107
msgid ""
"libnova has no symbols file so we can create one.  Start by compiling the "
"package::"
msgstr ""
"libnova не имеет символьного файла, так что мы можем создать его. Начните с "
"компиляции пакета::"

#: ../ubuntu-packaging-guide/libraries.rst:112
msgid ""
"The ``-nc`` will cause it to finish at the end of compilation without "
"removing the built files.  Change to the build and run ``dpkg-gensymbols`` "
"for the library package::"
msgstr ""
"Опция ``-nc`` указывает не удалять сборочные файлы после завершения "
"компиляции.  Перейдите в каталог сборки и выполните  ``dpkg-gensymbols`` для "
"пакета библиотеки::"

#: ../ubuntu-packaging-guide/libraries.rst:119
msgid "This makes a diff file which you can self apply::"
msgstr "Это создаст diff-файл, который вы сможете применить самостоятельно::"

#: ../ubuntu-packaging-guide/libraries.rst:123
msgid ""
"Which will create a file named similar to ``dpkg-gensymbolsnY_WWI`` that "
"lists all the symbols.  It also lists the current package version.  We can "
"remove the packaging version from that listed in the symbols file because "
"new symbols are not generally added by new packaging versions, but by the "
"upstream developers::"
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:130
msgid "Now move the file into its location, commit and do a test build::"
msgstr ""
"Теперь переместите файл туда, где он должен находиться, зафиксируйте "
"изменения и выполните тестовую сборку::"

#: ../ubuntu-packaging-guide/libraries.rst:138
msgid ""
"If it successfully compiles the symbols file is correct.  With the next "
"upstream version of libnova you would run dpkg-gensymbols again and it will "
"give a diff to update the symbols file."
msgstr ""
"Если компиляция выполняется успешно, значит символьный файл не содержит "
"ошибок.  С выходом следующей апстрим-версии libnova вам придётся снова "
"запустить dpkg-gensymbols, чтобы создать diff для обновления символьного "
"файла."

#: ../ubuntu-packaging-guide/libraries.rst:143
msgid "C++ Library Symbols Files"
msgstr "Символьные файлы библиотек C++"

#: ../ubuntu-packaging-guide/libraries.rst:145
msgid ""
"C++ has even more exacting standards of binary compatibility than C.  The "
"Debian Qt/KDE Team maintain some scripts to handle this, see their `Working "
"with symbols files`_ page for how to use them."
msgstr ""
"C++ имеет ещё более строгие стандарты двоичной совместимости, чем C.  "
"Команда Debian Qt/KDE поддерживает несколько сценариев для работы с ними: "
"посетите их страницу `Working with symbols files`_, чтобы узнать как "
"пользоваться этими сценариями."

#: ../ubuntu-packaging-guide/libraries.rst:150
msgid "Further Reading"
msgstr "Информация для дальнейшего чтения"

#: ../ubuntu-packaging-guide/libraries.rst:152
msgid ""
"Junichi Uekawa's `Debian Library Packaging Guide`_ goes into this topic in "
"more detail."
msgstr ""
"В `Debian Library Packaging Guide`_ (автор: Junichi Uekawa) эта тема "
"рассматривается более подробно."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:3
msgid "Packaging New Software"
msgstr "Создание пакетов для новых программ"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:5
msgid ""
"While there are thousands of packages in the Ubuntu archive, there are still "
"a lot nobody has gotten to yet. If there is an exciting new piece of "
"software that you feel needs wider exposure, maybe you want to try your hand "
"at creating a package for Ubuntu or a PPA_. This guide will take you through "
"the steps of packaging new software."
msgstr ""
"Хотя в архиве Ubuntu имеются тысячи пакетов, есть ещё много программ, "
"которыми никто не занимается. Если вы знаете о какой-то замечательной "
"программе, о которой, по вашему мнению, стоит узнать более широкому кругу "
"пользователей, вы можете попробовать приложить свою руку к созданию пакета "
"для Ubuntu или PPA_. Это руководство проведёт вас через этапы создания "
"пакета для новой программы."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:11
msgid ""
"You will want to read the :doc:`Getting Set Up<./getting-set-up>` article "
"first in order to prepare your development environment."
msgstr ""
"Сначала вам следует прочитать статью :doc:`Подготовка<./getting-set-up>`, "
"чтобы подготовить свою среду разработки."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:15
msgid "Checking the Program"
msgstr "Проверка программы"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:17
msgid ""
"The first stage in packaging is to get the released tar from upstream (we "
"call the authors of applications \"upstream\") and check that it compiles "
"and runs."
msgstr ""
"Первым этапом создания пакета является получение tar-файла из апстрима "
"(«апстримом» мы называем авторов приложений) и проверка того, что он "
"нормально компилируется и запускается."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:20
msgid ""
"This guide will take you through packaging a simple application called GNU "
"Hello which has been posted on GNU.org_."
msgstr ""
"Это руководство проведёт вас через процесс создания пакета для небольшого "
"приложения GNU Hello, доступного на GNU.org_."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:23
msgid ""
"If you don't have the build tools lets make sure we have them first.  Also "
"if you don't have the required dependencies lets install those as well."
msgstr ""
"Если у вас ещё нет инструментов сборки, установите их. Также установите все "
"необходимые зависимости."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:26
msgid "Install build tools::"
msgstr "Установим инструменты сборки::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:30
msgid "Download main package::"
msgstr "Скачаем основной пакет::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:34
msgid "Now uncompress main package::"
msgstr "Теперь распакуем основной пакет::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:39
msgid ""
"This application uses the autoconf build system so we want to run "
"``./configure`` to prepare for compilation."
msgstr ""
"Это приложение использует систему сборки autoconf, так что нам нужно "
"запустить ``./configure`` для подготовки к компиляции."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:42
msgid ""
"This will check for the required build dependencies. As ``hello`` is a "
"simple example, ``build-essential`` should provide everything we need. For "
"more complex programs, the command will fail if you do not have the needed "
"libraries and development files. Install the needed packages and repeat "
"until the command runs successfully.::"
msgstr ""
"При этом будет проверено наличие необходимых для сборки зависимостей. "
"Поскольку ``hello`` — простой пример, ``build-essential`` обеспечит нас "
"всем, что нужно. Для более сложных программ, команда завершится ошибкой, "
"если у нас нет необходимых библиотек и файлов для разработки. Установите "
"требуемые пакеты и повторите процесс, пока команда не завершится успешно.::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:50
msgid "Now you can compile the source::"
msgstr "Теперь нужно скомпилировать исходный код::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:54
msgid ""
"If compilation completes successfully you can install and run the program::"
msgstr ""
"Если компиляция завершилась успешно, можно установить и запустить программу::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:60
msgid "Starting a Package"
msgstr "Создание пакета"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:62
msgid ""
"``bzr-builddeb`` includes a plugin to create a new package from a template. "
"The plugin is a wrapper around the ``dh_make`` command. You should already "
"have these if you installed ``packaging-dev``. Run the command providing the "
"package name, version number, and path to the upstream tarball::"
msgstr ""
"``bzr-builddeb`` содержит модуль для создания нового пакета из шаблона. Этот "
"модуль является обёрткой вокруг команды ``dh_make`` . Он уже должен быть у "
"вас, если вы установили ``packaging-dev``. Запустите команду, указав имя "
"пакета, номер версии и путь к tar-архиву из апстрима::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:71
msgid ""
"When it asks what type of package type ``s`` for single binary. This will "
"import the code into a branch and add the ``debian/`` packaging directory.  "
"Have a look at the contents.  Most of the files it adds are only needed for "
"specialist packages (such as Emacs modules) so you can start by removing the "
"optional example files::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:80
msgid "You should now customise each of the files."
msgstr "Теперь нужно внести изменения в каждый из файлов."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:82
msgid ""
"In ``debian/changelog`` change the version number to an Ubuntu version: "
"``2.7-0ubuntu1`` (upstream version 2.7, Debian version 0, Ubuntu version 1). "
" Also change ``unstable`` to the current development Ubuntu release such as "
"``precise``."
msgstr ""
"В ``debian/changelog`` измените номер версии на версию для Ubuntu: ``2.7-"
"0ubuntu1`` (версия в апстриме 2.7, версия в Debian 0, версия в Ubuntu 1).  "
"Также замените ``unstable`` на текущий разрабатываемый выпуск Ubuntu, "
"например, ``precise``."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:87
msgid ""
"Much of the package building work is done by a series of scripts called "
"``debhelper``.  The exact behaviour of ``debhelper`` changes with new major "
"versions, the compat file instructs ``debhelper`` which version to act as.  "
"You will generally want to set this to the most recent version which is "
"``8``."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:93
msgid ""
"``control`` contains all the metadata of the package.  The first paragraph "
"describes the source package. The second and following paragraphs describe "
"the binary packages to be built.  We will need to add the packages needed to "
"compile the application to ``Build-Depends:``. For ``hello``, make sure that "
"it includes at least::"
msgstr ""
"Файл ``control`` содержит все метаданные пакета.  Первый абзац описывает "
"пакет исходных кодов. Второй и следующие абзацы описывают двоичные пакеты, "
"которые должны быть собраны.  Нам понадобится добавить пакеты, необходимые "
"для компиляции приложения в ``Build-Depends:``. Для ``hello`` он должен "
"включать, как минимум::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:101
msgid ""
"You will also need to fill in a description of the program in the "
"``Description:`` field."
msgstr "Также нужно заполнить описание программы в поле ``Description:``."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:104
msgid ""
"``copyright`` needs to be filled in to follow the licence of the upstream "
"source.  According to the hello/COPYING file this is GNU GPL 3 or later."
msgstr ""
"``copyright`` нужно заполнить в соответствии с лицензией на источник из "
"апстрима.  Согласно файлу hello/COPYING, это лицензия GNU GPL 3 или более "
"поздняя её версия."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:107
msgid ""
"``docs`` contains any upstream documentation files you think should be "
"included in the final package."
msgstr ""
"``docs`` должен содержать любые файлы документации из апстрима, которые, по "
"вашему мнению, должны быть включены в готовый пакет."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:110
msgid ""
"``README.source`` and ``README.Debian`` are only needed if your package has "
"any non-standard features, we don't so you can delete them."
msgstr ""
"``README.source`` и ``README.Debian`` необходимы, лишь если ваш пакет имеет "
"какие-то нестандартные функции. У нас таких нет, так что можно удалить эти "
"файлы."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:113
msgid ""
"``source/format`` can be left as is, this describes the version format of "
"the source package and should be ``3.0 (quilt)``."
msgstr ""
"``source/format`` можно оставить как есть, он описывает формат версии пакета "
"исходного кода, который должен быть ``3.0 (quilt)``."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:116
msgid ""
"``rules`` is the most complex file.  This is a Makefile which compiles the "
"code and turns it into a binary package.  Fortunately most of the work is "
"automatically done these days by ``debhelper 7`` so the universal ``%`` "
"Makefile target just runs the ``dh`` script which will run everything needed."
msgstr ""
"``rules`` — самый сложный файл.  Это Makefile, который компилирует код и "
"превращает его в двоичный пакет.  К счастью, основную часть работы в наши "
"дни автоматически выполняет ``debhelper 7``, так что универсальная цель "
"``%`` просто запускает сценарий ``dh``, который делает всё, что необходимо."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:121
msgid ""
"All of these file are explained in more detail in the :doc:`overview of the "
"debian directory<./debian-dir-overview>` article."
msgstr ""
"Все эти файлы подробнее описаны в статье :doc:`обзор каталога debian "
"<./debian-dir-overview>`."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:124
msgid "Finally commit the code to your packaging branch::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:129
#: ../ubuntu-packaging-guide/udd-working.rst:69
msgid "Building the package"
msgstr "Сборка пакета"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:131
msgid ""
"Now we need to check that our packaging successfully compiles the package "
"and builds the .deb binary package::"
msgstr ""
"Теперь нам нужно проверить, что наши исходные файлы для пакета успешно "
"компилируются и собираются в двоичный .deb-пакет::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:137
msgid ""
"``bzr builddeb`` is a command to build the package in its current location. "
"The ``-us -uc`` tell it there is no need to GPG sign the package.  The "
"result will be placed in ``..``."
msgstr ""
"``bzr builddeb`` — это команда для сборки пакета в его текущем "
"местоположении. ``-us -uc`` сообщает что подписывать пакет с помощью  GPG не "
"требуется.  Результат будет помещён в каталог «..»."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:141
msgid "You can view the contents of the package with::"
msgstr "Просмотреть содержимое пакета можно с помощью::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:145
msgid "Install the package and check it works::"
msgstr "Установите пакет и проверьте, работает ли он::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:150
msgid "Next Steps"
msgstr "Дальнейшие шаги"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:152
msgid ""
"Even if it builds the .deb binary package, your packaging may have bugs.  "
"Many errors can be automatically detected by our tool ``lintian`` which can "
"be run on both the source .dsc metadata file and the .deb binary package::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:160
msgid ""
"A description of each of the problems it reports can be found on the "
"`lintian website`_."
msgstr ""
"Описание каждой проблемы, о которой он сообщает, можно найти на `веб-сайте "
"lintian`_."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:163
msgid ""
"After making a fix to the packaging you can rebuild using ``-nc`` \"no "
"clean\" without having to build from scratch::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:168
msgid ""
"Having checked that the package builds locally you should ensure it builds "
"on a clean system using ``pbuilder``. Since we are going to upload to a PPA "
"(Personal Package Archive) shortly, this upload will need to be *signed* to "
"allow Launchpad to verify that the upload comes from you (you can tell the "
"upload will be signed because the ``-us`` and ``-uc`` flags are not passed "
"to ``bzr builddeb`` like they were before). For signing to work you need to "
"have set up GPG. If you haven't set up ``pbuilder-dist`` or GPG yet, "
":doc:`do so now<./getting-set-up>`::"
msgstr ""
"Убедившись, что пакет успешно собирается локально, вы должны проверить, "
"правильно ли его сборка будет проходить в чистой системе, с помощью "
"``pbuilder``. Поскольку вскоре мы собираемся загрузить его в PPA "
"(персональный архив пакетов), эту загрузку нужно снабдить *цифровой "
"подписью*, чтобы Launchpad мог удостовериться, что загрузку сделали вы "
"(узнать о том, что загрузка будет подписана, можно по отсутствию "
"передаваемых ``bzr builddeb`` флагов ``-us`` и ``-uc``, которые мы "
"использовали ранее). Для подписывания своей работы вам понадобится настроить "
"GPG. Если вы ещё не настроили ``pbuilder-dist`` или GPG, :doc:`сделайте это "
"сейчас<./getting-set-up>`::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:181
msgid ""
"When you are happy with your package you will want others to review it.  You "
"can upload the branch to Launchpad for review::"
msgstr ""
"После того как вы останетесь довольны получившимся пакетом, нужно, чтобы его "
"проверили другие люди.  Вы можете выгрузить ветку на Launchpad для проверки::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:186
msgid ""
"Uploading it to a PPA will ensure it builds and give an easy way for you and "
"others to test the binary packages.  You will need to set up a PPA in "
"Launchpad and then upload with ``dput``::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:192
msgid "See :doc:`uploading<./udd-uploading>` for more information."
msgstr ""
"Смотрите раздел «:doc:`Загрузка<./udd-uploading>`» для дополнительной "
"информации."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:194
msgid ""
"You can ask for reviews in ``#ubuntu-motu`` IRC channel, or on the `MOTU "
"mailing list`_.  There might also be a more specific team you could ask such "
"as the GNU team for more specific questions."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:199
msgid "Submitting for inclusion"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:201
msgid ""
"There are a number of paths that a package can take to enter Ubuntu. In most "
"cases, going through Debian first can be the best path. This way ensures "
"that your package will reach the largest number of users as it will be "
"available in not just Debian and Ubuntu but all of their derivatives as "
"well. Here are some useful links for submitting new packages to Debian:"
msgstr ""
"Существует несколько путей, которыми пакет может попасть в Ubuntu. В "
"большинстве случаев лучшим путём может быть прохождение сначала через "
"Debian. Это позволит вашему пакету стать доступным для наибольшего "
"количества пользователей, так как он будет доступен не только в Debian и "
"Ubuntu, но и во всех дистрибутивах, созданных на их основе. Вот несколько "
"полезных ссылок по отправке новых пакетов в Debian:"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:208
msgid ""
"`Debian Mentors FAQ`_ - debian-mentors is for the mentoring of new and "
"prospective Debian Developers. It is where you can find a sponsor to upload "
"your package to the archive."
msgstr ""
"`Debian Mentors FAQ`_ — debian-mentors является основным местом для "
"создания, просмотра и загрузки в Debian новых пакетов. Здесь вы можете найти "
"разработчика Debian для загрузки вашего пакета в архив."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:212
msgid ""
"`Work-Needing and Prospective Packages`_ - Information on how to file "
"\"Intent to Package\" and \"Request for Package\" bugs as well as list of "
"open ITPs and RFPs."
msgstr ""
"`Work-Needing and Prospective Packages`_ — Информация о том, как подать "
"\"Intent to Package\" и \"Request for Package\" заявки, а также список "
"открытых ITP и RFP."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:216
msgid ""
"`Debian Developer's Reference, 5.1. New packages`_ - The entire document is "
"invaluable for both Ubuntu and Debian packagers. This section documents "
"processes for submitting new packages."
msgstr ""
"`Debian Developer's Reference, 5.1. New packages`_ — весь документ бесценен "
"для создателей пакетов как для Ubuntu, так и для Debian. Этот раздел "
"документирует процессы по отправке новых пакетов."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:220
msgid ""
"In some cases, it might make sense to go directly into Ubuntu first. For "
"instance, Debian might be in a freeze making it unlikely that your package "
"will make it into Ubuntu in time for the next release. This process is "
"documented on the `\"New Packages\"`_ section of the Ubuntu wiki."
msgstr ""
"В некоторых случаях может иметь смысл сначала отправить пакет "
"непосредственно в Ubuntu. Например, если версия Debian находится в состоянии "
"заморозки, что делает маловероятным своевременное попадание вашего пакета в "
"новый выпуск Ubuntu. Этот процесс документирован в разделе `\"New "
"Packages\"`_ вики-страниц Ubuntu."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:3
msgid "Patches to Packages"
msgstr "Патчи для пакетов"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:5
msgid ""
"Sometimes, Ubuntu package maintainers have to change the upstream source "
"code in order to make it work properly on Ubuntu.  Examples include, patches "
"to upstream that haven't yet made it into a released version, or changes to "
"the upstream's build system needed only for building it on Ubuntu.  We could "
"change the upstream source code directly, but doing this makes it more "
"difficult to remove the patches later when upstream has incorporated them, "
"or extract the change to submit to the upstream project.  Instead, we keep "
"these changes as separate patches, in the form of diff files."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:14
msgid ""
"There are a number of different ways of handling patches in Debian packages, "
"fortunately we are standardizing on one system, `Quilt`_, which is now used "
"by most packages."
msgstr ""
"Существуют различные способы работы с патчами для пакетов Debian. К счастью, "
"мы остановимся на одной системе, `Quilt`_, которая сейчас используется "
"большинством пакетов."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:18
msgid "Let's look at an example package, ``kamoso`` in Natty::"
msgstr "Давайте рассмотрим в качестве примера пакет ``kamoso`` в Natty::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:22
msgid ""
"The patches are kept in ``debian/patches``.  This package has one patch "
"``kubuntu_01_fix_qmax_on_armel.diff`` to fix a compile failure on ARM.  The "
"patch has been given a name to describe what it does, a number to keep the "
"patches in order (two patches can overlap if they change the same file) and "
"in this case the Kubuntu team adds their own prefix to show the patch comes "
"from them rather than from Debian."
msgstr ""
"Патчи хранятся в ``debian/patches``.  Для этого пакета имеется один патч "
"``kubuntu_01_fix_qmax_on_armel.diff`` для исправления ошибки компиляции на "
"платформе ARM.  Этому патчу присвоено имя, описывающее, что он делает, номер "
"патча по порядку (чтобы избежать  путаницы, если два патча имеют одинаковое "
"имя) и, в данном случае, команда Kubuntu добавила свой собственный префикс, "
"чтобы показать, что патч исходит от них, а не от Debian."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:29
msgid "The order of patches to apply is kept in ``debian/patches/series``."
msgstr "Порядок применения патчей хранится в ``debian/patches/series``."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:32
msgid "Patches with Quilt"
msgstr "Патчи с помощью Quilt"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:34
msgid ""
"Before working with Quilt you need to tell it where to find the patches.  "
"Add this to your ``~/.bashrc``::"
msgstr ""
"Перед работой с Quilt нужно указать этой системе, где искать патчи.  "
"Добавьте в ``~/.bashrc`` следующее::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:39
msgid "And source the file to apply the new export::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:43
msgid ""
"By default all patches are applied already to UDD checkouts or downloaded "
"packages.  You can check this with::"
msgstr ""
"По умолчанию все патчи применяются уже с UDD извлечений или загружаемых "
"пакетов. Вы можете проверить это с помощью::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:49
msgid "If you wanted to remove the patch you would run ``pop``::"
msgstr "Если вы хотите удалить патч, нужно выполнить ``pop``::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:57
msgid "And to apply a patch you use ``push``::"
msgstr "А чтобы применить патч, используйте ``push``::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:67
msgid "Adding a New Patch"
msgstr "Добавление нового патча"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:69
msgid ""
"To add a new patch you need to tell Quilt to create a new patch, tell it "
"which files that patch should change, edit the files then refresh the patch::"
msgstr ""
"Для добавления нового патча нужно указать Quilt создать новый патч, сообщить "
"ему, какие файлы этот патч должен изменить, отредактировать файлы, а затем "
"обновить патч::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:81
msgid ""
"The ``quilt add`` step is important, if you forget it the files will not end "
"up in the patch."
msgstr ""
"Шаг ``quilt add`` важен: если вы забудете его сделать, файлы не попадут в "
"патч."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:84
msgid ""
"The change will now be in "
"``debian/patches/kubuntu_02_program_description.diff`` and the ``series`` "
"file will have had the new patch added to it.  You should add the new file "
"to the packaging::"
msgstr ""
"Теперь изменения будут в "
"``debian/patches/kubuntu_02_program_description.diff``, а в файл ``series`` "
"будет добавлена информация о новом патче.  Вы должны добавить новый файл в "
"исходные файлы для пакета::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:94
msgid ""
"Quilt keeps its metadata in the ``.pc/`` directory, so currently you need to "
"add that to the packaging too.  This should be improved in future."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:97
msgid ""
"As a general rule you should be careful adding patches to programs unless "
"they come from upstream, there is often a good reason why that change has "
"not already been made.  The above example changes a user interface string "
"for example, so it would break all translations.  If in doubt, do ask the "
"upstream author before adding a patch."
msgstr ""
"Как правило, следует проявлять осторожность при добавлении патчей к "
"программам, если они исходят не из апстрима. Часто имеется веская причина, "
"по которой изменения ещё не были сделаны.  В рассмотренном выше примере "
"изменяется строка в пользовательском интерфейсе, так что это может поломать "
"все переводы.  Если сомневаетесь, спросите автора из апстрима перед тем, как "
"добавить патч."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:105
msgid "Patch Headers"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:107
msgid ""
"We recommend that you tag every patch with DEP-3_ headers by putting them at "
"the top of patch file. Here are some headers that you can use:"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:110
msgid "Description of what the patch does."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:111
msgid "Who wrote the patch (i.e. \"Jane Doe <packager@example.com>\")."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:112
msgid ""
"Where this patch comes from (i.e. \"upstream\"), when *Author* is not "
"present."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:114
msgid ""
"Whether the patch was forwarded upstream. Either \"yes\", \"no\" or \"not-"
"needed\"."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:116
msgid "Date of the last revision (in form \"YYYY-MM-DD\")."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:120
msgid "Upgrading to New Upstream Versions"
msgstr "Обновление до новых версий из апстрима"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:122
msgid ""
"When you upgrade to a new upstream version, patches will often become out of "
"date.  They might need to be refreshed to match the new upstream source or "
"they might need to be removed altogether."
msgstr ""
"При обновлении до новой версии из апстрима патчи часто оказываются "
"устаревшими.  Может понадобиться обновить их для соответствия новому "
"исходному коду или вообще удалить."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:126
msgid ""
"You should start by ensuring no patches are applied.  Unfortunately a commit "
"is needed before you can merge in the new upstream (this is `bug 815854`_)::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:132
msgid "Then upgrade to the new version::"
msgstr "Затем выполните обновление на новую версию::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:136
msgid "Then apply the patches one at a time to check for problems::"
msgstr ""
"После этого применяйте патчи по одному за раз и проверяйте, не возникнут ли "
"проблемы::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:145
msgid ""
"If it can be reverse-applied this means the patch has been applied already "
"by upstream, so we can delete the patch::"
msgstr ""
"Если для патча указано ``it can be reverse-applied``, значит патч уже был "
"применён апстримом, так что мы можем удалить этот патч::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:151
msgid "Then carry on::"
msgstr "Затем продолжайте::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:156
msgid ""
"It is a good idea to run refresh, this will update the patch relative to the "
"changed upstream source::"
msgstr ""
"Неплохой мыслью будет выполнить refresh, это обновит патч относительно "
"изменений исходного кода в апстриме::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:162
msgid "Then commit as usual::"
msgstr "Затем выполните фиксацию, как обычно::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:168
msgid "Making A Package Use Quilt"
msgstr "Создание пакета с использованием Quilt"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:170
msgid ""
"Modern packages use Quilt by default, it is built into the packaging format. "
" Check in ``debian/source/format`` to ensure it says ``3.0 (quilt)``."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:174
msgid ""
"Older packages using source format 1.0 will need to explicitly use Quilt, "
"usually by including a makefile into ``debian/rules``."
msgstr ""
"Для более старых пакетов, использующих формат 1.0, необходимо использовать "
"Quilt явно, обычно с помощью включения make-фала в ``debian/rules``."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:179
msgid "Configuring Quilt"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:181
msgid ""
"You can use ``~/.quiltrc`` file to configure quilt. Here are some options "
"that can be useful for using quilt with debian/packages:"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:195
msgid "Other Patch Systems"
msgstr "Другие системы управления патчами"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:197
msgid ""
"Other patch systems used by packages include ``dpatch`` and ``cdbs simple-"
"patchsys``, these work similarly to Quilt by keeping patches in "
"``debian/patches`` but have different commands to apply, un-apply or create "
"patches. You can find out which patch system is used by a package by using "
"the ``what-patch`` command (from the ``ubuntu-dev-tools`` package). You can "
"use ``edit-patch``, shown in :ref:`previous chapters <working-on-a-fix>`, as "
"a reliable way to work with all systems."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:205
msgid ""
"In even older packages changes will be included directly to sources and kept "
"in the ``diff.gz`` source file.  This makes it hard to upgrade to new "
"upstream versions or differentiate between patches and is best avoided."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:209
msgid ""
"Do not change a package's patch system without discussing it with the Debian "
"maintainer or relevant Ubuntu team.  If there is no existing patch system "
"then feel free to add Quilt."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:3
msgid "Packaging Python modules and applications"
msgstr "Создание пакетов для модулей и приложений Python"

#: ../ubuntu-packaging-guide/python-packaging.rst:5
msgid ""
"Our packaging follows Debian’s `Python policy`_. We will use the `python-"
"markdown`_ package as an example, which can be downloaded from `PyPI`_. You "
"can look at its packaging at its `Subversion repository`_."
msgstr ""
"Наше руководство следует рекомендациям Debian `Python policy`_. В качестве "
"примера мы будем использовать пакет `python-markdown`_, который можно "
"загрузить с сайта `PyPI`_. Вы можете посмотреть исходные коды сборки в "
"`репозитории Subversion`_."

#: ../ubuntu-packaging-guide/python-packaging.rst:7
msgid "There are two types of Python packages — *modules* and *apps*."
msgstr "Существует два типа пакетов Python — *модули* и *приложения*."

#: ../ubuntu-packaging-guide/python-packaging.rst:9
msgid ""
"At the time of writing, Ubuntu has two incompatible versions of Python — "
"*2.x* and *3.x*. ``/usr/bin/python`` is a symbolic link to a default Python "
"2.x version, and ``/usr/bin/python3`` — to a default Python 3.x version. "
"Python modules should be built against all supported Python versions."
msgstr ""
"На момент написания руководства, Ubuntu содержала две несовместимых версии "
"Python — *2.x* и *3.x*. ``/usr/bin/python`` является символической ссылкой "
"на версию по умолчанию Python 2.x, а ``/usr/bin/python3`` — на версию по "
"умолчанию Python 3.x. Модули Python нужно собирать со всеми поддерживаемыми "
"версиями Python."

#: ../ubuntu-packaging-guide/python-packaging.rst:11
msgid ""
"If you are going to package a new Python module, you might find the "
"``py2dsc`` tool useful (available in `python-stdeb`_ package)."
msgstr ""
"Чтобы создать пакет для нового модуля Python, вам может пригодиться "
"инструмент ``py2dsc`` (доступный в пакете `python-stdeb`_)."

#: ../ubuntu-packaging-guide/python-packaging.rst:14
msgid "debian/control"
msgstr "debian/control"

#: ../ubuntu-packaging-guide/python-packaging.rst:16
msgid ""
"Python 2.x and 3.x versions of the package should be in separate binary "
"packages. Names should have ``python{,3}-modulename`` format (like: "
"``python3-dbus.mainloop.qt``). Here, we will use ``python-markdown`` and "
"``python3-markdown`` for module packages and ``python-markdown-doc`` for the "
"documentation package."
msgstr ""
"Версии пакетов для Python 2.x и 3.x должны находиться в отдельных двоичных "
"пакетах. Они должны иметь имена в формате ``python{,3}-имя_модуля`` "
"(например: ``python3-dbus.mainloop.qt``). В качестве примера в этой статье "
"мы будем использовать для пакетов модуля имена ``python-markdown`` и "
"``python3-markdown``, а также ``python-markdown-doc`` для пакета "
"документации."

#: ../ubuntu-packaging-guide/python-packaging.rst:18
msgid "Things in ``debian/control`` that are specific for a Python package:"
msgstr ""
"Специфичные для пакета Python особенности в файле ``debian/control``:"

#: ../ubuntu-packaging-guide/python-packaging.rst:20
msgid ""
"The section of module packages should be ``python``, and ``doc`` for the "
"documentation package. For an application, a single binary package will be "
"enough."
msgstr ""
"Секция пакетов модуля должна быть ``python``, а для пакета документации "
"``doc``. Для приложения будет достаточно одного двоичного пакета."

#: ../ubuntu-packaging-guide/python-packaging.rst:21
msgid ""
"We should add build dependencies on ``python-all (>= 2.6.6-3~)`` and "
"``python3-all (>= 3.1.2-7~)`` to make sure Python helpers are available (see "
"the next section for details)."
msgstr ""
"Мы должны добавить зависимости сборки от ``python-all (>= 2.6.6-3~)`` и "
"``python3-all (>= 3.1.2-7~)``, чтобы были доступны необходимые скрипты "
"debhelper (подробнее в следующем разделе)."

#: ../ubuntu-packaging-guide/python-packaging.rst:22
msgid ""
"It’s recommended to add ``X-Python-Version`` and ``X-Python3-Version`` "
"fields — see “`Specifying Supported Versions`_” section of the Policy for "
"details. For example::"
msgstr ""
"Рекомендуется добавить поля ``X-Python-Version`` и ``X-Python3-Version`` — "
"подробности смотрите в разделе Policy “`Specifying Supported Versions`_”. "
"Например::"

#: ../ubuntu-packaging-guide/python-packaging.rst:27
msgid ""
"If your package works only with Python 2.x or 3.x, build depend only on one "
"``-all`` package and use only one ``-Version`` field."
msgstr ""
"Если ваш пакет работает только с Python 2.x или 3.x, сборка зависит только "
"от одного пакета ``-all`` и использует только одно поле ``-Version``."

#: ../ubuntu-packaging-guide/python-packaging.rst:28
msgid ""
"Module packages should have ``{python:Depends}`` and ``{python3:Depends}`` "
"substitution variables (respectively) in their dependency lists."
msgstr ""
"Пакеты модулей должны содержать подстановочные переменные "
"``{python:Depends}`` и ``{python3:Depends}`` (соответственно) в своих "
"списках зависимостей."

#: ../ubuntu-packaging-guide/python-packaging.rst:33
msgid ""
"The recommended helpers for python modules are ``dh_python2`` and "
"``dh_python3``. Unfortunately, ``debhelper`` doesn’t yet build Python 3.x "
"packages automatically (see `bug 597105`_ in Debian BTS), so we’ll need to "
"do that manually in override sections (skip this if your package doesn’t "
"support Python 3.x)."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:35
msgid "Here’s our ``debian/rules`` file (with annotations):"
msgstr "Вот наш файл ``debian/rules`` (с комментариями):"

#: ../ubuntu-packaging-guide/python-packaging.rst:70
msgid ""
"It is also a good practice to run tests during the build, if they are "
"shipped by upstream. Usually tests can be invoked using ``setup.py test`` or "
"``setup.py check``."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:73
msgid "debian/\\*.install"
msgstr "debian/\\*.install"

#: ../ubuntu-packaging-guide/python-packaging.rst:75
msgid ""
"Python 2.x modules are installed into ``/usr/share/pyshared/`` directory, "
"and symbolic links are created in ``/usr/lib/python2.x/dist-packages/`` for "
"every interpreter version, while Python 3.x ones are all installed into "
"``/usr/lib/python3/dist-packages/``."
msgstr ""
"Модули Python 2.устанавливаются в каталог ``/usr/share/pyshared/`` и для "
"каждой версии интерпретатора создаётся символическая ссылка в "
"``/usr/lib/python2.x/dist-packages/``, а все модули для Python 3.x "
"устанавливаются в ``/usr/lib/python3/dist-packages/``."

#: ../ubuntu-packaging-guide/python-packaging.rst:77
msgid ""
"If your package is an application and has private Python modules, they "
"should be installed in ``/usr/share/module``, or ``/usr/lib/module`` if the "
"modules are architecture-dependent (e.g. extensions) (see “`Programs "
"Shipping Private Modules`_” section of the Policy)."
msgstr ""
"Если ваш пакет является приложением и имеет собственные модули Python, они "
"должны быть установлены в ``/usr/share/module`` или ``/usr/lib/module``, "
"если модули не зависят от архитектуры (например, расширения) (смотрите "
"раздел Policy “`Programs Shipping Private Modules`_”)."

#: ../ubuntu-packaging-guide/python-packaging.rst:79
msgid ""
"So, our ``python-markdown.install`` file will look like this (we’ll also "
"want to install a ``markdown_py`` executable)::"
msgstr ""
"Итак, наш файл ``python-markdown.install`` будет выглядеть следующим образом "
"(мы также хотим установить исполняемый файл ``markdown_py``)::"

#: ../ubuntu-packaging-guide/python-packaging.rst:84
msgid "and ``python3-markdown.install`` will only have one line::"
msgstr "а ``python3-markdown.install`` будет содержать лишь одну строку::"

#: ../ubuntu-packaging-guide/python-packaging.rst:89
msgid "The ``-doc`` package"
msgstr "Пакет ``-doc``"

#: ../ubuntu-packaging-guide/python-packaging.rst:91
msgid ""
"The tool most commonly used for building Python docs is `Sphinx`_. To add "
"Sphinx documentation to your package (using ``dh_sphinxdoc`` helper), you "
"should:"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:93
msgid ""
"Add a build-dependency on ``python-sphinx`` or ``python3-sphinx`` (depending "
"on what Python version do you want to use);"
msgstr ""
"Добавьте сборочные зависимости ``python-sphinx`` или ``python3-sphinx`` (в "
"соответствии с версией Python, которую вы хотите использовать);"

#: ../ubuntu-packaging-guide/python-packaging.rst:94
msgid "Append ``sphinxdoc`` to the ``dh --with`` line;"
msgstr "Добавьте ``sphinxdoc`` к строке ``dh --with``;"

#: ../ubuntu-packaging-guide/python-packaging.rst:95
msgid ""
"Run ``setup.py build_sphinx`` in ``override_dh_auto_build`` (sometimes not "
"needed);"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:96
msgid ""
"Add ``{sphinxdoc:Depends}`` to the dependency list of your ``-doc`` package;"
msgstr ""
"Добавьте ``{sphinxdoc:Depends}`` в список зависимостей вашего пакета ``-"
"doc``;"

#: ../ubuntu-packaging-guide/python-packaging.rst:97
msgid ""
"Add the path of the built docs directory (usually ``build/sphinx/html``) to "
"your ``.docs`` file."
msgstr ""
"Добавьте путь к каталогу сборки документации (обычно ``build/sphinx/html``) "
"в ваш файл ``.docs``."

#: ../ubuntu-packaging-guide/python-packaging.rst:99
msgid ""
"In our case, the docs are automatically built in ``build/docs/`` directory "
"when we run ``setup.py build``, so we can simply put this in the ``python-"
"markdown-doc.docs`` file::"
msgstr ""
"В нашем случае, документация автоматически собирается в каталоге "
"``build/docs/`` при запуске ``setup.py build``, так что можно просто указать "
"его в файле ``python-markdown-doc.docs``::"

#: ../ubuntu-packaging-guide/python-packaging.rst:103
msgid ""
"Because docs also contain source ``.txt`` files, we’ll also tell "
"``dh_compress`` to not compress them — by adding this to ``debian/rules``:"
msgstr ""
"Поскольку документация также содержит исходные файлы``.txt``, нам нужно "
"указать ``dh_compress`` не сжимать их — добавив в ``debian/rules`` следующее:"

#: ../ubuntu-packaging-guide/python-packaging.rst:111
msgid "Checking for packaging mistakes"
msgstr "Проверка пакета на наличие ошибок"

#: ../ubuntu-packaging-guide/python-packaging.rst:113
msgid ""
"Along with ``lintian``, there is a special tool for checking Python packages "
"— ``lintian4py``. It is available in the `lintian4python`_ package. For "
"example, these two commands invoke both versions of ``lintian`` and check "
"source and binary packages::"
msgstr ""
"Наряду с ``lintian``, есть специальный инструмент для проверки пакетов "
"Python — ``lintian4py``. Он доступен в пакете `lintian4python`_. Например, "
"эти две команды вызывают обе версии ``lintian`` и проверяют пакеты исходных "
"кодов и двоичные пакеты::"

#: ../ubuntu-packaging-guide/python-packaging.rst:118
msgid ""
"Here, ``-EI`` option is used to enable experimental and informational tags."
msgstr ""
"Здесь опция ``-EI`` используется для включения экспериментальных и "
"информационных тегов."

#: ../ubuntu-packaging-guide/python-packaging.rst:121
msgid "See also"
msgstr "Смотрите также"

#: ../ubuntu-packaging-guide/python-packaging.rst:123
msgid "The `Python policy`_;"
msgstr "`Python policy`_;"

#: ../ubuntu-packaging-guide/python-packaging.rst:124
msgid "`Python/Packaging`_ article on Debian wiki;"
msgstr "Статью `Python/Packaging`_ на вики-страницах Debian;"

#: ../ubuntu-packaging-guide/python-packaging.rst:125
msgid ""
"`Python/LibraryStyleGuide`_ and `Python/AppStyleGuide`_ articles on Debian "
"wiki;"
msgstr ""
"Статьи `Python/LibraryStyleGuide`_ и `Python/AppStyleGuide`_ на вики-"
"страницах Debian;"

#: ../ubuntu-packaging-guide/python-packaging.rst:126
msgid "Debian `python-modules`_ and `python-apps`_ teams."
msgstr "Команды Debian `python-modules`_ и `python-apps`_."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:3
msgid "Security and Stable Release Updates"
msgstr "Обновления безопасности и обновления стабильных релизов"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:6
msgid "Fixing a Security Bug in Ubuntu"
msgstr "Исправление ошибок безопасности в Ubuntu"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:11
msgid ""
"Fixing security bugs in Ubuntu is not really any different than :doc:`fixing "
"a regular bug in Ubuntu<./fixing-a-bug>`, and it is assumed that you are "
"familiar with patching normal bugs. To demonstrate where things are "
"different, we will be updating the dbus package in Ubuntu 10.04 LTS (Lucid "
"Lynx) for a security update."
msgstr ""
"Исправление ошибок безопасности в Ubuntu в действительности не особо "
"отличается от :doc:`исправления обычных ошибок в Ubuntu<./fixing-a-bug>`, и "
"предполагается, что вы уже знакомы с процессом исправления обычных ошибок. "
"Чтобы продемонстрировать отличия, мы выполним обновление безопасности пакета "
"dbus в Ubuntu 10.04 LTS (Lucid Lynx)."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:19
msgid "Obtaining the source"
msgstr "Получение исходного кода"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:21
msgid ""
"In this example, we already know we want to fix the dbus package in Ubuntu "
"10.04 LTS (Lucid Lynx). So first you need to determine the version of the "
"package you want to download. We can use the ``rmadison`` to help with this::"
msgstr ""
"В этом примере, как уже было сказано, мы собираемся внести исправления в "
"пакет dbus в Ubuntu 10.04 LTS (Lucid Lynx). Сначала нам надо определить, "
"какую версию пакета следует скачать. В этом нам может помочь ``rmadison``::"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:30
msgid ""
"Typically you will want to choose the highest version for the release you "
"want to patch that is not in -proposed or -backports. Since we are updating "
"Lucid's dbus, you'll download 1.2.16-2ubuntu4.2 from lucid-updates::"
msgstr ""
"Обычно следует выбрать самую последнюю версию для выпуска, в который вы "
"хотите внести изменения, находящуюся не в -proposed или -backports. "
"Поскольку мы обновляем dbus в Lucid, вам нужно скачать 1.2.16-2ubuntu4.2 из "
"lucid-updates::"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:38
msgid "Patching the source"
msgstr "Создание патча"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:39
msgid ""
"Now that we have the source package, we need to patch it to fix the "
"vulnerability. You may use whatever patch method that is appropriate for the "
"package, including :doc:`UDD techniques<./udd-intro>`, but this example will "
"use ``edit-patch`` (from the ubuntu-dev-tools package). ``edit-patch`` is "
"the easiest way to patch packages and it is basically a wrapper around every "
"other patch system you can imagine."
msgstr ""
"Теперь, когда мы имеем исходный пакет, мы должны сделать патч для "
"исправления уязвимости. Вы можете использовать любой метод, подходящий для "
"данного пакета, в том числе :doc:`методы UDD<./udd-intro>`, но в этом "
"примере будем использовать ``edit-patch`` (из пакета ubuntu-dev-tools). "
"``edit-patch`` — это самый простой способ для исправления пакетов, "
"работающий с любой системой патчей, которую вы можете себе представить."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:46
msgid "To create your patch using ``edit-patch``::"
msgstr "Чтобы создать патч с помощью ``edit-patch``::"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:51
msgid ""
"This will apply the existing patches and put the packaging in a temporary "
"directory. Now edit the files needed to fix the vulnerability.  Often "
"upstream will have provided a patch so you can apply that patch::"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:57
msgid ""
"After making the necessary changes, you just hit Ctrl-D or type exit to "
"leave the temporary shell."
msgstr ""
"После внесения необходимых изменений просто нажмите Ctrl-D или наберите "
"exit, чтобы покинуть временную командную оболочку."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:61
msgid "Formatting the changelog and patches"
msgstr "Форматирование файла changelog и патчей"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:63
msgid ""
"After applying your patches you will want to update the changelog. The "
"``dch`` command is used to edit the ``debian/changelog`` file and ``edit-"
"patch`` will launch ``dch`` automatically after un-applying all the patches. "
"If you are not using ``edit-patch``, you can launch ``dch -i`` manually. "
"Unlike with regular patches, you should use the following format (note the "
"distribution name uses lucid-security since this is a security update for "
"Lucid) for security updates::"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:80
msgid ""
"Update your patch to use the appropriate patch tags. Your patch should have "
"at a minimum the Origin, Description and Bug-Ubuntu tags. For example, edit "
"debian/patches/99-fix-a-vulnerability.patch to have something like::"
msgstr ""
"Обновите свой патч для использования соответствующих тегов. Ваш патч должен "
"содержать как минимум теги Origin, Description и Bug-Ubuntu. Например, "
"отредактируйте ``debian/patches/99-fix-a-vulnerability.patch``, чтобы он "
"имел приблизительно следующие строки::"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:91
msgid ""
"Multiple vulnerabilities can be fixed in the same security upload; just be "
"sure to use different patches for different vulnerabilities."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:95
msgid "Test and Submit your work"
msgstr "Проверка и отправка вашей работы"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:97
msgid ""
"At this point the process is the same as for :doc:`fixing a regular bug in "
"Ubuntu<./fixing-a-bug>`. Specifically, you will want to:"
msgstr ""
"На этом этапе процесс такой же, как при :doc:`исправлении обычных ошибок в "
"Ubuntu<./fixing-a-bug>`. А именно, вам нужно:"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:100
msgid ""
"Build your package and verify that it compiles without error and without any "
"added compiler warnings"
msgstr ""
"Выполнить сборку пакета и проверить, что он компилируется без ошибок и "
"компилятор не выдаёт никаких дополнительных предупреждений"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:102
msgid "Upgrade to the new version of the package from the previous version"
msgstr "Выполнить обновление с предыдущей версии пакета до новой версии"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:103
msgid ""
"Test that the new package fixes the vulnerability and does not introduce any "
"regressions"
msgstr ""
"Убедиться, что новый пакет закрывает уязвимость и не вносит никаких ухудшений"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:105
msgid ""
"Submit your work via a Launchpad merge proposal and file a Launchpad bug "
"being sure to mark the bug as a security bug and to subscribe ``ubuntu-"
"security-sponsors``"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:109
msgid ""
"If the security vulnerability is not yet public then do not file a merge "
"proposal and ensure you mark the bug as private."
msgstr ""
"Если это уязвимость в безопасности, о которой ещё не объявлено публично, то "
"не отправляйте предложение слияния и убедитесь, что вы пометили свою ошибку, "
"как приватную (private)."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:112
msgid ""
"The filed bug should include a Test Case, i.e. a comment which clearly shows "
"how to recreate the bug by running the old version then how to ensure the "
"bug no longer exists in the new version."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:116
msgid ""
"The bug report should also confirm that the issue is fixed in Ubuntu "
"versions newer than the one with the proposed fix (in the above example "
"newer than Lucid).  If the issue is not fixed in newer Ubuntu versions you "
"should prepare updates for those versions too."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:123
msgid "Stable Release Updates"
msgstr "Обновления стабильного релиза"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:125
msgid ""
"We also allow updates to releases where a package has a high impact bug such "
"as a severe regression from a previous release or a bug which could cause "
"data loss.  Due to the potential for such updates to themselves introduce "
"bugs we only allow this where the change can be easily understood and "
"verified."
msgstr ""
"Мы также разрешаем вносить обновления в выпуски, в которых пакет содержит "
"серьёзную ошибку, такую как значительная регрессия по сравнению с предыдущим "
"выпуском или ошибка, которая может привести к потере данных.  Из-за того, "
"что такие изменения сами потенциально могут привести к появлению "
"дополнительных ошибок, мы позволяем делать это только там, где изменения "
"легко можно понять и проверить."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:130
msgid ""
"The process for Stable Release Updates is just the same as the process for "
"security bugs except you should subscribe ``ubuntu-sru`` to the bug."
msgstr ""
"Процесс обновлений стабильного выпуска (Stable Release Updates или SRU) "
"такой же, как и для исправлений ошибок безопасности, за исключением того, "
"что нужно подписать на отчёт об ошибке команду ``ubuntu-sru``."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:133
msgid ""
"The update will go into the ``proposed`` archive (for example ``lucid-"
"proposed``) where it will need to be checked that it fixes the problem and "
"does not introduce new problems.  After a week without reported problems it "
"can be moved to ``updates``."
msgstr ""
"Обновление попадёт в архив ``proposed`` (например, ``lucid-proposed``), где "
"нужно будет проверить, что он устраняет проблему и не создаёт никаких новых "
"проблем.  Через неделю, если сообщений о проблемах не поступало, оно может "
"быть перемещено в ``updates``."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:138
msgid "See the `Stable Release Updates wiki page`_ for more information."
msgstr ""
"Дополнительную информацию смотрите на `вики-странице Stable Release "
"Updates`_."

#: ../ubuntu-packaging-guide/traditional-packaging.rst:3
msgid "Traditional Packaging"
msgstr "Традиционные методы создания пакетов"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:5
msgid ""
"The majority of this guide deals with :doc:`Ubuntu Distributed Development "
"<./udd-intro>` (UDD) which utilizes the distributed version control system "
"(DVCS) Bazaar for :ref:`retrieving package sources <branching>` and "
"submitting fixes with :ref:`merge proposals. <merge-proposal>` This article "
"will discuss what we will call traditional packaging methods for lack of a "
"better word. Before Bazaar was adopted for Ubuntu development, these were "
"the typical methods for contributing to Ubuntu."
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:13
msgid ""
"In some cases, you may need to use these tools instead of UDD. So it is good "
"to be familiar with them. Before you begin, you should already have read the "
"article :doc:`Getting Set Up. <./getting-set-up>`"
msgstr ""
"В некоторых случаях вам может понадобиться использовать эти инструменты "
"вместо UDD. Поэтому не помешает познакомиться с ними. Перед тем, как "
"продолжить, вам следует прочитать статью :doc:`Подготовка. <./getting-set-"
"up>`"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:18
#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:3
msgid "Getting the Source"
msgstr "Получение исходного кода"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:20
msgid "In order to get a source package, you can simply run::"
msgstr "Чтобы получить пакет исходного кода, можно просто набрать::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:24
msgid ""
"This method has some draw backs though. It downloads the version of the "
"source that is available on **your system.** You are likely running the "
"current stable release, but you want to contribute your change against the "
"package in the development release. Luckily, the ``ubuntu-dev-tools`` "
"package provides a helper script::"
msgstr ""
"Но у этого метода есть некоторые недостатки. Он скачивает версию исходного "
"кода, которая доступна в **вашей системе.** Скорее всего, у вас установлен "
"текущий стабильный выпуск, а вы собираетесь внести изменения в пакет в "
"разрабатываемом выпуске. К счастью, пакет ``ubuntu-dev-tools`` предоставляет "
"вспомогательный сценарий::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:32
msgid ""
"By default, the  latest version in the development release will be "
"downloaded. You can also specify a version or Ubuntu release like::"
msgstr ""
"По умолчанию будет загружена самая свежая версия из разрабатываемого "
"выпуска. Можно также указать версию выпуска Ubuntu следующим образом::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:37
msgid "to pull the source from the ``precise`` release, or::"
msgstr "чтобы получить исходный код из выпуска ``precise``, или::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:41
msgid ""
"to download version ``1.0-1ubuntu1`` of the package. For more information on "
"the command, see ``man pull-lp-source``."
msgstr ""
"чтобы скачать версию пакета ``1.0-1ubuntu1``. Для получения дополнительной "
"информации о команде воспользуйтесь ``man pull-lp-source``."

#: ../ubuntu-packaging-guide/traditional-packaging.rst:44
msgid ""
"For our example, let's pretend we got a bug report saying that \"colour\" in "
"the description of ``xicc`` should be \"color,\" and we want to fix it. "
"*(Note: This is just an example of something to change and not really a "
"bug.)* To get the source, run::"
msgstr ""
"Для примера, давайте представим, что мы получили отчёт об ошибке, в котором "
"говорится, что вместо \"colour\" в описании ``xicc`` должно быть \"color,\" "
"и мы хотим это исправить. *(Примечание: это просто пример чего-то, что можно "
"изменить, а не реальная ошибка.)* Чтобы получить исходный код, введите::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:52
msgid "Creating a Debdiff"
msgstr "Создание Debdiff"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:54
msgid ""
"A ``debdiff`` shows the difference between two Debian packages. The name of "
"the command used to generate one is also ``debdiff``. It is part of the "
"``devscripts`` package. See ``man debdiff`` for all the details. To compare "
"two source packages, pass the two ``dsc`` files as arguments::"
msgstr ""
"Файл ``debdiff`` показывает различия между двумя пакетами Debian. Имя "
"команды, используемой для его создания, тоже ``debdiff``. Она является "
"частью пакета ``devscripts``. Смотрите ``man debdiff`` для подробной "
"информации о ней. Чтобы сравнить два пакета исходного кода, передайте "
"команде в качестве аргумента два файла ``dsc``::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:61
msgid ""
"To continue with our example, let's edit the ``debian/control`` and \"fix\" "
"our \"bug\"::"
msgstr ""
"Чтобы продолжить наш пример, давайте отредактируем ``debian/control`` и "
"«исправим» нашу «ошибку»::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:67
msgid ""
"We also must adhere to the `Debian Maintainer Field Spec "
"<https://wiki.ubuntu.com/DebianMaintainerField>`_ and edit "
"``debian/control`` to replace::"
msgstr ""
"Мы также должны придерживаться `Debian Maintainer Field Spec "
"<https://wiki.ubuntu.com/DebianMaintainerField>`_ и отредактировать "
"``debian/control``, заменив::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:73
msgid "with::"
msgstr "на::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:78
msgid ""
"You can use the ``update-maintainer`` tool (in the ``ubuntu-dev-tools`` "
"package) to do that."
msgstr ""
"Для этого можно воспользоваться инструментом ``update-maintainer`` (из "
"пакета ``ubuntu-dev-tools``)."

#: ../ubuntu-packaging-guide/traditional-packaging.rst:81
msgid ""
"Remember to document your changes in ``debian/changelog`` using ``dch -i`` "
"and then we can generate a new source package::"
msgstr ""
"Не забудьте задокументировать ваши изменения в ``debian/changelog`` с "
"помощью ``dch -i``, после чего мы можем сгенерировать новый пакет исходного "
"кода::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:86
msgid "Now we can examine our changes using ``debdiff``::"
msgstr "Теперь можно проверить наши изменения с помощью ``debdiff``::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:91
msgid ""
"To create a patch file that you can send to others or attach to a bug report "
"for sponsorship, run::"
msgstr ""
"Чтобы создать файл патча, который можно отправить другим или приложить к "
"отчёту об ошибке для одобрения, выполните::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:98
msgid "Applying a Debdiff"
msgstr "Применение Debdiff"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:100
msgid ""
"In order to apply a debdiff, first make sure you have the source code of the "
"version that it was created against::"
msgstr ""
"Чтобы применить debdiff, нужно иметь исходный код версии, на основе которой "
"он был создан::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:105
msgid ""
"Then in a terminal, change the to the directory where the source was "
"uncompressed::"
msgstr ""
"Затем в терминале перейдите в каталог, куда распакован исходный код::"

#: ../ubuntu-packaging-guide/traditional-packaging.rst:110
msgid "A debdiff is just like a normal patch file. Apply it as usual with::"
msgstr ""
"Фактически, debdiff похож на обычный файл патча. Примените его, как обычно, "
"с помощью::"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:6
msgid "Source package URLs"
msgstr "URL пакетов исходного кода"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:8
msgid ""
"Bazaar provides some very nice shortcuts for accessing Launchpad's source "
"branches of packages in both Ubuntu and Debian."
msgstr ""
"Bazaar предоставляет несколько очень удобных сокращений для доступа к веткам "
"исходного кода с Launchpad для пакетов как Ubuntu, так и Debian."

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:11
msgid "To refer to source branches use::"
msgstr "Чтобы сослаться на ветки исходного кода, используйте::"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:15
msgid ""
"where *package* refers to the package name you're interested in.  This URL "
"refers to the package in the current development version of Ubuntu.  To "
"refer to the branch of Tomboy in the development version, you would use::"
msgstr ""
"где *package* — имя пакета, который вам нужен.  Этот URL ссылается на пакеты "
"в текущей разрабатываемой версии Ubuntu.  Чтобы сослаться на ветку Tomboy в "
"разрабатываемой версии, нужно использовать::"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:21
msgid ""
"To refer to the version of a source package in an older release of Ubuntu, "
"just prefix the package name with the release's code name.  E.g. to refer to "
"Tomboy's source package in Maverick_ use::"
msgstr ""
"Для ссылки на версию пакета исходного кода в более старом выпуске Ubuntu, "
"просто укажите перед именем пакета кодовое имя выпуска.  Например, чтобы "
"сослаться на пакет исходного кода Tomboy в Maverick_ используйте::"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:27
msgid ""
"Since they are unique, you can also abbreviate the distro-series name::"
msgstr ""
"Поскольку первые буквы кодовых имён не повторяются, можно сократить имя "
"выпуска::"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:31
msgid ""
"You can use a similar scheme to access the source branches in Debian, "
"although there are no shortcuts for the Debian distro-series names.  To "
"access the Tomboy branch in the current development series for Debian use::"
msgstr ""
"Похожую схему можно использовать для доступа к веткам исходного кода в "
"Debian, хотя здесь нет сокращений для имён выпусков  Debian.  Чтобы получить "
"доступ к ветке Tomboy в текущем разрабатываемом выпуске Debian, используйте::"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:37
msgid "and to access Tomboy in Debian Lenny_ use::"
msgstr "а для доступа к Tomboy в Debian Lenny_ используйте::"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:48
msgid "Getting the source"
msgstr "Получение исходного кода"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:50
msgid ""
"Every source package in Ubuntu has an associated source branch on Launchpad. "
"These source branches are updated automatically by Launchpad, although the "
"process is not currently foolproof."
msgstr ""
"Каждый пакет исходного кода в Ubuntu связан с веткой исходного кода на "
"Launchpad. Launchpad автоматически обновляет эти ветки исходного кода, хотя "
"процесс не полностью «защищён от дурака»."

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:54
msgid ""
"There are a couple of things that we do first in order to make the workflow "
"more efficient later.  Once you are used to the process you will learn when "
"it makes sense to skip these steps."
msgstr ""
"Есть несколько вещей, которые мы сделаем в первую очередь, чтобы сделать "
"рабочий процесс более эффективным впоследствии.  После того, как вы освоите "
"процесс, вы узнаете, когда имеет смысл пропускать эти этапы."

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:62
msgid "Creating a shared repository"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:64
msgid ""
"Say that you want to work on the Tomboy package, and you've verified that "
"the source package is named ``tomboy``.  Before actually branching the code "
"for Tomboy, create a shared repository to hold the branches for this "
"package.  The shared repository will make future work much more efficient."
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:70
msgid ""
"Do this using the `bzr init-repo` command, passing it the directory name we "
"would like to use::"
msgstr ""
"Воспользуйтесь для этого командой `bzr init-repo`, передав ей имя каталога, "
"который вы хотите использовать::"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:75
msgid ""
"You will see that a `tomboy` directory is created in your current working "
"area.  Change to this new directory for the rest of your work::"
msgstr ""
"Вы увидите, что в вашей текущей рабочей области создан каталог `tomboy`.  "
"Перейдите в него для продолжения работы::"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:82
msgid "Getting the trunk branch"
msgstr "Получение ветки trunk"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:84
msgid ""
"We use the `bzr branch` command to create a local branch of the package. "
"We'll name the target directory `tomboy.dev` just to keep things easy to "
"remember::"
msgstr ""
"Мы используем команду `bzr branch` для создания локальной ветки пакета. "
"Целевой каталог назовём `tomboy.dev`, просто потому, что так легче "
"запомнить::"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:90
msgid ""
"The tomboy.dev directory represents the version of Tomboy in the development "
"version of Ubuntu, and you can always ``cd`` into this directory and do a "
"`bzr pull` to get any future updates."
msgstr ""
"Каталог tomboy.dev представляет собой версию Tomboy в разрабатываемой версии "
"Ubuntu, и вы всегда можете перейти в этот каталог и выполнить `bzr pull` для "
"получения любых будущих обновлений."

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:97
msgid "Ensuring the version is up to date"
msgstr "Проверка актуальности версии"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:99
msgid ""
"When you do your ``bzr branch`` you will get a message telling you if the "
"packaging branch is up to date.  For example::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:107
msgid ""
"Occasionally the importer fails and packaging branches do not match what is "
"in the archive.  A message saying::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:112
msgid ""
"means the importer has failed.  You can find out why on http://package-"
"import.ubuntu.com/status/ and `file a bug on the UDD project`_ to get the "
"issue resolved."
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:118
msgid "Upstream Tar"
msgstr "Tar-файл из апстрима"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:120
msgid "You can get the upstream tar by running::"
msgstr "Получить tar из апстрима можно с помощью::"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:124
msgid ""
"This will try a number of methods to get the upstream tar, firstly by "
"recreating it from the ``upstream-x.y`` tag in the bzr archive, then by "
"downloading from the Ubuntu archive, lastly by running ``debian/rules get-"
"orig-source``. The upstream tar will also be recreated when using bzr to "
"build the package::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:132
msgid "The `builddeb` plugin has several `configuration options`_."
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:136
msgid "Getting a branch for a particular release"
msgstr "Получение ветки для определённого выпуска"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:138
msgid ""
"When you want to do something like a `stable release update`_ (SRU), or you "
"just want to examine the code in an old release, you'll want to grab the "
"branch corresponding to a particular Ubuntu release.  For example, to get "
"the Tomboy package for Maverick do::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:147
msgid "Importing a Debian source package"
msgstr "Импорт пакета исходного кода Debian"

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:149
msgid ""
"If the package you want to work on is available in Debian but not Ubuntu, "
"it's still easy to import the code to a local bzr branch for development.  "
"Let's say you want to import the `newpackage` source package.  We'll start "
"by creating a shared repository as normal, but we also have to create a "
"working tree to which the source package will be imported (remember to cd "
"out of the `tomboy` directory created above)::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:162
msgid ""
"As you can see, we just need to provide the remote location of the dsc file, "
"and Bazaar will do the rest.  You've now got a Bazaar source branch."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:3
msgid "Ubuntu Distributed Development — Introduction"
msgstr "Ubuntu Distributed Development — введение"

#: ../ubuntu-packaging-guide/udd-intro.rst:5
msgid ""
"This guide focuses on packaging using the *Ubuntu Distributed Development* "
"(UDD) method."
msgstr ""
"Это руководство фокусируется на работе с пакетами с использованием метода "
"*Ubuntu Distributed Development* (UDD)."

#: ../ubuntu-packaging-guide/udd-intro.rst:8
msgid ""
"*Ubuntu Distributed Development* (UDD) is a new technique for developing "
"Ubuntu packages that uses tools, processes, and workflows similar to generic "
"distributed version control system (DVCS) based software development.  The "
"DVCS used for UDD is Bazaar_."
msgstr ""
"*Ubuntu Distributed Development* (UDD) — это новая технология разработки "
"пакетов Ubuntu, использующая инструменты, процессы и последовательности "
"действий, характерные для  типичной схемы разработки программ, основанной на "
"распределённой системе управления версиями (DVCS).  DVCS, используемая в UDD "
"— это Bazaar_."

#: ../ubuntu-packaging-guide/udd-intro.rst:14
msgid "Traditional Packaging Limitations"
msgstr "Ограничения традиционных методов создания пакетов"

#: ../ubuntu-packaging-guide/udd-intro.rst:16
msgid ""
"Traditionally Ubuntu packages have been kept in tar archive files.  A "
"traditional source package is made up of the upstream source tar, a "
"\"debian\" tar (or compressed diff file for older packages) containing the "
"packaging and a .dsc meta-data file.  To see a traditional package run::"
msgstr ""
"Традиционно пакеты Ubuntu хранятся в архивных tar-файлах.  Традиционный "
"пакет исходного кода состоит из tar-файла с исходным кодом из апстрима, "
"\"debian\" tar-файла (или сжатого diff-файл для более старых пакетов), "
"содержащего набор входных файлов для создания пакета, и файла .dsc с "
"метаданными.  Чтобы посмотреть на традиционный пакет, выполните команду::"

#: ../ubuntu-packaging-guide/udd-intro.rst:23
msgid ""
"This will download the upstream source ``kdetoys_4.6.5.orig.tar.bz2``, the "
"packaging ``kdetoys_4.6.5-0ubuntu1.debian.tar.gz`` and the meta-data "
"``kdetoys_4.6.5-0ubuntu1~ppa1.dsc``.  Assuming you have dpkg-dev installed "
"it will extract these and give you the source package."
msgstr ""
"Она загрузит исходники из апстрима ``kdetoys_4.6.5.orig.tar.bz2``, набор "
"входных файлов ``kdetoys_4.6.5-0ubuntu1.debian.tar.gz`` и метаданные "
"``kdetoys_4.6.5-0ubuntu1~ppa1.dsc``.  Если у вас установлен dpkg-dev, она "
"извлечёт их содержимое и предоставит вам пакет исходного кода."

#: ../ubuntu-packaging-guide/udd-intro.rst:28
msgid ""
"Traditional packaging would edit these files and upload.  However this gives "
"limited opportunity to collaborate with other developers, changes have to be "
"passed around as diff files with no central way to track them and two "
"developers can not make changes at the same time.  So most teams have moved "
"to putting their packaging in a revision control system.  This makes it "
"easier for several developers to work on a package together.  However there "
"is no direct connection between the revision control system and the archive "
"packages so the two must be manually kept in sync.  Since each team works in "
"its own revision control system a prospective developer must first work out "
"where that is and how to get the packaging before they can work on the "
"package."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:40
msgid "Ubuntu Distributed Development"
msgstr "Ubuntu Distributed Development"

#: ../ubuntu-packaging-guide/udd-intro.rst:42
msgid ""
"With Ubuntu Distributed Development all packages in the Ubuntu (and Debian) "
"archive are automatically imported into Bazaar branches on our code hosting "
"site Launchpad.  Changes can be made directly to these branches in "
"incremental steps and by anyone with commit access.  Changes can also be "
"made in forked branches and merged back in with Merge Proposals when they "
"are large enough to need review or if they are by someone without direct "
"commit access."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:49
msgid ""
"UDD branches are all in a standard location, so doing a checkout is easy::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:53
msgid ""
"The merge history includes two separate branches, one for the upstream "
"source and one which adds the ``debian/`` packaging directory::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:59
msgid ""
"(This command uses *qbzr* for a GUI, run ``log`` instead of ``qlog`` for "
"console output.)"
msgstr ""
"(Эта команда использует в качестве графического интерфейса *qbzr*. Для "
"вывода в консоль, запустите ``log`` вместо ``qlog``.)"

#: ../ubuntu-packaging-guide/udd-intro.rst:64
msgid ""
"This UDD branch of *kdetoys* shows the full packaging for each version "
"uploaded to Ubuntu with grey circles and the upstream source versions with "
"green circles.  Versions are tagged with either the version in Ubuntu such "
"as ``4:4.2.29-0ubuntu1`` or for the upstream branch with the upstream "
"version ``upstream-4.2.96``."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:70
msgid ""
"Many Ubuntu packages are based on the packages in Debian, UDD also imports "
"the Debian package into our branches.  In the *kdetoys* branch above the "
"Debian versions from *unstable* are from the merge with blue circles while "
"those from *Debian experimental* are from the merge with yellow circles.  "
"Debian releases are tagged with their version number, e.g., ``4:4.2.2-1``."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:76
msgid ""
"So from a UDD branch you can see the complete history of changes to the "
"package and compare any two versions.  For example, to see the changes "
"between version 4.2.2 in Debian and the 4.2.2 in Ubuntu use::"
msgstr ""
"Таким образом из UDD-ветки вы можете увидеть полную историю изменений пакета "
"и сравнить любые две версии.  Например, чтобы увидеть различия между версией "
"4.2.2 в Debian и 4.2.2 в Ubuntu, используйте::"

#: ../ubuntu-packaging-guide/udd-intro.rst:82
msgid ""
"(This command uses *qbzr* for a GUI, run ``diff`` instead of ``qdiff`` for "
"console output.)"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:87
msgid ""
"From this we can clearly see what has changed in Ubuntu compared to Debian, "
"very handy."
msgstr ""
"Здесь мы можем ясно увидеть, что было изменено в Ubuntu по сравнению с "
"Debian-версией. Очень удобно."

#: ../ubuntu-packaging-guide/udd-intro.rst:91
msgid "Bazaar"
msgstr "Bazaar"

#: ../ubuntu-packaging-guide/udd-intro.rst:93
msgid ""
"UDD branches use Bazaar, a distributed revision control system intended to "
"be easy to use for those familiar with popular systems such as Subversion "
"while offering the power of Git."
msgstr ""
"Ветки UDD используют Bazaar — распределённую систему управления версиями, "
"которая проста в использовании для тех, кто знаком с такими популярными "
"системами, как Subversion, и в то же время предоставляет всю мощь Git."

#: ../ubuntu-packaging-guide/udd-intro.rst:97
msgid ""
"To do packaging with UDD you will need to know the basics of how to use "
"Bazaar to manage files.  For an introduction to Bazaar see the `Bazaar Five "
"Minute Tutorial <http://doc.bazaar.canonical.com/bzr.dev/en/mini-"
"tutorial/index.html>`_ and the `Bazaar Users Guide "
"<http://doc.bazaar.canonical.com/bzr.dev/en/user-guide/index.html>`_."
msgstr ""
"Чтобы создавать пакеты с помощью UDD, вам нужно знать основы того, как "
"использовать Bazaar для управления файлами.  Для знакомства с Bazaar "
"смотрите `Пятиминутный урок по Bazaar "
"<http://doc.bazaar.canonical.com/bzr.dev/en/mini-tutorial/index.html>`_ и "
"`Руководство пользователя Bazaar "
"<http://doc.bazaar.canonical.com/bzr.dev/en/user-guide/index.html>`_."

#: ../ubuntu-packaging-guide/udd-intro.rst:105
msgid "Limitations of UDD"
msgstr "Ограничения UDD"

#: ../ubuntu-packaging-guide/udd-intro.rst:107
msgid ""
"Ubuntu Distributed Development is a new method for working with Ubuntu "
"packages.  It currently has some notable limitations:"
msgstr ""
"Ubuntu Distributed Development — новый метод работы с пакетами Ubuntu.  В "
"настоящее время он имеет некоторые существенных ограничения:"

#: ../ubuntu-packaging-guide/udd-intro.rst:110
msgid ""
"Doing a full branch with history can take a lot of time and network "
"resources.  You may find it quicker to do a lightweight checkout ``bzr "
"checkout --lightweight ubuntu:kdetoys`` but this will need a network access "
"for any further bzr operations."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:115
msgid ""
"Working with patches is fiddly.  Patches can be seen as a branched revision "
"control system, so we end up with RCS on top of RCS."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:118
msgid ""
"There is no way to build directly from branches.  You need to create a "
"source package and upload that."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:121
msgid ""
"Some packages have not been successfully imported into UDD branches.  Recent "
"versions of Bazaar will automatically notify you when this is the case. You "
"can also check the `status of the package importer`_ manually before working "
"on a branch."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:126
msgid ""
"All of the above are being worked on and UDD is expected to become the main "
"way to work on Ubuntu packages soon.  However currently most teams within "
"Ubuntu do not yet work with UDD branches for their  development.  However "
"because UDD branches are the same as the packages in the  archive any team "
"should be able to accept merges against them."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:3
msgid "Getting The Latest"
msgstr "Получение последних изменений"

#: ../ubuntu-packaging-guide/udd-latest.rst:5
msgid ""
"If someone else has landed changes on a package, you will want to pull those "
"changes in your own copies of the package branches."
msgstr ""
"Если кто-нибудь ещё внёс изменения в пакет, вам может понадобиться получить "
"эти изменения в ваши копии веток пакета."

#: ../ubuntu-packaging-guide/udd-latest.rst:10
msgid "Updating your main branch"
msgstr "Обновление вашей основной ветки"

#: ../ubuntu-packaging-guide/udd-latest.rst:12
msgid ""
"Updating your copy of a branch that corresponds to the package in a "
"particular release is very simple, simply use `bzr pull` from the "
"appropriate directory::"
msgstr ""
"Обновить вашу копию ветки, соответствующей пакету в определённом выпуске, "
"очень просто: выполните `bzr pull` из соответствующего каталога::"

#: ../ubuntu-packaging-guide/udd-latest.rst:18
msgid ""
"This works wherever you have a checkout of a branch, so it will work for "
"things like branches of `maverick`, `hardy-proposed`, etc."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:23
msgid "Getting the latest in to your working branches"
msgstr "Получение последних изменений в ваши рабочие ветки"

#: ../ubuntu-packaging-guide/udd-latest.rst:25
msgid ""
"Once you have updated your copy of a distroseries branch, then you may want "
"to merge this in to your working branches as well, so that they are based on "
"the latest code."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:29
msgid ""
"You don't have to do this all the time though.  You can work on slightly "
"older code with no problems.  The disadvantage would come if you were "
"working on some code that someone else changed.  If you are not working on "
"the latest version then your changes may not be correct, and may even "
"produce conflicts."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:34
msgid ""
"The merge does have to be done at some point though.  The longer it is left, "
"the harder may be, so doing it regularly should keep each merge simple.  "
"Even if there are many merges the total effort would hopefully be less."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:38
msgid ""
"To merge the changes you just need to use ``bzr merge``, but you must have "
"committed your current work first::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:44
msgid ""
"Any conflicts will be reported, and you can fix them up.  To review the "
"changes that you just merged use ``bzr diff``.  To undo the merge use ``bzr "
"revert``.  Once you are happy with the changes then use ``bzr commit``."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:50
msgid "Referring to versions of a package"
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:52
msgid ""
"You will often think in terms of versions of a package, rather than the "
"underlying Bazaar revision numbers.  `bzr-builddeb` provides a revision "
"specifier that makes this convenient.  Any command that takes a ``-r`` "
"argument to specify a revision or revision range will work with this "
"specifier, e.g. ``bzr log``, ``bzr diff``, and so on.  To view the versions "
"of a package, use the ``package:`` specifier::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:61
msgid ""
"This shows you the difference between package version 0.1-1 and 0.1-2."
msgstr ""
"Эта команда покажет вам различия между версиями пакета 0.1-1 и 0.1-2."

#: ../ubuntu-packaging-guide/udd-merging.rst:3
msgid "Merging — Updating from Debian and Upstream"
msgstr "Слияние — обновления из Debian и апстрима"

#: ../ubuntu-packaging-guide/udd-merging.rst:5
msgid ""
"Merging is one of the strengths of Bazaar, and something we do often in "
"Ubuntu development.  Updates can be merged from Debian, from a new upstream "
"release, and from other Ubuntu developers.  Doing it in Bazaar is pretty "
"simple, and all based around the ``bzr merge`` command [#]_."
msgstr ""
"Слияние — это одна из сильнейших сторон Bazaar, и мы часто выполняем его в "
"процессе разработки Ubuntu.  Слияние может быть выполнено с обновлениями из "
"Debian, из нового выпуска в апстриме и от других разработчиков Ubuntu.  "
"Сделать это в Bazaar очень просто, всё основано на команде ``bzr merge`` "
"[#]_."

#: ../ubuntu-packaging-guide/udd-merging.rst:10
msgid ""
"While you are in any branch's working directory, you can merge in a branch "
"from a different location.  First check that you have no uncommitted "
"changes::"
msgstr ""
"Находясь в рабочем каталоге любой ветки, вы можете выполнить слияние "
"изменений из ветки в другом месте.  Сначала проверьте, что у вас нет "
"незафиксированных изменений::"

#: ../ubuntu-packaging-guide/udd-merging.rst:15
msgid ""
"If that reports anything then you will either have to commit the changes, "
"revert them, or shelve them to come back to later."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:20
msgid "Merging from Debian"
msgstr "Слияние из Debian"

#: ../ubuntu-packaging-guide/udd-merging.rst:22
msgid ""
"Next run ``bzr merge`` passing the URL of the branch to merge from.  For "
"example, to merge from the version of the package in Debian Squeeze_ run::"
msgstr ""
"Теперь выполните ``bzr merge``, указав команде URL ветки, из которой нужно "
"слить изменения.  Например, чтобы выполнить слияние из версии пакета в "
"Debian Squeeze_, выполните::"

#: ../ubuntu-packaging-guide/udd-merging.rst:27
msgid ""
"This will merge the changes since the last merge point and leave you with "
"changes to review.  This may cause some conflicts.  You can see everything "
"that the ``merge`` command did by running::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:34
msgid ""
"If conflicts are reported then you need to edit those files to make them "
"look how they should, removing the *conflict markers*.  Once you have done "
"this, run::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:41
msgid ""
"This will resolve any conflicted files that you fixed, and then tell you "
"what else you have to deal with."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:44
msgid ""
"Once any conflicts are resolved, and you have made any other changes that "
"you need, you will add a new changelog entry, and commit::"
msgstr ""
"После того, как все конфликты разрешены, и вы внесли все другие необходимые "
"изменения, нужно добавить новую запись в changelog и выполнить фиксацию::"

#: ../ubuntu-packaging-guide/udd-merging.rst:50
msgid "as described earlier."
msgstr "как было описано выше."

#: ../ubuntu-packaging-guide/udd-merging.rst:52
msgid ""
"However, before you commit, it is always a good thing to check all the "
"Ubuntu changes by running::"
msgstr ""
"Однако перед фиксацией всегда желательно проверить все изменения, сделанные "
"в Ubuntu, выполнив::"

#: ../ubuntu-packaging-guide/udd-merging.rst:57
msgid ""
"which will show the differences between the Debian (0.6.10-5) and Ubuntu "
"versions (0.6.10-5ubuntu1).  In similar way you can compare to any other "
"versions.  To see all available versions run::"
msgstr ""
"Эта команда покажет различия между версиями в Debian (0.6.10-5) и Ubuntu "
"(0.6.10-5ubuntu1).  Подобным же способом вы можете выполнить сравнение с "
"любыми другими версиями.  Чтобы увидеть все доступные версии, выполните::"

#: ../ubuntu-packaging-guide/udd-merging.rst:63
msgid ""
"After testing and committing the merge, you will need to seek sponsorship or "
"upload to the archive in the normal way."
msgstr ""
"После проверки и фиксации слияния, вам нужно найти попечителя или выгрузить "
"пакет в архив обычным способом."

#: ../ubuntu-packaging-guide/udd-merging.rst:66
msgid ""
"If you are going to build the source package from this merged branch, you "
"would use the ``-S`` option to the ``bd`` command.  One other thing you'll "
"want to consider is also using the ``--package-merge`` option.  This will "
"add the appropriate ``-v`` and ``-sa`` options to the source package so that "
"all the changelog entries since the last Ubuntu change will be included in "
"your ``_source.changes`` file.  For example::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:77
msgid "Merging a new upstream version"
msgstr "Слияние с новой версией из апстрима"

#: ../ubuntu-packaging-guide/udd-merging.rst:79
msgid ""
"When upstream releases a new version (or you want to package a snapshot), "
"you have to merge a tarball into your branch."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:82
msgid ""
"This is done using the ``bzr merge-upstream`` command.  If your package has "
"a valid ``debian/watch`` file, from inside the branch that you want to merge "
"to, just type this::"
msgstr ""
"Это делается командой ``bzr merge-upstream``.  Если в вашем пакете имеется "
"файл ``debian/watch`` с правильным содержимым, то из каталога ветки, в "
"которую вы собираетесь слить изменения, просто наберите::"

#: ../ubuntu-packaging-guide/udd-merging.rst:88
msgid ""
"This will download the tarball and merge it into your branch, automatically "
"adding a ``debian/changelog`` entry for you.  ``bzr-builddeb`` looks at the "
"``debian/watch`` file for the upstream tarball location."
msgstr ""
"Команда загрузит тарбол и сольёт его в вашу ветку, автоматически добавив "
"запись в ``debian/changelog``.  ``bzr-builddeb`` просматривает файл "
"``debian/watch``, чтобы определить местоположение тарбола из апстрима."

#: ../ubuntu-packaging-guide/udd-merging.rst:92
msgid ""
"If you do *not* have a ``debian/watch`` file, you'll need to specify the "
"location of the upstream tarball, and the version manually::"
msgstr ""
"Если у вас *отсутствует* файл ``debian/watch``, то вам нужно вручную указать "
"местоположение тарбола из апстрима и версию::"

#: ../ubuntu-packaging-guide/udd-merging.rst:97
msgid ""
"The ``--version`` option is used to specify the upstream version that is "
"being merged in, as the command isn't able to infer that (yet)."
msgstr ""
"Опция ``--version`` используется для указания версии апстрима, из которой "
"выполняется слияние, поскольку команда не способна  (пока) узнать её "
"самостоятельно."

#: ../ubuntu-packaging-guide/udd-merging.rst:100
msgid ""
"The last parameter is the location of the tarball that you are upgrading to; "
"this can either be a local filesystem path, or a http, ftp, sftp, etc. URI "
"as shown.  The command will automatically download the tarball for you.  The "
"tarball will be renamed appropriately and, if required, converted to ``.gz``."
msgstr ""
"Последний параметр — это местоположение тарбола, на который выполняется "
"обновление: это может быть путь в локальной файловой системе, http, ftp, "
"sftp или другой URI, как показано в примере.  Команда автоматически загрузит "
"тарбол для вас, переименует его соответствующим образом и, если требуется, "
"преобразует в ``.gz``."

#: ../ubuntu-packaging-guide/udd-merging.rst:105
msgid ""
"The `merge-upstream` command will either tell you that it completed "
"successfully, or that there were conflicts.  Either way you will be able to "
"review the changes before committing as normal."
msgstr ""
"Команда ``merge-upstream`` сообщит либо о своём удачном завершении, либо о "
"том, что имеются конфликты.  В любом случае у вас будет возможность "
"проверить изменения перед их фиксацией обычным способом."

#: ../ubuntu-packaging-guide/udd-merging.rst:109
msgid ""
"If you are merging an upstream release into an existing Bazaar branch that "
"has not previously used the UDD layout, ``bzr merge-upstream`` will fail "
"with an error that the tag for the previous upstream version is not "
"available; the merge can't be completed without knowing what base version to "
"merge against. To work around this, create a tag in your existing repository "
"for the last upstream version present there; e.g., if the last Ubuntu "
"release was *1.1-0ubuntu3*, create the tag *upstream-1.1* pointing to the "
"bzr revision you want to use as the tip of the upstream branch."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:121
msgid ""
"You will need newer versions of ``bzr`` and the ``bzr-builddeb`` for the "
"``merge`` command to work.  Use the versions from Ubuntu 12.04 (Precise) or "
"the development versions from the ``bzr`` PPA.  Specifically, you need "
"``bzr`` version 2.5 beta 5 or newer, and ``bzr-builddeb`` version 2.8.1 or "
"newer.  For older versions, use the ``bzr merge-package`` command instead."
msgstr ""
"Для работы с командой ``merge`` вам понадобятся более новые версии ``bzr`` и "
"``bzr-builddeb``.  Используйте версии из Ubuntu 12.04 (Precise) или "
"разрабатываемые версии из  PPA ``bzr``.  Точнее говоря, вам понадобится "
"``bzr`` версии 2.5 beta 5 или более новой, а также ``bzr-builddeb`` версии "
"2.8.1 или более новой.  Для старых версий используйте взамен команду ``bzr "
"merge-package``."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:3
msgid "Seeking Review and Sponsorship"
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:5
msgid ""
"One of the biggest advantages to using the UDD workflow is to improve "
"quality by seeking review of changes by your peers.  This is true whether or "
"not you have upload rights yourself.  Of course, if you don't have upload "
"rights, you will need to seek sponsorship."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:10
msgid ""
"Once you are happy with your fix, and have a branch ready to go, the "
"following steps can be used to publish your branch on Launchpad, link it to "
"the bug issue, and create a *merge proposal* for others to review, and "
"sponsors to upload."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:19
msgid "Pushing to Launchpad"
msgstr "Выгрузка на Launchpad"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:21
msgid ""
"We previously showed you how to :ref:`associate your branch to the bug <link-"
"via-changelog>` using ``dch`` and ``bzr commit``.  However, the branch and "
"bug don't actually get linked until you push the branch to Launchpad."
msgstr ""
"Ранее мы показали вам, как :ref:`связать вашу ветку с ошибкой <link-via-"
"changelog>`, используя команды  ``dch`` и ``bzr commit``.  Однако ветка и "
"ошибка в действительности не будут связаны, пока вы не выгрузите ветку на "
"Launchpad командой push."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:25
msgid ""
"It is not critical to have a link to a bug for every change you make, but if "
"you are fixing reported bugs then linking to them will be useful."
msgstr ""
"Создавать ссылку на ошибку для каждого вашего изменения не обязательно, но "
"если вы исправляете ошибки, для которых имеется отчёт об ошибке, то ссылки "
"на этот отчёт могут быть полезны."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:28
msgid "The general form of the URL you should push your branch to is::"
msgstr ""
"Общий формат URL, на который вы должны выгрузить свою ветку, имеет следующий "
"вид::"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:32
msgid ""
"For example, to push your fix for bug 12345 in the Tomboy package for Natty, "
"you'd use::"
msgstr ""
"Например, чтобы отправить исправление для ошибки 12345 в пакете Tomboy для "
"Natty, используйте::"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:37
msgid ""
"The last component of the path is arbitrary; it's up to you to pick "
"something meaningful."
msgstr ""
"Последний компонент пути в этом примере выбран произвольно, укажите вместо "
"него реально существующую ошибку."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:40
msgid ""
"However, this usually isn't enough to get Ubuntu developers to review and "
"sponsor your change.  You should next submit a *merge proposal*."
msgstr ""
"Но обычно этого недостаточно, чтобы разработчики Ubuntu проверили ваше "
"изменение и взяли на себя поручительство над ним.  Вам нужно отправить "
"*предложение слияния* (merge proposal)."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:43
msgid "To do this open the bug page in a browser, e.g.::"
msgstr "Для этого откройте страницу ошибки в браузере, например::"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:47
msgid "If that fails, then you can use::"
msgstr "Если сделать это не удалось, вы можете использовать::"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:51
msgid ""
"where most of the URL matches what you used for `bzr push`.  On this page, "
"you'll see a link that says *Propose for merging into another branch*.  Type "
"in an explanation of your change in the *Initial Comment* box.  Lastly, "
"click *Propose Merge* to complete the process."
msgstr ""
"где большая часть URL совпадает с тем URL, который вы указывали в команде "
"`bzr push`.  На этой странице вы увидите ссылку *Propose for merging into "
"another branch*.  Наберите описание вашего изменения в поле  *Initial "
"Comment*.  Затем щёлкните *Propose Merge*, чтобы завершить процесс."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:56
msgid ""
"Merge proposals to package source branches will automatically subscribe the "
"`~ubuntu-branches` team, which should be enough to reach an Ubuntu developer "
"who can review and sponsor your package change."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:62
msgid "Generating a debdiff"
msgstr "Создание debdiff"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:64
msgid ""
"As noted above, some sponsors still prefer reviewing a *debdiff* attached to "
"bug reports instead of a merge proposal.  If you're requested to include a "
"debdiff, you can generate one like this (from inside your `bug-12345` "
"branch)::"
msgstr ""
"Как было указано выше, некоторые поручители предпочитают проверять "
"*debdiff*, прикреплённый к отчёту об ошибке, вместо предложения слияния.  "
"Если вас попросили включить debdiff, вы можете создать его следующим образом "
"(из вашей ветки `bug-12345`)::"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:71
msgid ""
"Another way is to is to open the merge proposal and download the diff."
msgstr "Другой способ — открыть предложение слияния и загрузить diff."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:73
msgid ""
"You should ensure that diff has the changes you expect, no more and no less. "
"Name the diff appropriately, e.g. ``foobar-12345.debdiff`` and attach it to "
"the bug report."
msgstr ""
"Вы должны убедиться, что diff-файл содержит ожидаемые вами изменения, не "
"больше и не меньше. Дайте ему подходящее имя, например, ``foobar-"
"12345.debdiff`` и прикрепите к отчёту об ошибке."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:79
msgid "Dealing with feedback from sponsors"
msgstr "Работа с обратной связью от поручителей"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:81
msgid ""
"If a sponsor reviews your branch and asks you to change something, you can "
"do this fairly easily.  Simply go to the branch that you were working in "
"before, make the changes requested, and then commit::"
msgstr ""
"Если поручитель проверяет вашу ветку и просит вас что-то изменить, то "
"сделать это очень легко.  Просто перейдите в ветку, над которой вы работали, "
"сделайте требуемые изменения и выполните фиксацию::"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:87
msgid ""
"Now when you push your branch to Launchpad, Bazaar will remembered where you "
"pushed to, and will update the branch on Launchpad with your latest commits. "
"All you need to do is::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:93
msgid ""
"You can then reply to the merge proposal review email explaining what you "
"changed, and asking for re-review, or you can reply on the merge proposal "
"page in Launchpad."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:97
msgid ""
"Note that if you are sponsored via a debdiff attached to a bug report you "
"need to manually update by generating a new diff and attaching that to the "
"bug report."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:103
msgid "Expectations"
msgstr "Ожидание"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:105
msgid ""
"The Ubuntu developers have set up a schedule of \"patch pilots\", who "
"regularly review the sponsoring queue and give feedback on branches and "
"patches. Even though this measure has been put in place it might still take "
"several days until you hear back. This depends on how busy everybody is, if "
"the development release is currently frozen, or other factors."
msgstr ""
"Разработчики Ubuntu составили расписание людей (так называемых \"patch "
"pilots\"), которые регулярно проверяют очередь поручительства и "
"предоставляют обратную связь по вопросам работы с ветками и патчами. Но, "
"даже несмотря на это, может пройти несколько дней, пока вы получите ответ. "
"Это зависит от их занятости, от состояния заморозки текущей версии и других "
"факторов."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:111
msgid ""
"If you haven't heard back in a while, feel free to join `#ubuntu-devel` on "
"`irc.freenode.net` and find out if somebody can help you there."
msgstr ""
"Если вы не получаете ответа в течение долгого времени, подключитесь к каналу "
"`#ubuntu-devel` на `irc.freenode.net` и найдите кого-нибудь, кто может вам "
"помочь."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:114
msgid ""
"For more information on the generall sponsorship process, review the "
"documentation on our wiki as well: https://wiki.ubuntu.com/SponsorshipProcess"
msgstr ""
"Чтобы узнать больше о процессе поручительства, прочтите также нашу вики-"
"документацию: https://wiki.ubuntu.com/SponsorshipProcess"

#: ../ubuntu-packaging-guide/udd-uploading.rst:3
msgid "Uploading a package"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:5
msgid ""
"Once your merge proposal is reviewed and approved, you will want to upload "
"your package, either to the archive (if you have permission) or to your "
"`Personal Package Archive`_ (PPA).  You might also want to do an upload if "
"you are sponsoring someone else's changes."
msgstr ""
"После того, как предложение слияния проверено и утверждено, вы можете "
"захотеть выгрузить свой пакетy либо в архив дистрибутива (если у вас есть "
"соответствующие права), либо в ваш `персональный архив пакетов`_ (Personal "
"Package Archive, или PPA).  Вам также может понадобиться это сделать, если "
"вы являетесь взяли на себя поручительство над чьими-нибудь изменениями."

#: ../ubuntu-packaging-guide/udd-uploading.rst:12
msgid "Uploading a change made by you"
msgstr "Выгрузка изменений, сделанных вами"

#: ../ubuntu-packaging-guide/udd-uploading.rst:14
msgid ""
"When you have a branch with a change that you would like to upload you need "
"to get that change back on to the main source branch, build a source "
"package, and then upload it."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:18
msgid ""
"First, you need to check that you have the latest version of the package in "
"your checkout of the development package trunk::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:24
msgid ""
"This pulls in any changes that may have been committed while you were "
"working on your fix.  From here, you have several options.  If the changes "
"on the trunk are large and you feel should be tested along with your change "
"you can merge them into your bug fix branch and test there.  If not, then "
"you can carry on merging your bug fix branch into the development trunk "
"branch.  As of bzr 2.5 and bzr-builddeb 2.8.1, this works with just the "
"standard ``merge`` command::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:34
msgid ""
"For older versions of bzr, you can use the ``merge-package`` command "
"instead::"
msgstr ""
"Для более старых версий bzr можно использовать взамен команду ``merge-"
"package``::"

#: ../ubuntu-packaging-guide/udd-uploading.rst:38
msgid ""
"This will merge the two trees, possibly producing conflicts, which you'll "
"need to resolve manually."
msgstr ""
"Эта команда сольёт два дерева и, возможно, сообщит о конфликтах, которые вам "
"надо будет разрешить вручную."

#: ../ubuntu-packaging-guide/udd-uploading.rst:41
msgid ""
"Next you should make sure the ``debian/changelog`` is as you would like, "
"with the correct distribution, version number, etc."
msgstr ""
"Далее следует убедиться в правильности содержимого ``debian/changelog``, то "
"есть, что там правильно указан дистрибутив, номер версии и т.п."

#: ../ubuntu-packaging-guide/udd-uploading.rst:44
msgid ""
"Once that is done you should review the change you are about to commit with "
"``bzr diff``.  This should show you the same changes as a debdiff would "
"before you upload the source package."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:48
msgid ""
"The next step is to build and test the modified source package as you "
"normally would::"
msgstr ""
"Следующий шаг — собрать и протестировать изменённый пакет исходного кода, "
"как вы это обычно делаете::"

#: ../ubuntu-packaging-guide/udd-uploading.rst:53
msgid ""
"When you're finally happy with your branch, make sure you've committed all "
"your changes, then tag the branch with the changelog's version number.  The "
"``bzr tag`` command will do this for you automatically when given no "
"arguments::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:60
msgid ""
"This tag will tell the package importer that what is in the Bazaar branch is "
"the same as in the archive."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:63
msgid "Now you can push the changes back to Launchpad::"
msgstr ""
"Теперь вы можете выгрузить командой push изменения обратно на Launchpad::"

#: ../ubuntu-packaging-guide/udd-uploading.rst:67
msgid "(Change the destination if you are uploading an SRU or similar.)"
msgstr ""
"(Измените место назначения, если вы выгружаете SRU или что-то подобное.)"

#: ../ubuntu-packaging-guide/udd-uploading.rst:69
msgid ""
"You need one last step to get your changes uploaded into Ubuntu or your PPA; "
"you need to ``dput`` the source package to the appropriate location.  For "
"example, if you want to upload your changes to your PPA, you'd do::"
msgstr ""
"Вам нужен один последний шаг, чтобы отправить свои изменения в Ubuntu или "
"ваш PPA: вам нужно загрузить с помощью ``dput`` пакет исходного кода в "
"соответствующее место.  Например, чтобы загрузить изменения в PPA, сделайте "
"следующее::"

#: ../ubuntu-packaging-guide/udd-uploading.rst:75
msgid "or, if you have permission to upload to the primary archive::"
msgstr "или, если у вас есть права загрузки в основной архив::"

#: ../ubuntu-packaging-guide/udd-uploading.rst:79
msgid ""
"You are now free to delete your feature branch, as it is merged, and can be "
"re-downloaded from Launchpad if needed."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:84
msgid "Sponsoring a change"
msgstr "Поручительство над изменением"

#: ../ubuntu-packaging-guide/udd-uploading.rst:86
msgid ""
"Sponsoring someone else's change is just like the above procedure, but "
"instead of merging from a branch you created, you merge from the branch in "
"the merge proposal::"
msgstr ""
"Поручительство над чьим-нибудь изменением похоже на вышеописанную процедуру, "
"но вместо слияния из созданной вами ветки вы выполняете слияние из ветки, "
"имеющейся в предложении слияния::"

#: ../ubuntu-packaging-guide/udd-uploading.rst:92
msgid ""
"If there are lots of merge conflicts you would probably want to ask the "
"contributor to fix them up.  See the next section to learn how to cancel a "
"pending merge."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:96
msgid ""
"But if the changes look good, commit and then follow the rest of the "
"uploading process::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:103
msgid "Canceling an upload"
msgstr "Отмена выгрузки"

#: ../ubuntu-packaging-guide/udd-uploading.rst:105
msgid ""
"At any time before you `dput` the source package you can decide to cancel an "
"upload and revert the changes::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:110
msgid ""
"You can do this if you notice something needs more work, or if you would "
"like to ask the contributor to fix up conflicts when sponsoring something."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:115
msgid "Sponsoring something and making your own changes"
msgstr "Поручительство над чем-нибудь и внесение своих собственных изменений"

#: ../ubuntu-packaging-guide/udd-uploading.rst:117
msgid ""
"If you are going to sponsor someone's work, but you would like to roll it up "
"with some changes of your own then you can merge their work in to a separate "
"branch first."
msgstr ""
"Если вы являетесь поручителем над чьей-нибудь работой, но хотите дополнить "
"её несколькими собственными изменениями, то вы можете сначала выполнить "
"слияние их работы в отдельную ветку."

#: ../ubuntu-packaging-guide/udd-uploading.rst:121
msgid ""
"If you already have a branch where you are working on the package and you "
"would like to include their changes, then simply run the ``bzr merge`` from "
"that branch, instead of the checkout of the development package.  You can "
"then make the changes and commit, and then carry on with your changes to the "
"package."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:127
msgid ""
"If you don't have an existing branch, but you know you would like to make "
"changes based on what the contributor provides then you should start by "
"grabbing their branch::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:133
msgid ""
"then work in this new branch, and then merge it in to the main one and "
"upload as if it was your own work.  The contributor will still be mentioned "
"in the changelog, and Bazaar will correctly attribute the changes they made "
"to them."
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:3
msgid "Working on a Package"
msgstr "Работа с пакетом"

#: ../ubuntu-packaging-guide/udd-working.rst:5
msgid ""
"Once you have the source package branch in a shared repository, you'll want "
"to create additional branches for the fixes or other work you plan to do.  "
"You'll want to base your branch off the package source branch for the distro "
"release that you plan to upload to.  Usually this is the current development "
"release, but it may be older releases if you're backporting to an SRU for "
"example."
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:13
msgid "Branching for a change"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:15
msgid ""
"The first thing to do is to make sure your source package branch is up-to-"
"date.  It will be if you just checked it out, otherwise do this::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:21
msgid ""
"Any updates to the package that have uploaded since your checkout will now "
"be pulled in.  You do not want to make changes to this branch.  Instead, "
"create a branch that will contain just the changes you're going to make.  "
"Let's say you want to fix bug 12345 for the Tomboy project.  When you're in "
"the shared repository you previously created for Tomboy, you can create your "
"bug fix branch like this::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:31
msgid ""
"Now you can do all my work in the ``bug-12345`` directory.  You make changes "
"there as necessary, committing as you go along.  This is just like doing any "
"kind of software development with Bazaar.  You can make intermediate commits "
"as often as you like, and when your changes are finished, you will use the "
"standard ``dch`` command (from the ``devscripts`` package)::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:39
msgid ""
"This will drop you in an editor to add an entry to the `debian/changelog` "
"file."
msgstr ""
"Эта команда откроет редактор и добавит запись в файл `debian/changelog`."

#: ../ubuntu-packaging-guide/udd-working.rst:44
msgid ""
"When you added your ``debian/changelog`` entry, you should have included a "
"bug fix tag that indicated which Launchpad bug issue you're fixing.  The "
"format of this textual tag is pretty strict: ``LP: #12345``.  The space "
"between the ``:`` and the ``#`` is required and of course you should use the "
"actual bug number that you're fixing.  Your ``debian/changelog`` entry might "
"look something like::"
msgstr ""
"При добавлении записи в ``debian/changelog`` вы должны включить тег "
"исправления ошибки, который указывает, для какого сообщения об ошибке на "
"Launchpad вы создали исправление.  Этот текстовый тег имеет вполне "
"определённый формат: ``LP: #12345``.  Пробел между ``:`` и ``#`` обязателен "
"и, разумеется, вы должны указать номер реально существующей ошибке, которую "
"вы исправляете.  Ваш ``debian/changelog`` может выглядеть примерно так::"

#: ../ubuntu-packaging-guide/udd-working.rst:57
msgid "Commit with the normal::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:61
msgid ""
"A hook in bzr-builddeb will use the debian/changelog text as the commit "
"message and set the tag to mark bug #12345 as fixed."
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:64
msgid ""
"This only works with bzr-builddeb 2.7.5 and bzr 2.4, for older versions use "
"``debcommit``."
msgstr ""
"Это работает только с bzr-builddeb 2.7.5 и bzr 2.4, для более старых версий "
"используйте ``debcommit``."

#: ../ubuntu-packaging-guide/udd-working.rst:71
msgid ""
"Along the way, you'll want to build your branch so that you can test it to "
"make sure it does actually fix the bug."
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:74
msgid ""
"In order to build the package you can use the ``bzr builddeb`` command from "
"the ``bzr-builddeb`` package.  You can build a source package with::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:79
msgid ""
"(``bd`` is an alias for ``builddeb``.)  You can leave the package unsigned "
"by appending ``-- -uc -us`` to the command."
msgstr ""
"(``bd`` — это псевдоним для ``builddeb``.)  Вы можете оставить пакет "
"неподписанным, добавив к команде ``-- -uc -us``."

#: ../ubuntu-packaging-guide/udd-working.rst:82
msgid ""
"It is also possible to use your normal tools, as long as they are able to "
"strip the .bzr directories from the package, e.g.::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:87
msgid ""
"If you ever see an error related to trying to build a native package without "
"a tarball, check to see if there is a ``.bzr-builddeb/default.conf`` file "
"erroneously specifying the package as native.  If the changelog version has "
"a dash in it, then it's not a native package, so remove the configuration "
"file. Note that while ``bzr builddeb`` has a ``--native`` switch, it does "
"not have a ``--no-native`` switch."
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:94
msgid ""
"Once you've got the source package, you can build it as normal with "
"``pbuilder-dist`` (or ``pbuilder`` or `sbuild`_)."
msgstr ""
"После того, как вы получили пакет исходного кода, можно собрать его как "
"обычно, с помощью ``pbuilder-dist`` (или ``pbuilder``, или `sbuild`_)."

msgid "translator-credits"
msgstr ""
"Launchpad Contributions:\n"
"  Aleksey Kabanov https://launchpad.net/~ak099\n"
"  Beatrix Kiddo https://launchpad.net/~mashksharn\n"
"  Daniel Holbach https://launchpad.net/~dholbach\n"
"  Dmitry Shachnev https://launchpad.net/~mitya57\n"
"  Patsev Anton https://launchpad.net/~patsev-anton\n"
"  Vladimir Doroshenko https://launchpad.net/~vovktt"

#~ msgid ""
#~ "This will send your key to one keyserver, but a network of keyservers will "
#~ "automatically sync the key between themselves. Once this syncing is "
#~ "complete, your signed public key will be ready to verify your contributions "
#~ "around the world."
#~ msgstr ""
#~ "Эта команда отправит ваш ключ на один сервер ключей, а сеть серверов ключей "
#~ "автоматически синхронизирует ключ между остальными серверами. Когда "
#~ "синхронизация завершится, ваш подписанный открытый ключ будет готов для "
#~ "удостоверения сделанного вами вклада по всему миру."

#~ msgid ""
#~ "Thousands of source packages, billions of lines of code, hundreds of "
#~ "contributors require a lot of communication and planning to maintain high "
#~ "standards of quality. At the beginning of each release cycle we have the "
#~ "Ubuntu Developer Summit where developers and contributors come together to "
#~ "plan the features of the next releases. Every feature is discussed by its "
#~ "stakeholders and a specification is written that contains detailed "
#~ "information about its assumptions, implementation, the necessary changes in "
#~ "other places, how to test it and so on. This is all done in an open and "
#~ "transparent fashion, so even if you cannot attend the event in person, you "
#~ "can participate remotely and listen to a streamcast, chat with attendants "
#~ "and subscribe to changes of specifications, so you are always up to date."
#~ msgstr ""
#~ "Тысячи пакетов исходного кода, миллиарды строк кода, сотни участников — всё "
#~ "это требует изрядной доли общения и планирования, чтобы обеспечить высокие "
#~ "стандарты качества. В начале каждого цикла выпуска мы проводим совещание "
#~ "разработчиков (Ubuntu Developer Summit), где разработчики и добровольные "
#~ "участники встречаются, чтобы спланировать новые функции в будущих выпусках. "
#~ "Каждая новая функция обсуждается заинтересованными сторонами и пишется "
#~ "спецификация, содержащая подробную информацию об ответственности, "
#~ "реализации, необходимых изменениях в других частях системы, о способах "
#~ "тестирования, и так далее. Всё это делается открытым и прозрачным образом, "
#~ "так что, даже если вы не присутствуете на этом событии лично, вы можете "
#~ "принять удалённое участие и прослушать потоковое вещание, пообщаться с "
#~ "другими участниками в чате и подписаться на изменения в спецификациях, чтобы "
#~ "всегда быть в курсе происходящего."

#~ msgid ""
#~ "Every time a new version of an application is released, or when someone "
#~ "makes a change to the source code that goes into Ubuntu, the source package "
#~ "must be uploaded to Launchpad's build machines to be compiled. The resulting "
#~ "binary packages then are distributed to the archive and its mirrors in "
#~ "different countries. The URLs in ``/etc/apt/sources.list`` point to an "
#~ "archive or mirror. Every day CD images are built for a selection of "
#~ "different Ubuntu flavours. Ubuntu Desktop, Ubuntu Server, Kubuntu and others "
#~ "specify a list of required packages that get on the CD. These CD images are "
#~ "then used for installation tests and provide the feedback for further "
#~ "release planning."
#~ msgstr ""
#~ "При выпуске каждой новой версии приложения, или если кто-нибудь внёс "
#~ "изменения в относящийся к Ubuntu исходный код, пакет исходного кода должен "
#~ "быть загружен на сборочные компьютеры Launchpad для компиляции. Получившиеся "
#~ "двоичные пакеты затем попадают в архив и его зеркала в различных странах. "
#~ "Адреса в ``/etc/apt/sources.list`` указывают на архив или зеркало архива. "
#~ "Каждый день для различных вариантов Ubuntu создаются образы компакт-дисков. "
#~ "Команды разработчиков Ubuntu Desktop, Ubuntu Server, Kubuntu и других "
#~ "вариантов определяют список требуемых пакетов, которые попадают на CD. Эти "
#~ "образы CD затем используются для тестирования установки и предоставляют  "
#~ "обратную связь для дальнейшего планирования выпуска."
