# Ukrainian translation for ubuntu-packaging-guide
# Copyright (c) 2015 Rosetta Contributors and Canonical Ltd 2015
# This file is distributed under the same license as the ubuntu-packaging-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2015.
#
msgid ""
msgstr ""
"Project-Id-Version: ubuntu-packaging-guide\n"
"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
"POT-Creation-Date: 2017-09-03 14:51-0500\n"
"PO-Revision-Date: 2018-01-05 06:21+0000\n"
"Last-Translator: Dmitry Shachnev <mitya57@gmail.com>\n"
"Language-Team: Ukrainian <uk@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2018-08-24 05:46+0000\n"
"X-Generator: Launchpad (build 18752)\n"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:3
msgid "autopkgtest: Automatic testing for packages"
msgstr "autopkgtest: Автоматичне тестування пакунків"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:5
msgid ""
"The `DEP 8 specification <DEP8_>`_ defines how automatic testing can very "
"easily be integrated into packages. To integrate a test into a package, all "
"you need to do is:"
msgstr ""
"`Специфікація DEP 8 <DEP8_>`_ визначає, як можна легко інтегрувати "
"автоматичне тестування у Ваші пакунки. Для цього, необхідно:"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:9
msgid ""
"add a file called ``debian/tests/control`` which specifies the requirements "
"for the testbed,"
msgstr ""
"додати файл ``debian/tests/control``, який визначає вимоги до тестового "
"оточення,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:11
msgid "add the tests in ``debian/tests/``."
msgstr "додати тести в ``debian/tests``."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:15
msgid "Testbed requirements"
msgstr "Вимоги до тестового оточення"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:17
msgid ""
"In ``debian/tests/control`` you specify what to expect from the testbed. So "
"for example you list all the required packages for the tests, if the testbed "
"gets broken during the build or if ``root`` permissions are required. The "
"`DEP 8 specification <DEP8_>`_ lists all available options."
msgstr ""
"У файлі ``debian/tests/control`` Ви можете визначити вимоги до тестового "
"оточення. Наприклад, якщо тести не проходять при збірці, або потрібні права "
"``root`` -- Ви перераховуєте необхідні для тестів пакунки. У `Специфікації "
"DEP 8 <DEP8_>`_ Ви знайдете усі доступні опції."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:22
msgid ""
"Below we are having a look at the ``glib2.0`` source package. In a very "
"simple case the file would look like this::"
msgstr ""
"Нижче ми розглянемо пакунок джерельного коду ``glib2.0``. У дуже простому "
"випадку він буде виглядати так::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:28
msgid ""
"For the test in ``debian/tests/build`` this would ensure that the packages "
"``libglib2.0-dev`` and ``build-essential`` are installed."
msgstr ""
"Це буде означати, що для тесту ``debian/tests/build`` потрібні пакунки "
"``libglib2.0-dev`` і ``build-essential``."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:31
msgid ""
"You can use ``@`` in the ``Depends`` line to indicate that you want all the "
"packages installed which are built by the source package in question."
msgstr ""
"У полі ``Depends`` можна вказати ``@``, якщо Ви бажаєте встановлення усіх "
"бінарних пакунків, зібраних з розглядуваного пакунку джерельного коду."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:37
msgid "The actual tests"
msgstr "Поточні тести"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:39
msgid "The accompanying test for the example above might be:"
msgstr "Тест, що відповідає розглянутому вище прикладу, буде виглядати так:"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:71
msgid ""
"Here a very simple piece of C code is written to a temporary directory. Then "
"this is compiled with system libraries (using flags and library paths as "
"provided by `pkg-config`). Then the compiled binary, which just exercises "
"some parts of core glib functionality, is run."
msgstr ""
"Тут невелика проґрама мовою C копіюється у тимчасову теку, потім "
"компілюється з використанням системних бібліотек (з використанням прапорців "
"та шляхів до бібліотек, визначених через ``pkg-config``). Потім запускається "
"скомпільований файл, який запускає декілька основних функцій glib."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:76
msgid ""
"While this test is very small and simple, it covers quite a lot: that your -"
"dev package has all necessary dependencies, that your package installs "
"working pkg-config files, headers and libraries are put into the right "
"place, or that the compiler and linker work. This helps to uncover critical "
"issues early on."
msgstr ""
"Хоч цей тест дуже маленький і простий, він перевіряє багато: що Ваш -dev "
"пакунок має усі необхідні залежності, що Ваш пакунок встановлює робочі файли "
"pkg-config, заголовкові файли і бібліотеки поміщуються у потрібне місце, або "
"що компілювальник та компонувальник працюють. Це допомогає виявити критичні "
"помилки на початковій стадії."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:82
msgid "Executing the test"
msgstr "Виконання тесту"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:84
msgid ""
"While the test script can be easily executed on its own, it is strongly "
"recommended to actually use ``autopkgtest`` from the ``autopkgtest`` package "
"for verifying that your test works; otherwise, if it fails in the Ubuntu "
"Continuous Integration (CI) system, it will not land in Ubuntu.  This also "
"avoids cluttering your workstation with test packages or test configuration "
"if the test does something more intrusive than the simple example above."
msgstr ""

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:91
msgid ""
"The `README.running-tests <running_tests_local_>`_ (`online version "
"<DEP8_>`_) documentation explains all available testbeds (schroot, LXD, "
"QEMU, etc.) and the most common scenarios how to run your tests with "
"``autopkgtest``, e. g. with locally built binaries, locally modified tests, "
"etc."
msgstr ""

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:97
msgid ""
"The Ubuntu CI system uses the QEMU runner and runs the tests from the "
"packages in the archive, with ``-proposed`` enabled. To reproduce the exact "
"same environment, first install the necessary packages::"
msgstr ""
"Система безперервної інтеграції Ubuntu CI використовує емулятор QEMU й "
"запускає тести з пакунків у архіві, з увімкненим прапорцем ``-proposed``. "
"Щоб вручну отримати те ж оточення, спочатку необхідно встановити наступні "
"пакунки:"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:103
msgid "Now build a testbed with::"
msgstr "Тепер виконайте збірку тестового оточення, виконавши таке:"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:107
msgid ""
"(Please see its manpage and ``--help`` output for selecting different "
"releases, architectures, output directory, or using proxies). This will "
"build e. g. ``adt-trusty-amd64-cloud.img``."
msgstr ""
"(Детальніше про вибір інших релізів, архітектур, цільових директорій, й про "
"використання проксі -- в manpage й у виводі опції ``--help``). Ця команда "
"виконає збірку, наприклад ``adt-trusty-amd64-cloud.img``."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:111
msgid ""
"Then run the tests of a source package like ``libpng`` in that QEMU image::"
msgstr ""
"Тепер запустіть тести джерельного пакунку, наприклад ``libpng``, у образі "
"QEMU:"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:115
msgid ""
"The Ubuntu CI system runs packages with only selected packages from ``-"
"proposed`` available (the package which caused the test to be run); to "
"enable that, run::"
msgstr ""

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:121
msgid "or to run with all packages from ``-proposed``::"
msgstr ""

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:125
msgid ""
"The ``autopkgtest`` manpage has a lot more valuable information on other "
"testing options."
msgstr ""

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:130
msgid "Further examples"
msgstr "Подальші приклади"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:132
msgid ""
"This list is not comprehensive, but might help you get a better idea of how "
"automated tests are implemented and used in Ubuntu."
msgstr ""
"Цей перелік не повний, але може допомогти Вам отримати уяву про те, як "
"автоматичні тести реалізовані, й як вони використовуються в Ubuntu."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:135
msgid ""
"The `libxml2 tests <libxml2_>`_ are very similar. They also run a test-build "
"of a simple piece of C code and execute it."
msgstr ""
"Для бібліотеки `libxml2 <libxml2_>`_ , тести дуже схожі. Вони також "
"запускають тестову збірку простого коду на C й виконують його."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:137
msgid ""
"The `gtk+3.0 tests <gtk3_>`_ also do a compile/link/run check in the "
"\"build\" test. There is an additional \"python3-gi\" test which verifies "
"that the GTK library can also be used through introspection."
msgstr ""
"`Тести пакунку gtk+3.0 <gtk3_>`_ також компілюють/лінкують/запускають "
"перевірку у тесті \"build\". Також є додатковий тест \"python3-gi\", який "
"перевіряє що бібліотека GTK може бути використана під час тесту."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:140
msgid ""
"In the `ubiquity tests <ubiquity_>`_ the upstream test-suite is executed."
msgstr ""
"У пакунку `ubiquity tests <ubiquity_>`_ використовується набір тестів "
"батьківського пакунку"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:141
msgid ""
"The `gvfs tests <gvfs_>`_ have comprehensive testing of their functionality "
"and are very interesting because they emulate usage of CDs, Samba, DAV and "
"other bits."
msgstr ""
"Пакунок `gvfs tests <gvfs_>`_ -- дуже цікавий приклад: він тестує свій "
"функціонал \"на повну\", включаючи емулювання CD, Samba, DAV та інших "
"компонентів."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:146
msgid "Ubuntu infrastructure"
msgstr "Інфраструктура Ubuntu"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:148
msgid ""
"Packages which have ``autopkgtest`` enabled will have their tests run "
"whenever they get uploaded or any of their dependencies change. The output "
"of `automatically run autopkgtest tests <jenkins_>`_ can be viewed on the "
"web and is regularly updated."
msgstr ""
"Пакунки з увімкненим ``autopkgtest`` будуть тестуватися при вивантаженні, "
"або якщо оновляться якісь залежності. Результат роботи `автоматичний запуск "
"тестів autopkgtest <jenkins_>`_ може бути переглянутий на сайті, й він "
"регулярно оновлюється."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:153
msgid ""
"Debian also uses ``autopkgtest`` to run package tests, although currently "
"only in schroots, so results may vary a bit. Results and logs can be seen on "
"http://ci.debian.net. So please submit any test fixes or new tests to Debian "
"as well."
msgstr ""

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:159
msgid "Getting the test into Ubuntu"
msgstr "Додавання тесту в Ubuntu"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:161
msgid ""
"The process of submitting an autopkgtest for a package is largely similar to "
":doc:`fixing a bug in Ubuntu<./fixing-a-bug>`. Essentially you simply:"
msgstr ""
"Процес додавання й відправлення autopkgtest-тесту для пакунків дуже схожий "
"на :doc:`процес виправлення помилок в Ubuntu<./fixing-a-bug>`. Вистачить "
"лише:"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:164
msgid "run ``bzr branch ubuntu:<packagename>``,"
msgstr "виконайте ``bzr branch ubuntu:<ім’я_пакунку>``,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:165
msgid "edit ``debian/control`` to enable the tests,"
msgstr "увімкніть тести в ``debian/control``,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:166
msgid "add the ``debian/tests`` directory,"
msgstr "створіть директорію ``debian/tests``,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:167
msgid ""
"write the ``debian/tests/control`` based on the `DEP 8 Specification "
"<dep8_>`_,"
msgstr ""
"створіть ``debian/tests/control``, основуючись на `Специфікації DEP 8 "
"<dep8_>`_,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:168
msgid "add your test case(s) to ``debian/tests``,"
msgstr "додайте Ваші тести в ``debian/tests``,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:169
msgid ""
"commit your changes, push them to Launchpad, propose a merge and get it "
"reviewed just like any other improvement in a source package."
msgstr ""
"закомте Ваші зміни, відправте їх на Launchpad, запропонуйте merge й "
"дочекайтеся його розгляду, -- у точності як з будь-якими іншими покращеннями "
"у джерельних пакунках."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:174
msgid "What you can do"
msgstr "Чи Ви можете допомогти"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:176
msgid ""
"The Ubuntu Engineering team put together a `list of required test-cases "
"<requiredtests_>`_, where packages which need tests are put into different "
"categories. Here you can find examples of these tests and easily assign them "
"to yourself."
msgstr ""
"Команда Ubuntu Engineering зібрала `перелік необхідних тестів "
"<requiredtests_>`_, у якому пакунки, що потребують тестування, розподілені "
"за категоріями. Там можна знайти приклади таких тестів й взяти їх на себе."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:180
msgid ""
"If you should run into any problems, you can join the `#ubuntu-quality IRC "
"channel <qualityirc_>`_ to get in touch with developers who can help you."
msgstr ""
"Якщо Ви зіштовхнетеся з проблемами, приєднуйтеся до IRC на каналу `#ubuntu-"
"quality IRC channel <qualityirc_>`_: розробники звичайно Вам допоможуть."

#: ../ubuntu-packaging-guide/backports.rst:3
msgid "Backporting software updates"
msgstr "Бекпортування оновлень проґрам"

#: ../ubuntu-packaging-guide/backports.rst:5
msgid ""
"Sometimes you might want to make new functionality available in a stable "
"release which is not connected to a critical bug fix. For these scenarios "
"you have two options: either you `upload to a PPA <ppadoc_>`_ or prepare a "
"backport."
msgstr ""
"Буває може знадобитися додати функційності у стабільный реліз, який не "
"пов’язаний з виправленням критичних проблем. У подібних випадках, є два "
"варіянти: або Ви `завантажите його в PPA <ppadoc_>`_, або підготуєте бекпорт "
"(backport)."

#: ../ubuntu-packaging-guide/backports.rst:12
msgid "Personal Package Archive (PPA)"
msgstr "Персональні архіви пакунків (PPA)"

#: ../ubuntu-packaging-guide/backports.rst:14
msgid ""
"Using a PPA has a number of benefits. It is fairly straight-forward, you "
"don't need approval of anyone, but the downside of it is that your users "
"will have to manually enable it. It is a non-standard software source."
msgstr ""
"Використання PPA має ряд переваг. Це достатньо просто, Вам не знадобиться "
"схвалення від кого б то не було, але недолік у тому, що користувачам "
"доведеться вручну під’єднувати PPA. Це нестандартне джерело застосунків."

#: ../ubuntu-packaging-guide/backports.rst:18
msgid ""
"The `PPA documentation on Launchpad <ppadoc_>`_ is fairly comprehensive and "
"should get you up and running in no time."
msgstr ""
"`Документація до PPA на Launchpad <ppadoc_>`_ має достатньо всеосяжний "
"характер й допоможе Вам швидко почати роботу з ним."

#: ../ubuntu-packaging-guide/backports.rst:25
msgid "Official Ubuntu Backports"
msgstr "Офіційні бекпорти Ubuntu"

#: ../ubuntu-packaging-guide/backports.rst:27
msgid ""
"The Backports Project is a means to provide new features to users. Because "
"of the inherent stability risks in backporting packages, users do not get "
"backported packages without some explicit action on their part. This "
"generally makes backports an inappropriate avenue for fixing bugs. If a "
"package in an Ubuntu release has a bug, it should be fixed either through "
"the :doc:`Security Update or the Stable Release Update process<./security-"
"and-stable-release-updates>`, as appropriate."
msgstr ""
"Метою проєкту Backports є надання користувачам нової функційності. З-за "
"ризиків зменшення стабільності при портуванні новинок, бекпорти недоступні "
"користувачам, поки вони не задіють їх. Тому бекпорти не є місцем для "
"виправлення помилок. Якщо у пакунку Ubuntu виявлена помилка, вона повинна "
"бути виправлена через :doc:`оновлення безпеки та стабільності<./security-and-"
"stable-release-updates>`."

#: ../ubuntu-packaging-guide/backports.rst:35
msgid ""
"Once you determined you want a package to be backported to a stable release, "
"you will need to test-build and test it on the given stable release. "
"``pbuilder-dist`` (in the ``ubuntu-dev-tools`` package) is a very handy tool "
"to do this easily."
msgstr ""
"Коли Ви визначите, чи потрібно Вам адаптувати Ваші зміни для стабільного "
"релізу, Вам буде необхідно зібрати та протестувати Ваш пакунок на даному "
"релізі. Команда ``pbuilder-dist`` (з пакунку ``ubuntu-dev-tools``) допоможе "
"Вам зробити це."

#: ../ubuntu-packaging-guide/backports.rst:40
msgid ""
"To report the backport request and get it processed by the Backporters team, "
"you can use the ``requestbackport`` tool (also in the ``ubuntu-dev-tools`` "
"package). It will determine the intermediate releases that package needs to "
"be backported to, list all reverse-dependencies, and file the backporting "
"request.  Also will it include a testing checklist in the bug."
msgstr ""
"Щоб подати заявку на бекпорт, можна використовувати засіб "
"``requestbackport`` (також з пакунку ``ubuntu-dev-tools``). Він визначить "
"усі проміжні випуски, для яких пакунок також доведеться бекпортувати, "
"покаже, які пакунки залежать від даного, й створить заявку. Він також "
"включить перелік потрібних тестів у заявку."

#: ../ubuntu-packaging-guide/chroots.rst:3
msgid "Using Chroots"
msgstr "Використання chroot-оточень"

#: ../ubuntu-packaging-guide/chroots.rst:5
msgid ""
"If you are running one version of Ubuntu but working on packages for another "
"versions you can create the environment of the other version with a "
"``chroot``."
msgstr ""
"Якщо Ви користуєтеся однією з версій Ubuntu, але працюєте над пакунками для "
"іншої версії, Ви можете створити середовище іншої версії за допомогою "
"``chroot``."

#: ../ubuntu-packaging-guide/chroots.rst:9
msgid ""
"A ``chroot`` allows you to have a full filesystem from another distribution "
"which you can work in quite normally.  It avoids the overhead of running a "
"full virtual machine."
msgstr ""
"Використання ``chroot`` дозволить Вам мати у розпорядженні повну файлову "
"систему іншого дистрибутиву для зручності роботи. Це дозволяє уникнути "
"затрат, пов’язаних з встановленням віртуальної машини."

#: ../ubuntu-packaging-guide/chroots.rst:14
msgid "Creating a Chroot"
msgstr "Створення chroot"

#: ../ubuntu-packaging-guide/chroots.rst:16
msgid "Use the command ``debootstrap`` to create a new chroot::"
msgstr "Використовуйте команду ``debootstrap``, щоб створити новий chroot::"

#: ../ubuntu-packaging-guide/chroots.rst:20
msgid ""
"This will create a directory ``trusty`` and install a minimal trusty system "
"into it."
msgstr ""
"Це створить теку ``trusty`` і встановить мінімальний образ trusty у неї."

#: ../ubuntu-packaging-guide/chroots.rst:23
msgid ""
"If your version of ``debootstrap`` does not know about Trusty you can try "
"upgrading to the version in ``backports``."
msgstr ""
"Якщо Ваша версія ``debootstrap`` не визначить Trusty, спробуйте оновитися до "
"версії в ``backports``."

#: ../ubuntu-packaging-guide/chroots.rst:26
msgid "You can then work inside the chroot::"
msgstr "Після цього Ви можете працювати всередині chroot::"

#: ../ubuntu-packaging-guide/chroots.rst:30
msgid ""
"Where you can install or remove any package you wish without affecting your "
"main system."
msgstr ""
"Де можна встановити або вилучити будь-який пакунок, який Ви бажаєте, без "
"шкоди для основної системи."

#: ../ubuntu-packaging-guide/chroots.rst:33
msgid ""
"You might want to copy your GPG/ssh keys and Bazaar configuration into the "
"chroot so you can access and sign packages directly::"
msgstr ""
"Ви можете скопіювати свої ключі GPG і SSH, а також конфігурацію Bazaar в "
"chroot, щоб отримувати доступ й підписувати пакунки безпосередньо звідти::"

#: ../ubuntu-packaging-guide/chroots.rst:39
msgid ""
"To stop apt and other programs complaining about missing locales you can "
"install your relevant language pack::"
msgstr ""
"Щоб apt й інші проґрами не скаржилися на відсутні локалі, можна встановити "
"відповідний мовний пакунок::"

#: ../ubuntu-packaging-guide/chroots.rst:44
msgid ""
"If you want to run X programs you will need to bind the /tmp directory into "
"the chroot, from outside the chroot run::"
msgstr ""
"Якщо Вам потрібно запускати проґрами, що використовують X-сервер, Вам "
"потрібно додати в chroot директорію /tmp, для цього ззовні chroot запустіть::"

#: ../ubuntu-packaging-guide/chroots.rst:50
msgid "Some programs may need you to bind /dev or /proc."
msgstr "Для деяких проґрам, можливо, знадобиться прив’язати /dev або /proc."

#: ../ubuntu-packaging-guide/chroots.rst:52
msgid ""
"For more information on chroots see our `Debootstrap Chroot wiki page "
"<DebootstrapChroot_>`_."
msgstr ""
"На сторінці `Debootstrap Chroot вікі <DebootstrapChroot_>`_ Ви знайдете "
"детальнішу інформацію про chroot-оточення."

#: ../ubuntu-packaging-guide/chroots.rst:55
msgid "Alternatives"
msgstr "Альтернативи"

#: ../ubuntu-packaging-guide/chroots.rst:57
msgid ""
"SBuild is a system similar to PBuilder for creating an environment to run "
"test package builds in.  It closer matches that used by Launchpad for "
"building packages but takes some more setup compared to PBuilder.  See `the "
"Security Team Build Environment wiki page <SecurityEnv_>`_ for a full "
"explanation."
msgstr ""
"SBuild -- система, схожа на PBuilder, що використовується для створення "
"оточення, у якому виконуються тестові збірки пакунку. Вона близька до тієї, "
"яку використовує Launchpad для збірки пакунків, але її встановлення дещо "
"складніше, ніж PBuilder. Повнішу інформацію можна знайти на вікісторінці "
"`Система Збірки Security Team <SecurityEnv_>`_."

#: ../ubuntu-packaging-guide/chroots.rst:62
msgid ""
"Full virtual machines can be useful for packaging and testing programs.  "
"TestDrive is a program to automate syncing and running daily ISO images, see "
"`the TestDrive wiki page <TestDrive_>`_ for more information."
msgstr ""
"Повні віртуальні машини можуть бути корисні для створення пакунків й "
"тестування проґрам. TestDrive — це проґрама, яка дозволяє автоматизувати "
"синхронізацію і запуск щоденних ISO-образів. Детальніше дивіться `wiki-"
"сторінку TestDrive <TestDrive_>`_."

#: ../ubuntu-packaging-guide/chroots.rst:66
msgid ""
"You can also set up pbuilder to pause when it comes across a build failure.  "
"Copy C10shell from /usr/share/doc/pbuilder/examples into a directory and use "
"the ``--hookdir=`` argument to point to it."
msgstr ""
"Можна також налаштувати pbuilder так, щоб він призупинявся при виявленні "
"помилки збірки. Скопіюйте C10shell з /usr/share/doc/pbuilder/examples у "
"каталог й використовуйте аргумент ``--hookdir=``, щоб вказати на нього."

#: ../ubuntu-packaging-guide/chroots.rst:70
msgid ""
"Amazon's `EC2 cloud computers <EC2_>`_ allow you to hire a computer paying a "
"few US cents per hour, you can set up Ubuntu machines of any supported "
"version and package on those.  This is useful when you want to compile many "
"packages at the same time or to overcome bandwidth restraints."
msgstr ""
"Хмарний сервіс `Amazon EC2 <EC2_>`_ дозволить Вам придбати комп’ютер у "
"хмарі, ціна за який -- усього декілька центів на годину. Там Ви можете "
"встановити Ubuntu будь-якої підтримуваної версії і працювати з пакунками "
"віддалено, що дуже зручно, якщо потрібна збірка багатьох пакунків одночасно, "
"або якщо потрібно подолати повільну швидкість Інтернет-під’єднання."

#: ../ubuntu-packaging-guide/communication.rst:3
msgid "Communication in Ubuntu Development"
msgstr "Комунікація при Розробці в Ubuntu"

#: ../ubuntu-packaging-guide/communication.rst:5
msgid ""
"In a project where thousands of lines of code are changed, lots of decisions "
"are made and hundreds of people interact every day, it is important to "
"communicate effectively."
msgstr ""
"В проєкті, де піддаються змінам тисячі рядків коду, приймається багато "
"рішень, й де сотні людей повинні взаємодіяти кожен день, важливо мати "
"ефективний зв’язок."

#: ../ubuntu-packaging-guide/communication.rst:10
msgid "Mailing lists"
msgstr "Поштові розсилки"

#: ../ubuntu-packaging-guide/communication.rst:12
msgid ""
"Mailing lists are a very important tool if you want to communicate ideas to "
"a broader team and make sure that you reach everybody, even across timezones."
msgstr ""
"Поштові розсилки— це достатньо ефективний інструмент, якщо Ви бажаєте "
"обміркувати ідеї в команді та переконатися що Ви сповістили усіх, не "
"дивлячись на відмінності у часових поясах."

#: ../ubuntu-packaging-guide/communication.rst:16
msgid "In terms of development, these are the most important ones:"
msgstr "З точки зору розробки, це найважиливіші з розсилок:"

#: ../ubuntu-packaging-guide/communication.rst:18
msgid ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel-announce (announce-"
"only, the most important development announcements go here)"
msgstr ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel-announce (лише "
"анонси, найважливіші об’яви розробки потрапляють сюди)"

#: ../ubuntu-packaging-guide/communication.rst:20
msgid ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel (general Ubuntu "
"development discussion)"
msgstr ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel (головна дискусія "
"розробників Ubuntu )"

#: ../ubuntu-packaging-guide/communication.rst:22
msgid ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-motu (MOTU Team discussion, "
"get help with packaging)"
msgstr ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-motu (обговорення команди "
"MOTU, отримання довідки зі створення пакунків)"

#: ../ubuntu-packaging-guide/communication.rst:27
msgid "IRC Channels"
msgstr "Канали IRC"

#: ../ubuntu-packaging-guide/communication.rst:29
msgid ""
"For real-time discussions, please connect to irc.freenode.net and join one "
"or any of these channels:"
msgstr ""
"Для дискусії у мережі під’єднайтеся до irc.freenode.net і приєднайтеся до "
"будь-якого з каналів:"

#: ../ubuntu-packaging-guide/communication.rst:32
msgid "#ubuntu-devel (for general development discussion)"
msgstr "#ubuntu-devel (для головної дискусії розробників)"

#: ../ubuntu-packaging-guide/communication.rst:33
msgid "#ubuntu-motu (for MOTU team discussion and generally getting help)"
msgstr "#ubuntu-motu (для обговорень команди MOTU та отримання допомоги)"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:2
msgid "Basic Overview of the ``debian/`` Directory"
msgstr "Загальний огляд каталогу ``debian/``"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:4
msgid ""
"This article will briefly explain the different files important to the "
"packaging of Ubuntu packages which are contained in the ``debian/`` "
"directory. The most important of them are ``changelog``, ``control``, "
"``copyright``, and ``rules``. These are required for all packages. A number "
"of additional files in the ``debian/`` may be used in order to customize and "
"configure the behavior of the package. Some of these files are discussed in "
"this article, but this is not meant to be a complete list."
msgstr ""
"Ця стаття дає короткі пояснення до різних файлів, важливих для створення "
"пакунків Ubuntu, які містяться у каталозі ``debian/``. Найважливішими з них "
"є ``changelog``, ``control``, ``copyright``, і ``rules``. Вони потрібні для "
"усіх пакунків. Багато додаткових файлів у ``debian/`` можуть "
"використовуватися для налаштування та зміни поведінки пакунку. Деякі з цих "
"файлів обговорюються у цій статті, але це далеко не повний перелік."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:13
msgid "The changelog"
msgstr "Файл changelog"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:15
msgid ""
"This file is, as its name implies, a listing of the changes made in each "
"version. It has a specific format that gives the package name, version, "
"distribution, changes, and who made the changes at a given time. If you have "
"a GPG key (see: :doc:`Getting set up<./getting-set-up/>`), make sure to use "
"the same name and email address in ``changelog`` as you have in your key. "
"The following is a template ``changelog``::"
msgstr ""
"Цей файл, як видко з його назви — це перелік змін, внесених у кожну версію. "
"Він має особливий формат, який показує ім’я пакунку, версію, дистрибутив, "
"зміни, й хто вносив зміни в даний час. Якщо в Вас є ключ GPG (дивіться: "
":doc:`Підготовка<./getting-set-up/>`), переконайтеся, що Ви використовуєте в "
"``changelog`` ті ж ім’я та адресу електронної пошти, що й в Вашому ключі. "
"Нижче наведено шаблон ``changelog``::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:31
msgid ""
"The format (especially of the date) is important. The date should be in "
":rfc:`5322` format, which can be obtained by using the command ``date -R``. "
"For convenience, the command ``dch`` may be used to edit changelog. It will "
"update the date automatically."
msgstr ""
"Формат (особливо дати) важливий. Дата повинна бути у форматі :rfc:`5322`, "
"який можна побачити при виконанні команди ``date -R``. Для зручності, можна "
"використовувати для редагування changelog команду ``dch``. Вона оновить дату "
"автоматично."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:36
msgid ""
"Minor bullet points are indicated by a dash \"-\", while major points use an "
"asterisk \"*\"."
msgstr ""
"Пункти з незначними змінами позначаються тире «-», у той час як у важливих "
"пунктах використовується зірочка «*»."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:39
msgid ""
"If you are packaging from scratch, ``dch --create`` (``dch`` is in the "
"``devscripts`` package) will create a standard ``debian/changelog`` for you."
msgstr ""
"Якщо Ви створюєте пакунок «з нуля», ``dch --create`` (``dch`` знаходиться у "
"пакунку ``devscripts``) створить для Вас стандартний файл "
"``debian/changelog``."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:43
msgid "Here is a sample ``changelog`` file for hello::"
msgstr "Ось приклад файлу ``changelog`` для hello::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:52
msgid ""
"Notice that the version has a ``-0ubuntu1`` appended to it, this is the "
"distro revision, used so that the packaging can be updated (to fix bugs for "
"example) with new uploads within the same source release version."
msgstr ""
"Зверніть увагу, що версія має ``-0ubuntu1`` доданий до нього, це - distro "
"версія, яка використовується так, щоб упаковка могла бути оновлена (щоб "
"виправити помилки, наприклад) з новими завантаженнями у тій же джерельній "
"версії випуску."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:56
msgid ""
"Ubuntu and Debian have slightly different package versioning schemes to "
"avoid conflicting packages with the same source version. If a Debian package "
"has been changed in Ubuntu, it has ``ubuntuX`` (where ``X`` is the Ubuntu "
"revision number) appended to the end of the Debian version. So if the Debian "
"hello ``2.6-1`` package was changed by Ubuntu, the version string would be "
"``2.6-1ubuntu1``. If a package for the application does not exist in Debian, "
"then the Debian revision is ``0`` (e.g. ``2.6-0ubuntu1``)."
msgstr ""
"Ubuntu і Debian використовують схеми нумерації версій пакунків, що трохи "
"різняться, щоб уникнути конфлікту пакунків з однією й тою самою початковою "
"версією. Якщо пакунок Debian був змінений в Ubuntu, до кінця Debian-версії "
"додається ``ubuntuX`` (де ``X`` — номер редакції в Ubuntu). Таким чином, "
"якщо пакунок Debian hello ``2.6-1`` був змінений в Ubuntu, номер версії буде "
"``2.6-1ubuntu1``. Якщо пакунок додатку в Debian не існує, то редакція Debian "
"дорівнює ``0`` (наприклад, ``2.6-0ubuntu1``)."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:64
msgid ""
"For further information, see the `changelog section (Section 4.4) <policy-"
"changelog_>`_ of the Debian Policy Manual."
msgstr ""
"Детальнішу інформацію можна знайти на сторінці `changelog (Розділ 4.4) "
"<policy-changelog_>`_ документу Debian Policy Manual."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:69
msgid "The control file"
msgstr "Файл control"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:71
msgid ""
"The ``control`` file contains the information that the package manager (such "
"as ``apt-get``, ``synaptic``, and ``adept``) uses, build-time dependencies, "
"maintainer information, and much more."
msgstr ""
"Файл ``control`` містить інформацію, яку використовує менеджер пакунків "
"(такий, як ``apt-get``, ``synaptic`` або ``adept``), збірочні залежності, "
"інформацію мейнтейнера і багато іншого."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:75
msgid ""
"For the Ubuntu ``hello`` package, the ``control`` file looks something like "
"this:"
msgstr "Для пакунку Ubuntu ``hello`` файл ``control`` виглядає таким чином:"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:100
msgid ""
"The first paragraph describes the source package including the list of "
"packages required to build the package from source in the ``Build-Depends`` "
"field. It also contains some meta-information such as the maintainer's name, "
"the version of Debian Policy that the package complies with, the location of "
"the packaging version control repository, and the upstream home page."
msgstr ""
"Перший абзац дає опис джерельного пакунку, включаючи перелік пакунків, що "
"потрібні для збірки даного пакунку з джерельного коду, у полі ``Build-"
"Depends``. Він також містить деяку метаінформацію, таку як ім’я мейнтейнера, "
"версію Debian Policy, з якою компілюється пакунок, місцерозташування "
"репозиторію керування версіями та домашню сторінку апстріму."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:107
msgid ""
"Note that in Ubuntu, we set the ``Maintainer`` field to a general address "
"because anyone can change any package (this differs from Debian where "
"changing packages is usually restricted to an individual or a team). "
"Packages in Ubuntu should generally have the ``Maintainer`` field set to "
"``Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>``. If the "
"Maintainer field is modified, the old value should be saved in the ``XSBC-"
"Original-Maintainer`` field. This can be done automatically with the  "
"``update-maintainer`` script available in the ``ubuntu-dev-tools`` package. "
"For further information, see the `Debian Maintainer Field spec "
"<MaintField_>`_ on the Ubuntu wiki."
msgstr ""
"Зауважте, що в Ubuntu ми вказуємо у полі ``Maintainer`` загальну адресу, "
"оскільки будь-яка людина може змінити будь-який пакунок (на відміну від "
"Debian, де правом змінювання пакунків володіють лиши окремі люди або "
"команда). Пакунки в Ubuntu, як правило, повинні у полі ``Maintainer`` "
"містити ``Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>``. Якщо "
"поле Maintainer змінено, старе значення повинне бути збережене у полі ``XSBC-"
"Original-Maintainer``. Це можна зробити автоматично сценарієм ``update-"
"maintainer`` з пакунку ``ubuntu-dev-tools``. Для подальшої інформації "
"дивіться `Debian Maintainer Field spec <MaintField_>`_ в Ubuntu wiki."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:118
msgid "Each additional paragraph describes a binary package to be built."
msgstr ""
"Кожен додатковий абзац дає опис бінарного пакунку, який буде створений."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:120
msgid ""
"For further information, see the `control file section (Chapter 5) <policy-"
"control_>`_ of the Debian Policy Manual."
msgstr ""
"Детальнішу інформацію можна знайти на сторінці `секції control-файлу (Розділ "
"5) <policy-control_>`_ документу Debian Policy Manual."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:125
msgid "The copyright file"
msgstr "Файл copyright"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:127
msgid ""
"This file gives the copyright information for both the upstream source and "
"the packaging. Ubuntu and `Debian Policy (Section 12.5) <policy-"
"copyright_>`_ require that each package installs a verbatim copy of its "
"copyright and license information to "
"``/usr/share/doc/$(package_name)/copyright``."
msgstr ""
"Файл містить інформацію про копірайти джерельних кодів і самого пакунку. "
"Ubuntu і `Debian Policy (Розділ 12.5) <policy-copyright_>`_ потребують, щоб "
"кожен пакунок встановлював незмінну копію копірайту та інформації з "
"ліцензування у теку ``/usr/share/doc/$(ім’я_пакунку)/copyright``"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:132
msgid ""
"Generally, copyright information is found in the ``COPYING`` file in the "
"program's source directory. This file should include such information as the "
"names of the author and the packager, the URL from which the source came, a "
"Copyright line with the year and copyright holder, and the text of the "
"copyright itself. An example template would be::"
msgstr ""
"Як правило, інформацію про авторскькі права можна знайти у файлі ``COPYING`` "
"в каталозі з джерельним кодом проґрами. Цей файл повинен включати таку "
"інформацію, як імена автора та пакувальника, URL, з якої отримано джерело, "
"рядок зі значком копірайту з вказівкою року і власника авторських прав, а "
"також сам текст авторського права. Шаблон для прикладу::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:174
msgid ""
"This example follows the `Machine-readable debian/copyright <DEP5_>`_ "
"format. You are encouraged to use this format as well."
msgstr ""
"Приклад використовує `машино-зрозумілий формат debian/copyright <DEP5_>`_, й "
"авторам пакунків також рекомендується використовувати цей формат."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:179
msgid "The rules file"
msgstr "Файл rules"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:181
msgid ""
"The last file we need to look at is ``rules``. This does all the work for "
"creating our package. It is a Makefile with targets to compile and install "
"the application, then create the ``.deb`` file from the installed files. It "
"also has a target to clean up all the build files so you end up with just a "
"source package again."
msgstr ""
"Останній файл, який ми розглянемо, це ``rules``. Він виконує усю роботу по "
"збірці нашого пакунку. Це Makefile, у якому є функції компілювання проґрами, "
"її встановлення та створення ``.deb``-пакунку з встановлених файлів. У ньому "
"є також функція очистки файлів збірки, яка вилучає усе, крім власне пакунку "
"джерельного коду."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:189
msgid ""
"Here is a simplified version of the rules file created by ``dh_make`` (which "
"can be found in the ``dh-make`` package):"
msgstr ""
"Ось спрощений приклад файлу rules, створеного ``dh_make`` (який можна знайти "
"у пакунку ``dh-make``):"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:203
msgid ""
"Let us go through this file in some detail. What this does is pass every "
"build target that ``debian/rules`` is called with as an argument to "
"``/usr/bin/dh``, which itself will call all the necessary ``dh_*`` commands."
msgstr ""
"Давайте розглянемо цей файл уважніше. На кожному етапі збірки "
"``debian/rules`` викликається з аргументом, який передається "
"``/usr/bin/dh``, який, у свою чергу, викликає необхідні команди ``dh_*``."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:207
msgid ""
"``dh`` runs a sequence of debhelper commands. The supported sequences "
"correspond to the targets of a ``debian/rules`` file: \"build\", \"clean\", "
"\"install\", \"binary-arch\", \"binary-indep\", and \"binary\". In order to "
"see what commands are run in each target, run::"
msgstr ""
"``dh`` запускає послідовність команд debhelper. Підтримувані послідовності "
"відповідають призначенням файлу ``debian/rules``: «build», «clean», "
"«install», «binary-arch», «binary-indep» і «binary». Щоб побачити, які "
"команди виконуються у кожному призначенні, наберіть::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:216
msgid ""
"Commands in the binary-indep sequence are passed the \"-i\" option to ensure "
"they only work on binary independent packages, and commands in the binary-"
"arch sequences are passed the \"-a\" option to ensure they only work on "
"architecture dependent packages."
msgstr ""
"Командам з послідовності ``binary-indep`` передається аргумент ``-i``, щоб "
"вони зачепали лише архітектурно-незалежні пакунки, а командам з "
"послідовності ``binary-arch`` — аргумент ``-a``, щоб вони зачепали лише "
"архітектурно-залежні пакунки."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:221
msgid ""
"Each debhelper command will record when it's successfully run in "
"``debian/package.debhelper.log``. (Which dh_clean deletes.) So dh can tell "
"which commands have already been run, for which packages, and skip running "
"those commands again."
msgstr ""
"Кожна команда debhelper при її успішному виконанні робить запис у журналі "
"``debian/package.debhelper.log`` (який потім вилучає dh_clean.) Таким чином "
"dh може визначити, які команди вже були виконані й для яких пакунків, що "
"допомогає уникнути повторного виконання цих команд."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:226
msgid ""
"Each time ``dh`` is run, it examines the log, and finds the last logged "
"command that is in the specified sequence. It then continues with the next "
"command in the sequence. The ``--until``, ``--before``, ``--after``, and ``--"
"remaining`` options can override this behavior."
msgstr ""
"При кожному запуску ``dh`` він вивчає журнал, знаходить додані останніми "
"команди, які відносяться до вказаної послідовності. Потім він продовжує "
"виконання з наступної команди у цій послідовності. Опції ``--until``, ``--"
"before``, ``--after`` і ``--remaining`` можуть змінити цю поведінку."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:231
msgid ""
"If ``debian/rules`` contains a target with a name like "
"``override_dh_command``, then when it gets to that command in the sequence, "
"``dh`` will run that target from the rules file, rather than running the "
"actual command. The override target can then run the command with additional "
"options, or run entirely different commands instead. (Note that to use this "
"feature, you should Build-Depend on debhelper 7.0.50 or above.)"
msgstr ""
"Якщо в ``debian/rules`` є функція з іменем, схожим на "
"``override_dh_команда``, то замість даної команди ``dh`` виконає дану "
"функцію. Ця функція може запустити ту ж команду з іншими аргументами, або ж "
"геть іншу команду. (Зауваження: для використання цієї функційності при "
"збірці потрібен пакунок debhelper версії не менше 7.0.50)."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:240
msgid ""
"Have a look at ``/usr/share/doc/debhelper/examples/`` and ``man dh`` for "
"more examples. Also see `the rules section (Section 4.9) "
"<http://www.debian.org/doc/debian-policy/ch-source.html#s-debianrules>`_ of "
"the Debian Policy Manual."
msgstr ""
"За додатковими прикладами зверніться до "
"``/usr/share/doc/debhelper/examples/`` і ``man dh``. Дивіться також `розділ "
"про файл rules (Розділ 4.9) <http://www.debian.org/doc/debian-policy/ch-"
"source.html#s-debianrules>`_ в «Debian Policy Manual»."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:246
msgid "Additional Files"
msgstr "Додаткові файли"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:249
msgid "The install file"
msgstr "Файл install"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:251
msgid ""
"The ``install`` file is used by ``dh_install`` to install files into the "
"binary package. It has two standard use cases:"
msgstr ""
"Файл ``install`` використовується ``dh_install`` для встановлення файлів у "
"двійковий пакунок. Він має два стандартних варіянти використання:"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:254
msgid ""
"To install files into your package that are not handled by the upstream "
"build system."
msgstr ""
"Для встановлення у Ваш пакунок файлів, не встановлених оригінальною системою "
"збірки."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:255
msgid ""
"Splitting a single large source package into multiple binary packages."
msgstr ""
"Розділення одного великого пакунку джерела на декілька бінарних пакунків."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:257
msgid ""
"In the first case, the ``install`` file should have one line per file "
"installed, specifying both the file and the installation directory. For "
"example, the following ``install`` file would install the script ``foo`` in "
"the source package's root directory to ``usr/bin`` and a desktop file in the "
"``debian`` directory to ``usr/share/applications``::"
msgstr ""
"У першому випадку файл ``install`` повинен містити один рядок для кожного "
"встановлюваного файлу, що вказує як файл, так і встановлювальний каталог. "
"Наприклад, наступний файл ``install`` встановить сценарій ``foo`` з "
"кореневого каталогу пакунку джерельного коду в ``usr/bin`` і desktop-файл з "
"каталогу ``debian`` в ``usr/share/applications``::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:268
msgid ""
"When a source package is producing multiple binary packages ``dh`` will "
"install the files into ``debian/tmp`` rather than directly into "
"``debian/<package>``. Files installed into ``debian/tmp`` can then be moved "
"into separate binary packages using multiple ``$package_name.install`` "
"files. This is often done to split large amounts of architecture independent "
"data out of architecture dependent packages and into ``Architecture: all`` "
"packages. In this case, only the name of the files (or directories) to be "
"installed are needed without the installation directory. For example, "
"``foo.install`` containing only the architecture dependent files might look "
"like::"
msgstr ""
"Якщо пакунок джерельного коду продукує декілька двійкових пакунків, ``dh`` "
"встановить файли в ``debian/tmp`` замість встановлення безпосередньо в "
"``debian/<пакунок>``. Файли, встановлені в ``debian/tmp`` потім можна "
"перемістити у окремі двійкові пакунки за допомогою декількох файлів "
"``$ім’я_пакунку.install``. Це часто робиться, щоб розбити велику кількість "
"незалежних від архітектури даних з залежних від архітектури пакунків у "
"пакунки ``Architecture: all``. У цьому випадку потрібно вказати лише імена "
"встановлюваних файлів (або каталогів), без встановлювального каталогу. "
"Наприклад, ``foo.install``, що містить лише залежні від архітектури файли, "
"може виглядати наподобі::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:281
msgid ""
"While ``foo-common.install`` containing only the architecture independent "
"file might look like::"
msgstr ""
"У той час як ``foo-common.install``, що містить лише не залежні від "
"архітектури файли, може виглядати так::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:289
msgid ""
"This would create two binary packages, ``foo`` and ``foo-common``. Both "
"would require their own paragraph in ``debian/control``."
msgstr ""
"Будуть створені два двійкові пакунки: ``foo`` і ``foo-common``. Для обох "
"потрібен їх власний абзац в ``debian/control``."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:292
msgid ""
"See ``man dh_install`` and the `install file section (Section 5.11) "
"<http://www.debian.org/doc/manuals/maint-guide/dother.en.html#install>`_  of "
"the Debian New Maintainers' Guide for additional details."
msgstr ""
"Для додаткових подробиць дивіться ``man dh_install`` і `розділ про файл "
"install (Розділ 5.11) <http://www.debian.org/doc/manuals/maint-"
"guide/dother.en.html#install>`_ в «Debian New Maintainers' Guide»."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:297
msgid "The watch file"
msgstr "Файл watch"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:299
msgid ""
"The ``debian/watch`` file allows us to check automatically for new upstream "
"versions using the tool ``uscan`` found in the ``devscripts`` package. The "
"first line of the watch file must be the format version (3, at the time of "
"this writing), while the following lines contain any URLs to parse. For "
"example::"
msgstr ""
"Файл ``debian/watch`` дозволяє автоматично перевіряти наявність нових версій "
"в апстрімі за допомогою інструменту ``uscan`` з пакунку ``devscripts``. "
"Першим рядком файлу watch повинна бути версія формату (3 на мить написання "
"цього посібника), а наступні рядки містять будь-які URL для аналізу. "
"Наприклад::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:308
msgid ""
"Running ``uscan`` in the root source directory will now compare the upstream "
"version number in ``debian/changelog`` with the latest available upstream "
"version. If a new upstream version is found, it will be automatically "
"downloaded. For example::"
msgstr ""
"Запуск ``uscan`` у кореневому каталозі джерельних кодів порівняє номер "
"апстрім-версії у ``debian/changelog`` з останньою доступною в апстрімі "
"версією. Якщо в апстрімі знайдена нова версія, вона буде автоматично "
"завантажена. Наприклад::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:321
msgid ""
"If your tarballs live on Launchpad, the ``debian/watch`` file is a little "
"more complicated (see `Question 21146 <Q21146_>`_ and `Bug 231797 "
"<Bug231797_>`_ for why this is).  In that case, use something like::"
msgstr ""
"Якщо Ваші tarball-файли перебувають на Launchpad, файл ``debian/watch`` має "
"трохи складніший вигляд (про те, чому це так, дивіться `Question 21146 "
"<Q21146_>`_ і `Bug 231797 <Bug231797_>`_). У цьому випадку використовуйте "
"щось типу::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:328
msgid ""
"For further information, see ``man uscan`` and the `watch file section "
"(Section 4.11) <http://www.debian.org/doc/debian-policy/ch-source.html#s-"
"debianwatch>`_ of the Debian Policy Manual."
msgstr ""
"Додаткові відомості дивіться в ``man uscan`` і у `розділі про файл watch "
"(Розділ 4.11) <http://www.debian.org/doc/debian-policy/ch-source.html#s-"
"debianwatch>`_ «Debian Policy Manual»."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:332
msgid ""
"For a list of packages where the ``watch`` file reports they are not in sync "
"with upstream see `Ubuntu External Health Status "
"<http://qa.ubuntuwire.org/uehs/no_updated.html>`_."
msgstr ""
"Перелік пакунків, для яких файл ``watch`` повідомляє про те, що вони не "
"синхронізовані з апстрімом, дивіться `Ubuntu External Health Status "
"<http://qa.ubuntuwire.org/uehs/no_updated.html>`_."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:337
msgid "The source/format file"
msgstr "Файл source/format"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:339
msgid ""
"This file indicates the format of the source package. It should contain a "
"single line indicating the desired format:"
msgstr ""
"Цей файл вказує формат пакунку джерельного коду. Він повинен містити один "
"рядок, що показує вибраний формат:"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:342
msgid "``3.0 (native)`` for Debian native packages (no upstream version)"
msgstr ""
"``3.0 (native)`` для «рідних» пакунків Debian (апстрім-версія відсутня)"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:344
msgid "``3.0 (quilt)`` for packages with a separate upstream tarball"
msgstr "``3.0 (quilt)`` для пакунків з окремим тарболом з апстріму"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:346
msgid "``1.0`` for packages wishing to explicitly declare the default format"
msgstr "``1.0`` для пакунків, бажаючих явно вказати типовий формат"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:348
msgid ""
"Currently, the package source format will default to 1.0 if this file does "
"not exist. You can make this explicit in the source/format file. If you "
"choose not to use this file to define the source format, Lintian will warn "
"about the missing file. This warning is informational only and may be safely "
"ignored."
msgstr ""
"На цей час обирається типовий формат пакунку джерельного коду 1.0, якщо цей "
"файл відсутній. У файлі source/format можна вказати його явно. Якщо Ви не "
"використовуєте цей файл для вказування формату джерельного коду, Lintian "
"видасть попередження про відсутність файлу. Це чисто інформаційне "
"попередження і його можна без побоювань знехтувати."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:353
msgid ""
"You are encouraged to use the newer 3.0 source format. It provides a number "
"of new features:"
msgstr ""
"Рекомендується використовувати більш новий формат 3.0. Він надає деякі нові "
"можливості:"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:356
msgid "Support for additional compression formats: bzip2, lzma and xz"
msgstr "Підтримка додаткових форматів стиснення: bzip2, lzma і xz"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:358
msgid "Support for multiple upstream tarballs"
msgstr "Підтримка декількох архівів з оригінальним джерельним кодом"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:360
msgid ""
"Not necessary to repack the upstream tarball to strip the debian directory"
msgstr ""
"Необов’язково перепаковувати архів з оригінальним джерельним кодом, щоб "
"вилучити директорію ``debian``."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:362
msgid ""
"Debian-specific changes are no longer stored in a single .diff.gz but in "
"multiple patches compatible with quilt under ``debian/patches/``"
msgstr ""
"Специфічні для Debian зміни тепер зберігаються не в одному файлі .diff.gz, а "
"у вигляді декількох латок, сумісних з quilt, у каталозі ``debian/patches/``"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:365
msgid ""
"https://wiki.debian.org/Projects/DebSrc3.0 summarizes additional information "
"concerning the switch to the 3.0 source package formats."
msgstr ""
"https://wiki.debian.org/Projects/DebSrc3.0 містить додаткову інформацію "
"стосовно переходу на версію 3.0 формату джерельних пакунків."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:368
msgid ""
"See ``man dpkg-source`` and the `source/format section (Section 5.21) "
"<policy-format_>`_  of  the Debian New Maintainers' Guide for additional "
"details."
msgstr ""
"Додаткову інформацію можна знайти в ``man dpkg-source`` і у `Розділі "
"source/format (Розділ 5.21) <policy-format_>`_ посібника Debian New "
"Maintainers."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:372
msgid "Additional Resources"
msgstr "Додаткові ресурси"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:374
msgid ""
"In addition to the links to the Debian Policy Manual in each section above, "
"the Debian New Maintainers' Guide has more detailed descriptions of each "
"file. `Chapter 4, \"Required files under the debian directory\" "
"<RequiredFiles_>`_ further discusses the  control, changelog, copyright and "
"rules files. `Chapter 5, \"Other files under the debian directory\" "
"<OtherFiles_>`_ discusses additional files that may be used."
msgstr ""
"Крім Debian Policy Manual, на який посилається стаття, посібник Debian New "
"Maintainers' Guide містить більш детальний опис для кожного файлу. `Розділ "
"4, \"Необхідні файли у теці debian\" <RequiredFiles_>`_ дає опис файлів "
"control, changelog, copyright і rules. `Розділ 5, \"Інші файли у теці "
"debian\" <OtherFiles_>`_ дає опис додаткових файлів, які можна "
"використовувати."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:3
msgid "Fixing a bug in Ubuntu"
msgstr "Виправлення помилок в Ubuntu"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:6
#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:9
msgid "Introduction"
msgstr "Вступ"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:8
msgid ""
"If you followed the instructions to :doc:`get set up with Ubuntu "
"Development<./getting-set-up>`, you should be all set and ready to go."
msgstr ""
"Якщо Ви дотримувалися інструкцій з :doc:`підготовки до розробки "
"Ubuntu<./getting-set-up>`, усе повинно бути вже готово до роботи."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:13
msgid ""
"As you can see in the image above, there is no surprises in the process of "
"fixing bugs in Ubuntu: you found a problem, you get the code, work on the "
"fix, test it, push your changes to Launchpad and ask for it to be reviewed "
"and merged. In this guide we will go through all the necessary steps one by "
"one."
msgstr ""
"Як Ви можете бачити на картинці вище, у процесі виправлення помилок в Ubuntu "
"немає ніяких несподіванок: Ви знаходите проблему, отримуєте код, виправляєте "
"його, тестуєте, відправляєте на Launchpad й прохаєте, щоб його перевірили та "
"об’єднали з основним кодом. У цьому посібнику ми пройдемо через усі "
"необхідні кроки, один за іншим."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:20
msgid "Finding the problem"
msgstr "Пошук проблеми"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:22
msgid ""
"There are a lot of different ways to find things to work on. It might be a "
"bug report you are encountering yourself (which gives you a good opportunity "
"to test the fix), or a problem you noted elsewhere, maybe in a bug report."
msgstr ""
"Існують різні способи знайти, над чим можна попрацювати. Це може бути "
"помилка, яку Ви виявили самі (що дає Вам відмінну можливість перевірити своє "
"виправлення) або проблема, яку Ви помітили десь ще, наприклад у звіті про "
"ваду."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:26
msgid ""
"Take a look at `the bitesize bugs`_ in Launchpad, and that might give you an "
"idea of something to work on. It might also interest you to look at the bugs "
"`triaged`_ by the Ubuntu One Hundred Papercuts team."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:35
msgid "Figuring out what to fix"
msgstr "З’ясування того, що потрібно виправити"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:37
msgid ""
"If you don't know the source package containing the code that has the "
"problem, but you do know the path to the affected program on your system, "
"you can discover the source package that you'll need to work on."
msgstr ""
"Якщо Ви не знаєте, у якому пакунку джерельного коду міститься помилка, але "
"знаєте шлях до цього застосунку у Вашій системі, то Ви зможете знайти "
"пакунок джерельного коду, над яким потрібно попрацювати."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:41
msgid ""
"Let's say you've found a bug in Bumprace, a racing game. The Bumprace "
"application can be started by running ``/usr/bin/bumprace`` on the command "
"line. To find the binary package containing this application, use this "
"command::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:47
msgid "This would print out::"
msgstr "Команда виведе таку інформацію::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:51
msgid ""
"Note that the part preceding the colon is the binary package name. It's "
"often the case that the source package and binary package will have "
"different names. This is most common when a single source package is used to "
"build multiple different binary packages. To find the source package for a "
"particular binary package, type::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:62
msgid "``apt-cache`` is part of the standard installation of Ubuntu."
msgstr "Команда ``apt-cache`` встановлена в Ubuntu типово."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:65
msgid "Confirming the problem"
msgstr "Підтвердження проблеми"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:67
msgid ""
"Once you have figured out which package the problem is in, it's time to "
"confirm that the problem exists."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:70
msgid ""
"Let's say the package ``bumprace`` does not have a homepage in its package "
"description. As a first step you would check if the problem is not solved "
"already. This is easy to check, either take a look at Software Center or "
"run::"
msgstr ""
"Припустимо, у описі пакунку ``bumprace`` відсутня інформація про його "
"домашню сторінку. У якості першого кроку, слід перевірити, чи не виправлена "
"вже ця помилка. Зробити це просто: подивіться у Центрі додатків або "
"запустіть::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:76
msgid "The output should be similar to this::"
msgstr "Вивід команди повинен бути приблизно таким::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:102
msgid "A counter-example would be ``gedit``, which has a homepage set::"
msgstr ""
"У якості контрприкладу можна привести ``gedit``, де домашня сторінка "
"вказана::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:107
msgid ""
"Sometimes you will find that a particular problem you are looking into is "
"already fixed. To avoid wasting efforts and duplicating work it makes sense "
"to first do some detective work."
msgstr ""
"У деяких випадках Ви можете зіштовхнутися з тим, що проблема, вирішення якої "
"Ви шукаєте, вже кимось усунена. Щоб уникнути даремного витрачення часу й "
"праці, має сенс проробити деяку детективну роботу."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:112
msgid "Research bug situation"
msgstr "Вивчення ситуації з помилкою"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:114
msgid ""
"First we should check if a bug for the problem exists in Ubuntu already. "
"Maybe somebody is working on a fix already, or we can contribute to the "
"solution somehow. For Ubuntu we have a quick look at "
"https://bugs.launchpad.net/ubuntu/+source/bumprace and there is no open bug "
"with our problem there."
msgstr ""
"Спочатку потрібно перевірити, чи не існує вже повідомлення про цю помилку в "
"Ubuntu. Можливо, хтось вже працює над її виправленням, або ми можемо якось "
"внести свій внесок у вирішення цієї проблеми. Для Ubuntu ми поглянемо на "
"https://bugs.launchpad.net/ubuntu/+source/bumprace й побачимо, що відкритого "
"звіту про нашу ваду там немає."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:120
msgid ""
"For Ubuntu the URL ``https://bugs.launchpad.net/ubuntu/+source/<package>`` "
"should always take to the bug page of the source package in question."
msgstr ""
"Для Ubuntu URL ``https://bugs.launchpad.net/ubuntu/+source/<пакунок>`` "
"завжди приводить на сторінку помилок у вказаномум пакунку джерельного коду."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:124
msgid ""
"For Debian, which is the major source for Ubuntu's packages, we have a look "
"at http://bugs.debian.org/src:bumprace and can't find a bug report for our "
"problem either."
msgstr ""
"У Debian, який є основним джерелом пакунків Ubuntu ми поглянемо на "
"http://bugs.debian.org/src:bumprace й також не знайдемо там повідомлення про "
"нашу ваду."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:128
msgid ""
"For Debian the URL ``http://bugs.debian.org/src:<package>`` should always "
"take to the bug page of the source package in question."
msgstr ""
"Для Debian URL ``http://bugs.debian.org/src:<пакет>`` завжди приводить на "
"сторінку помилок у вказаному пакунку джерельного коду."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:131
msgid ""
"The problem we are working on is special as it only concerns the packaging-"
"related bits of ``bumprace``. If it was a problem in the source code it "
"would be helpful to also check the Upstream bug tracker. This is "
"unfortunately often different for every package you have a look at, but if "
"you search the web for it, you should in most cases find it pretty easily."
msgstr ""
"Помилка, над якою ми працюємо, незвичайна у тому сенсі, що вона стосується "
"лише пакункування ``bumprace``. Якби це була вада у джерельному коді, "
"корисно було б також перевірити систему відстеження помилок апстріму. "
"Нажаль, ця процедура часто різниться для кожного окремого пакунку, але "
"завжди можна скористатися пошуком в інтернеті, й у більшості випадків Ви "
"з’ясуєте, що вона виявиться не такою вже й складною."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:138
msgid "Offering help"
msgstr "Пропозиція допомоги"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:140
msgid ""
"If you found an open bug and it is not assigned to somebody and you are in a "
"position to fix it, you should comment on it with your solution. Be sure to "
"include as much information as you can: Under which circumstances does the "
"bug occur? How did you fix the problem? Did you test your solution?"
msgstr ""
"Якщо Ви виявили відкриту ваду, яка ще нікому не призначена, й Ви готові "
"взятися за її усунення, слід написати коментар з Вашим вирішенням. Включіть "
"у нього щонайбільше інформації: При яких обставинах з’являється помилка? Як "
"Ви її виправили? Чи тестували Ви свій спосіб усунення помилки?"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:145
msgid ""
"If no bug report has been filed, you can file a bug for it. What you might "
"want to bear in mind is: Is the issue so small that just asking for somebody "
"to commit it is good enough? Did you manage to only partially fix the issue "
"and you want to at least share your part of it?"
msgstr ""
"Якщо повідомлення про помилку не було зареєстроване, Ви можете його "
"створити. Подумайте над двома речами: Може бути, зміна настільки мала, що "
"достатньо просто попрохати когось застосувати її? Може бути, в Вас вийшло "
"лише частково виправити ваду, й Ви бажаєте поділитися Вашою часткою?"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:150
msgid "It is great if you can offer help and will surely be appreciated."
msgstr ""
"Буде чудово, якщо Ви можете запропонувати свою допомогу, й вона, без "
"сумніву, буде з готовністю прийнята."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:155
msgid "Getting the code"
msgstr "Отримання коду"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:157
msgid ""
"Once you know the source package to work on, you will want to get a copy of "
"the code on your system, so that you can debug it. The ubuntu-dev-tools "
"package has a tool called ``pull-lp-source`` that a developer can use to "
"grab the source code for any package. For example, to grab the source code "
"for the tomboy package in ``xenial``, you can type this::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:165
msgid ""
"If you do not specify a release such as ``xenial``, it will automatically "
"get the package from the development version."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:168
msgid ""
"Once you've got a local clone of the source package, you can investigate the "
"bug, create a fix, generate a debdiff, and attach your debdiff to a bug "
"report for other developers to review. We'll describe specifics in the next "
"sections."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:173
msgid "Work on a fix"
msgstr "Виправлення помилки"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:175
msgid ""
"There are entire books written about finding bugs, fixing them, testing "
"them, etc. If you are completely new to programming, try to fix easy bugs "
"such as obvious typos first. Try to keep changes as minimal as possible and "
"document your change and assumptions clearly."
msgstr ""
"Є цілі книги про знаходження помилок, їх виправлення, тестування й так далі. "
"Якщо Ви початківець у проґрамуванні, спробуйте виправляти нескладні помилки, "
"такі як очевидні друкарські помилки. Намагайтеся робити Ваші зміни "
"мінімальними й чітко документувати Ваші зміни та припущення."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:180
msgid ""
"Before working on a fix yourself, make sure to investigate if nobody else "
"has fixed it already or is currently working on a fix. Good sources to check "
"are:"
msgstr ""
"Перед тим, як працювати над помилкою, переконайтеся, що вона не виправлена "
"вже кимось іншим, й ніхто не займається на дану мить її виправленням. Не "
"завадить перевірити наступні джерела:"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:183
msgid "Upstream (and Debian) bug tracker (open and closed bugs),"
msgstr ""
"Система відстеження помилок апстріму (й Debian) — відкриті та закриті "
"помилки,"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:184
msgid ""
"Upstream revision history (or newer release) might have fixed the problem,"
msgstr ""
"Історія версій в апстрімі (або у новій версії) може містити відомості про "
"виправлення помилки,"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:185
msgid "bugs or package uploads of Debian or other distributions."
msgstr ""
"звіти про вади й нові версії пакунків в Debian та інших дистрибутивах."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:190
msgid ""
"You may want to create a patch which includes the fix. The command ``edit-"
"patch`` is a simple way to add a patch to a package. Run::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:195
msgid ""
"This will copy the packaging to a temporary directory.  You can now edit "
"files with a text editor or apply patches from upstream, for example::"
msgstr ""
"Ця команда скопіює файли, необхідні для збірки пакунку, у тимчасову "
"директорію. Ви можете змінювати ці файли у текстовому редакторі або "
"застосовувати латки з upstream, наприклад::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:200
msgid ""
"After editing the file type ``exit`` or press ``control-d`` to quit the "
"temporary shell.  The new patch will have been added into ``debian/patches``."
msgstr ""
"Після редагування файлу наберіть ``exit`` або натисніть ``control-d``, щоб "
"вийти з тимчасової командної оболонки. Нова латка буде додана в "
"``debian/patches``."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:203
msgid ""
"You must then add a header to your patch containing meta information so that "
"other developers can know the purpose of the patch and where it came from. "
"To get the template header that you can edit to reflect what the patch does, "
"type this::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:210
msgid ""
"This will open the template in a text editor. Follow the template and make "
"sure to be thorough so you get all the details necessary to describe the "
"patch."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:214
msgid ""
"In this specific case, if you just want to edit ``debian/control``, you do "
"not need a patch. Put ``Homepage: http://www.linux-games.com/bumprace/`` at "
"the end of the first section and the bug should be fixed."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:219
msgid "Documenting the fix"
msgstr "Документування виправлення"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:221
msgid ""
"It is very important to document your change sufficiently so developers who "
"look at the code in the future won't have to guess what your reasoning was "
"and what your assumptions were. Every Debian and Ubuntu package source "
"includes ``debian/changelog``, where changes of each uploaded package are "
"tracked."
msgstr ""
"Дуже важливо документувати свої зміни у достатній мірі, щоб розробникам  "
"потім не довелося здогадуватися, якими були причини й передумови зроблених "
"Вами змін. Кожен пакунок джерельного коду Debian та Ubuntu включає у себе "
"файл ``debian/changelog``, у якому відстежуються вносювані у пакунок зміни."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:226
msgid "The easiest way to update this is to run::"
msgstr "Найпростіший спосіб оновити його — це виконати::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:230
msgid ""
"This will add a boilerplate changelog entry for you and launch an editor "
"where you can fill in the blanks. An example of this could be::"
msgstr ""
"Ця команда додасть у файл шаблон запису й запустить редактор, у якому Ви "
"зможете додати інформацію якої бракує. Ось приклад цього запису::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:239
msgid ""
"``dch`` should fill out the first and last line of such a changelog entry "
"for you already. Line 1 consists of the source package name, the version "
"number, which Ubuntu release it is uploaded to, the urgency (which almost "
"always is 'low'). The last line always contains the name, email address and "
"timestamp (in :rfc:`5322` format) of the change."
msgstr ""
"Команда ``dch`` повинна заповнити перший і останній рядок цього запису у "
"файлі changelog. Перший рядок містить ім’я пакунку джерельного коду, номер "
"його версії, у який реліз Ubuntu він завантажений, терміновість (майже "
"завжди низька — 'low'). Останній рядок завжди містить ім’я, адресу "
"електронної пошти та мітку часу змінювання (у форматі :rfc:`5322`)."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:245
msgid ""
"With that out of the way, let's focus on the actual changelog entry itself: "
"it is very important to document:"
msgstr ""
"Тепер давайте сфокусуємося на тому що має міститися у самому запису файлу "
"changelog. Дуже важливо задокументувати:"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:248
msgid "Where the change was done."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:249
msgid "What was changed."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:250
msgid "Where the discussion of the change happened."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:252
msgid ""
"In our (very sparse) example the last point is covered by ``(LP: #123456)`` "
"which refers to Launchpad bug 123456. Bug reports or mailing list threads or "
"specifications are usually good information to provide as a rationale for a "
"change. As a bonus, if you use the ``LP: #<number>`` notation for Launchpad "
"bugs, the bug will be automatically closed when the package is uploaded to "
"Ubuntu."
msgstr ""
"У нашому (досить поодинокому) прикладі останньому пункту відповідає ``(LP: "
"#123456)``, тобто посилання на помилку на Launchpad з номером 123456. Звіти "
"про вади, теми переліків розсилки або специфікації зазвичай є добрими "
"джерелами інформації для обґрунтування змін. У якості додаткового "
"заохочення, якщо Ви використовуєте нотацію ``LP: #<номер>`` для помилок на "
"Launchpad, то помилка автоматично отримає статус закритої при відправці "
"пакунку в Ubuntu."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:259
msgid ""
"In order to get it sponsored in the next section, you need to file a bug "
"report in Launchpad (if there isn't one already, if there is, use that) and "
"explain why your fix should be included in Ubuntu. For example, for tomboy, "
"you would file a bug `here`_ (edit the URL to reflect the package you have a "
"fix for). Once a bug is filed explaining your changes, put that bug number "
"in the changelog."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:269
msgid "Testing the fix"
msgstr "Тестування виправлення"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:271
msgid "To build a test package with your changes, run these commands::"
msgstr ""
"Щоб зібрати тестовий пакунок з Вашими змінами, виконайте такі команди::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:276
msgid ""
"This will create a source package from the branch contents (``-us -uc`` will "
"just omit the step to sign the source package and ``-d`` will skip the step "
"where it checks for build dependencies, pbuilder will take care of that) and "
"``pbuilder-dist`` will build the package from source for whatever "
"``release`` you choose."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:283
msgid ""
"If ``debuild`` errors out with \"Version number suggests Ubuntu changes, but "
"Maintainer: does not have Ubuntu address\" then run the ``update-"
"maintainer`` command (from ubuntu-dev-tools) and it will automatically fix "
"this for you. This happens because in Ubuntu, all Ubuntu Developers are "
"responsible for all Ubuntu packages, while in Debian, packages have "
"maintainers."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:289
msgid ""
"In this case with bumprace, run this to view the package information::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:293
msgid "As expected, there should now be a ``Homepage:`` field."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:296
msgid ""
"In a lot of cases you will have to actually install the package to make sure "
"it works as expected. Our case is a lot easier. If the build succeeded, you "
"will find the binary packages in ``~/pbuilder/<release>_result``. Install "
"them via ``sudo dpkg -i <package>.deb`` or by double-clicking on them in "
"your file manager."
msgstr ""
"У більшості випадків Вам доведеться дійсно встановити пакунок, щоб "
"перевірити правильність його роботи. Наш випадок на багато простіший. Якщо "
"збірка завершилася з успіхом, готові двійкові пакунки можна буде знайти в "
"``~/pbuilder/<випуск>_result``. Встановіть їх за допомогою ``sudo dpkg -i "
"<пакунок>.deb`` або подвійного клацу на них у файловому менеджері."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:304
msgid "Submitting the fix and getting it included"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:306
msgid ""
"With the changelog entry written and saved, run ``debuild`` one more time::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:310
msgid ""
"and this time it will be signed and you are now ready to get your diff to "
"submit to get sponsored."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:313
msgid ""
"In a lot of cases, Debian would probably like to have the patch as well "
"(doing this is best practice to make sure a wider audience gets the fix). "
"So, you should submit the patch to Debian, and you can do that by simply "
"running this::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:320
msgid ""
"This will take you through a series of steps to make sure the bug ends up in "
"the correct place. Be sure to review the diff again to make sure it does not "
"include random changes you made earlier."
msgstr ""
"Ця команда проведе Вас через декілька кроків, необхідних для оформлення "
"звіту про ваду й відправки його у правильне місце. Обов’язково продивіться "
"Ваші зміни, щоб переконатися, що там немає нічого зайвого."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:324
msgid ""
"Communication is important, so when you add some more description to it to "
"the inclusion request, be friendly, explain it well."
msgstr ""
"Комунікація має дуже велике значення, тому при додаванні опису надайте добре "
"та дружнє пояснення."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:327
msgid ""
"If everything went well you should get a mail from Debian's bug tracking "
"system with more information. This might sometimes take a few minutes."
msgstr ""
"Якщо усе пройшло добре, то Ви повинні отримати поштове повідомлення від "
"системи відстежування помилок Debian з додатковою інформацією. Інколи це "
"може зайняти декілька хвилин."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:330
msgid ""
"It might be beneficial to just get it included in Debian and have it flow "
"down to Ubuntu, in which case you would not follow the below process. But, "
"sometimes in the case of security updates and updates for stable releases, "
"the fix is already in Debian (or ignored for some reason) and you would "
"follow the below process. If you are doing such updates, please read our "
":doc:`Security and stable release updates<./security-and-stable-release-"
"updates>` article. Other cases where it is acceptable to wait to submit "
"patches to Debian are Ubuntu-only packages not building correctly, or Ubuntu-"
"specific problems in general."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:340
msgid ""
"But if you're going to submit your fix to Ubuntu, now it's time to generate "
"a \"debdiff\", which shows the difference between two Debian packages. The "
"name of the command used to generate one is also ``debdiff``. It is part of "
"the ``devscripts`` package. See ``man debdiff`` for all the details. To "
"compare two source packages, pass the two dsc files as arguments::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:348
msgid ""
"In this case, ``debdiff`` the dsc you downloaded with ``pull-lp-source`` and "
"the new dsc file you generated. This will generate a patch that your sponsor "
"can then apply locally (by using ``patch -p1 < /path/to/debdiff``). In this "
"case, pipe the output of the debdiff command to a file that you can then "
"attach to the bug report::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:356
msgid "The format shown in ``1-1.0-1ubuntu1.debdiff`` shows:"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:358
msgid ""
"``1-`` tells the sponsor that this is the first revision of your patch. "
"Nobody is perfect, and sometimes follow-up patches need to be provided. This "
"makes sure that if your patch needs work, that you can keep a consistent "
"naming scheme."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:362
msgid ""
"``1.0-1ubuntu1`` shows the new version being used. This makes it easy to see "
"what the new version is."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:364
msgid ""
"``.debdiff`` is an extension that makes it clear that it is a debdiff."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:366
msgid "While this format is optional, it works well and you can use this."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:368
msgid ""
"Next, go to the bug report, make sure you are logged into Launchpad, and "
"click \"Add attachment or patch\" under where you would add a new comment. "
"Attach the debdiff, and leave a comment telling your sponsor how this patch "
"can be applied and the testing you have done. An example comment can be::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:376
msgid ""
"Make sure you mark it as a patch (the Ubuntu Sponsors team will "
"automatically be subscribed) and that you are subscribed to the bug report. "
"You will then receive a review anywhere between several housr from "
"submitting the patch to several weeks. If it takes longer than that, please "
"join ``#ubuntu-motu`` on ``freenode`` and mention it there. Stick around "
"until you get an answer from someone, and they can guide you as to what to "
"do next."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:383
msgid ""
"Once you have received a review, your patch was either uploaded, your patch "
"needs work, or is rejected for some other reason (possibly the fix is not "
"fit for Ubuntu or should go to Debian instead). If your patch needs work, "
"follow the same steps and submit a follow-up patch on the bug report, "
"otherwise submit to Debian as shown above."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:389
msgid ""
"Remember: good places to ask your questions are ``ubuntu-"
"motu@lists.ubuntu.com`` and ``#ubuntu-motu`` on freenode. You will easily "
"find a lot of new friends and people with the same passion that you have: "
"making the world a better place by making better Open Source software."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:395
msgid "Additional considerations"
msgstr "Додаткові зауваження"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:397
msgid ""
"If you find a package and find that there are a couple of trivial things you "
"can fix at the same time, do it. This will speed up review and inclusion."
msgstr ""
"Якщо Ви можете внести у пакунок декілька тривіальних виправлень одразу, "
"зробіть це. Це дозволить розробникам швидше розглянути й застосувати ці "
"зміни."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:400
msgid ""
"If there are multiple big things you want to fix, it might be advisable to "
"send individual patches or merge proposals instead. If there are individual "
"bugs filed for the issues already, this makes it even easier."
msgstr ""
"Якщо Ви бажаєте внести декілька великих змін, краще посилати латки або "
"запити на злиття окремо для кожної зміни. Це простіше, якщо вже створені "
"індивідуяльні повідомлення про вади."

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:5
msgid "Fixing FTBFS packages"
msgstr "Виправлення пакунків FTBFS (Fails To Build From Source)"

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:7
msgid ""
"Before a package can be used in Ubuntu, it has to build from source. If it "
"fails this, it will probably wait in -proposed and will not be available in "
"the Ubuntu archives. You can find a complete list of packages that are "
"failing to build from source at http://qa.ubuntuwire.org/ftbfs/. There are 5 "
"main categories shown on the page:"
msgstr ""
"Перед тим, як пакунок можна буде використовувати в Ubuntu, він повинен бути "
"зібраний з джерельного коду. Якщо це не вдається, пакунок, ймовірно, буде "
"очікувати в -proposed й не буде доступний у архівах Ubuntu. Повний перелік "
"пакунків, які не вдалося зібрати з джерельного коду, можна знайти на "
"http://qa.ubuntuwire.org/ftbfs/. На цій сторінці показано 5 основних "
"категорій:"

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:13
msgid ""
"Package failed to build (F): Something actually went wrong with the build "
"process."
msgstr ""
"Package failed to build (F): Щось справді пішло не так у процесі збірки."

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:15
msgid ""
"Cancelled build (X): The build has been cancelled for some reason. These "
"should probably be avoided to start with."
msgstr ""
"Скасована збірка (X): збірка була скасована з певної причини. Для початку, з "
"ними ліпше не зв’язуватися."

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:17
msgid ""
"Package is waiting on another package (M): This package is waiting on "
"another package to either build, get updated, or (if the package is in main) "
"one of it's dependancies is in the wrong part of the archive."
msgstr ""
"Package is waiting on another package (M): Цей пакунок очікує збірки або "
"оновлення іншого пакунку, або (якщо це пакунок в main) одна з його "
"залежностей знаходиться не у тій частині архіву."

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:20
msgid ""
"Failure in the chroot (C): Part of the chroot failed, this is most likely "
"fixed by a rebuild. Ask a developer to rebuild the package and that should "
"fix it."
msgstr ""
"Проблема в chroot (C): Певна операція над chroot-оточенням зіштовхнулася з "
"помилкою. Частіше за усе виправляється повторним збиранням. Попрохайте "
"розробника запустити перезбірку."

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:23
msgid ""
"Failed to upload (U): The package could not upload. This is usually just a "
"case of asking for a rebuild, but check the build log first."
msgstr ""
"Помилка при завантаженні (U): Пакунок не може бути завантажений на сервер. "
"Зазвичай у цьому випадку потрібно зробити перезбирання, але перед цим -- "
"перевірте логи збірки."

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:27
msgid "First steps"
msgstr "Перші кроки"

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:28
msgid ""
"The first thing you'll want to do is see if you can reproduce the FTBFS "
"yourself. Get the code either by running ``bzr branch lp:ubuntu/PACKAGE`` "
"and then getting the tarball or running ``dget PACKAGE_DSC`` on the .dsc "
"file from the launchpad page. Once you have that, build it in a schroot."
msgstr ""
"Найперше необхідно повторити FTBFS самостійно. Стягніть код за допомогою "
"``bzr branch lp:ubuntu/PACKAGE`` й отримайте tar-архів, або запустіть ``dget "
"PACKAGE_DSC`` над .dsc-файлом зі сторінки проєкту на Launchpad. Після цього, "
"створіть chroot-оточення."

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:35
msgid ""
"You should be able to reproduce the FTBFS. If not, check if the build is "
"downloading a missing dependency, which means you just need to make that a "
"build-dependency in debian/control. Building the package locally can also "
"help find if the issue is caused by a missing, unlisted, dependency (builds "
"locally but fails on a schroot)."
msgstr ""
"В Вас має вийти відтворити помилку FTBFS. Якщо ж ні -- перевірте, чи не "
"стягує збірка відсутню залежність: у такому випадку необхідно у файлі "
"debian/control оголосити її як build-depends. Інший варіянт -- спробувати "
"зібрати пакунок локально, що дозволить перевірити відсутні або не вказані "
"залежності (у такому випадку локальна збірка повинна бути успішна, а в "
"schroot -- ні)"

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:42
msgid "Checking Debian"
msgstr "Перевірка Debian"

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:43
msgid ""
"Once you have reproduced the issue, it's time to try and find a solution. If "
"the package is in Debian as well, you can check if the package builds there "
"by going to http://packages.qa.debian.org/PACKAGE. If Debian has a newer "
"version, you should merge it. If not, check the buildlogs and bugs linked on "
"that page for any extra information on the ftbfs or patches. Debian also "
"maintains a list of command FTBFSs and how to fix them which can be found at "
"https://wiki.debian.org/qa.debian.org/FTBFS, you will want to check it for "
"solutions too."
msgstr ""
"У випадку, якщо проблему вдалося відтворити -- необхідно почати пошук "
"вирішення. Якщо пакунок також знаходиться в Debian, -- перевірте, можливо в "
"них пакунок збирається нормально: http://packages.qa.debian.org/PACKAGE. "
"Якщо в Debian є новіша версія пакунку, його потрібно об’єднати (merge). Якщо "
"ж ні -- перевірте логи збірки й посилання на відомі проблеми: там може бути "
"додаткова інформація про FTBFS або латки. Debian також підтримує перелік "
"команд різних FTBFS, у якому також є варіянти вирішення різноманітних "
"проблем: https://wiki.debian.org/qa.debian.org/FTBFS."

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:53
msgid "Other causes of a package to FTBFS"
msgstr "Інші причини виникнення FTBFS"

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:54
msgid ""
"If a package is in main and missing a dependency that is not in main, you "
"will have to file a MIR bug. https://wiki.ubuntu.com/MainInclusionProcess "
"explains the procedure."
msgstr ""
"Якщо пакунок знаходиться в main, але для нього відсутня залежність не з "
"main, то необхідно відправити MIR-баг: сторінка "
"https://wiki.ubuntu.com/MainInclusionProcess дає опис цієї процедури."

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:61
msgid "Fixing the issue"
msgstr "Виправлення помилки"

#: ../ubuntu-packaging-guide/fixing-ftbfs.rst:62
msgid ""
"Once you have found a fix to the problem, follow the same process as any "
"other bug. Make a patch, add it to a bzr branch or bug, subscribe ubuntu-"
"sponsors, then try to get it included upstream and/or in Debian."
msgstr ""
"Якщо вдалося виправити проблему, дотримуйтеся такої ж процедури як й при "
"будь-яких інших проблемах: створіть латку, додайте її у гілку або баг bzr, "
"підпишіть ubuntu-sponsors, а потім спробуйте домогтися її додавання у "
"джерельний пакунок і/або в Debian."

#: ../ubuntu-packaging-guide/getting-set-up.rst:3
msgid "Getting Set Up"
msgstr "Підготовка"

#: ../ubuntu-packaging-guide/getting-set-up.rst:5
msgid ""
"There are a number of things you need to do to get started developing for "
"Ubuntu. This article is designed to get your computer set up so that you can "
"start working with packages, and upload your packages to Ubuntu's hosting "
"platform, Launchpad. Here's what we'll cover:"
msgstr ""
"Існує декілька речей, які потрібно зробити перед початком розробки в Ubuntu. "
"Ця стаття допоможе Вам підготувати комп’ютер до роботи з пакунками й "
"відправці Ваших пакунків на платформу хостингу Ubuntu — Launchpad. Ось що ми "
"розглянемо:"

#: ../ubuntu-packaging-guide/getting-set-up.rst:10
msgid "Installing packaging-related software. This includes:"
msgstr "Встановлення проґрам для роботи з пакунками. Вони включають у себе:"

#: ../ubuntu-packaging-guide/getting-set-up.rst:12
msgid "Ubuntu-specific packaging utilities"
msgstr "специфічні для Ubuntu засоби створення пакунків"

#: ../ubuntu-packaging-guide/getting-set-up.rst:13
msgid "Encryption software so your work can be verified as being done by you"
msgstr ""
"криптографічну проґраму, яка дозволить іншим переконатися, що робота "
"виконана саме Вами"

#: ../ubuntu-packaging-guide/getting-set-up.rst:14
msgid "Additional encryption software so you can securely transfer files"
msgstr ""
"додаткові проґрами шифрування, що забезпечують безпечне передавання файлів"

#: ../ubuntu-packaging-guide/getting-set-up.rst:16
msgid "Creating and configuring your account on Launchpad"
msgstr "Створення й налаштування облікового запису на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:17
msgid ""
"Setting up your development environment to help you do local builds of "
"packages, interact with other developers, and propose your changes on "
"Launchpad."
msgstr ""
"Налаштування Вашого середовища розробки для полегшення локальної збірки "
"пакунків, взаємодії з іншими розробниками й відправки Ваших змін на "
"Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:22
msgid ""
"It is advisable to do packaging work using the current development version "
"of Ubuntu. Doing so will allow you to test changes in the same environment "
"where those changes will actually be applied and used."
msgstr ""
"Рекомендується виконувати роботу зі створення пакунків у поточній "
"розроблюваній версії Ubuntu. Це дозволить Вам тестувати зміни у тому ж "
"середовищі, у яке вони у дійсності потім будуть внесені."

#: ../ubuntu-packaging-guide/getting-set-up.rst:26
msgid ""
"Don't want to install the latest Ubuntu development version of Ubuntu? Spin "
"up an `LXD container <https://help.ubuntu.com/lts/serverguide/lxd.html>`_."
msgstr ""

#: ../ubuntu-packaging-guide/getting-set-up.rst:30
msgid "Install basic packaging software"
msgstr ""
"Встановлення базового проґрамного забезпечення для створення пакунків"

#: ../ubuntu-packaging-guide/getting-set-up.rst:32
msgid ""
"There are a number of tools that will make your life as an Ubuntu developer "
"much easier. You will encounter these tools later in this guide. To install "
"most of the tools you will need run this command::"
msgstr ""

#: ../ubuntu-packaging-guide/getting-set-up.rst:39
msgid "This command will install the following software:"
msgstr "Ця команда встановить такі проґрами:"

#: ../ubuntu-packaging-guide/getting-set-up.rst:41
msgid ""
"``gnupg`` -- `GNU Privacy Guard <GPG_>`_ contains tools you will need to "
"create a cryptographic key with which you will sign files you want to upload "
"to Launchpad."
msgstr ""
"``gnupg`` -- `GNU Privacy Guard <GPG_>`_ містить інструменти, які "
"знадобляться для створення криптографічного ключа, за допомогою якого Ви "
"будете підписувати файли, які бажаєте завантажити на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:44
msgid ""
"``pbuilder`` -- a tool to do reproducible builds of a package in a clean and "
"isolated environment."
msgstr ""
"``pbuilder`` -- інструмент для створення готових до подальшого "
"розповсюдження збірок пакунків у чистому та ізольованому середовищі."

#: ../ubuntu-packaging-guide/getting-set-up.rst:46
msgid ""
"``ubuntu-dev-tools`` (and ``devscripts``, a direct dependency) -- a "
"collection of tools that make many packaging tasks easier."
msgstr ""
"``ubuntu-dev-tools`` (і його безпосередня залежність ``devscripts``) -- "
"набір інструментів, що спрощують багато завдань зі створення пакунків."

#: ../ubuntu-packaging-guide/getting-set-up.rst:48
msgid ""
"``apt-file`` provides an easy way to find the binary package that contains a "
"given file."
msgstr ""
"``apt-file`` надає простий спосіб знайти двійковий пакунок, що містить "
"заданий файл."

#: ../ubuntu-packaging-guide/getting-set-up.rst:53
msgid "Create your GPG key"
msgstr "Створення ключа GPG"

#: ../ubuntu-packaging-guide/getting-set-up.rst:55
msgid ""
"GPG stands for `GNU Privacy Guard <GPG_>`_ and it implements the OpenPGP "
"standard which allows you to sign and encrypt messages and files. This is "
"useful for a number of purposes. In our case it is important that you can "
"sign files with your key so they can be identified as something that you "
"worked on. If you upload a source package to Launchpad, it will only accept "
"the package if it can absolutely determine who uploaded the package."
msgstr ""
"GPG — абревіятура для `GNU Privacy Guard <GPG_>`_, реалізуючого стандарт "
"OpenPGP, який дозволяє підписувати та шифрувати повідомлення й файли. Це "
"корисно у ряді ситуацій. У нашому випадку важливо, що Ви можете "
"використовувати свій ключ для підписування файлів, щоб можна було "
"переконатися, що саме Ви з ними працювали. Якщо Ви завантажите пакунок "
"джерельного коду на Launchpad, він буде прийнятий лише у тому випадку, якщо "
"можна точно визначити, хто саме відправив пакунок."

#: ../ubuntu-packaging-guide/getting-set-up.rst:62
msgid "To generate a new GPG key, run::"
msgstr "Щоб згенерувати новий ключ GPG, наберіть::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:66
msgid ""
"GPG will first ask you which kind of key you want to generate. Choosing the "
"default (RSA and DSA) is fine. Next it will ask you about the keysize. The "
"default (currently 2048) is fine, but 4096 is more secure. Afterwards, it "
"will ask you if you want it to expire the key at some stage. It is safe to "
"say \"0\", which means the key will never expire. The last questions will be "
"about your name and email address. Just pick the ones you are going to use "
"for Ubuntu development here, you can add additional email addresses later "
"on. Adding a comment is not necessary. Then you will have to set a "
"passphrase, choose a safe one (a passphrase is just a password which is "
"allowed to include spaces)."
msgstr ""
"GPG спочатку спитає, який тип ключа Ви бажаєте створити. Типовий вибір (RSA "
"и DSA) цілком влаштує. Далі він спитає вказати розмір ключа. Типовий розмір "
"(на цей час 2048) влаштує, але 4096 надійніше. Далі, проґрама спитає, чи "
"бажаєте Ви, щоб термін дії ключа вийшов через якийся час. Безпечніше "
"відповісти \"0\", що означає, що термін дії не сплине ніколи. Останнє "
"питання буде про Ваше ім’я та адресу електронної пошти. Просто виберіть "
"адресу, якою Ви користуєтеся при розробці Ubuntu, додаткові адреси можна "
"буде додати потім. Додавати коментар не обов’язково. Після цього потрібно "
"вказати надійне парольне гасло (парольне гасло — це просто пароль, у якому "
"дозволяється використовувати пробіли)."

#: ../ubuntu-packaging-guide/getting-set-up.rst:76
msgid ""
"Now GPG will create a key for you, which can take a little bit of time; it "
"needs random bytes, so if you give the system some work to do it will be "
"just fine.  Move the cursor around, type some paragraphs of random text, "
"load some web page."
msgstr ""
"Тепер GPG створить для Вас ключ, що може зайняти певний час. Для його "
"створення знадобляться випадкові байти, тому буде просто чудово, якщо Ви "
"задасте своїй системі якусь роботу. Порухайте вказівник миші, наберіть "
"декілька абзаців будь-якого тексту, завантажте будь-яку веб-сторінку."

#: ../ubuntu-packaging-guide/getting-set-up.rst:81
msgid "Once this is done, you will get a message similar to this one::"
msgstr "Коли процес буде завершено, Ви отримаєте повідомлення типу такого::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:88
msgid "In this case ``43CDE61D`` is the *key ID*."
msgstr "У даному випадку, ``43CDE61D`` — це ідентифікатор ключа (*key ID*)."

#: ../ubuntu-packaging-guide/getting-set-up.rst:90
msgid ""
"Next, you need to upload the public part of your key to a keyserver so the "
"world can identify messages and files as yours. To do so, enter::"
msgstr ""
"Потім потрібно завантажити відкриту (public) частину Вашого ключа на сервер "
"ключів, щоб усі могли ідентифікувати повідомлення і файли, як відправлені "
"Вами. Для цього уведіть::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:95
msgid ""
"This will send your key to the Ubuntu keyserver, but a network of keyservers "
"will automatically sync the key between themselves. Once this syncing is "
"complete, your signed public key will be ready to verify your contributions "
"around the world."
msgstr ""
"Ця команда відправить Ваш ключ на сервер ключів Ubuntu, а мережа серверів "
"ключів автоматично синхронізує ключ між собою. Після того, як ця "
"синхронізація завершиться, Ваш підписаний відкритий ключ буде готовий для "
"засвідчення зробленого Вами вкладу в усьому світі."

#: ../ubuntu-packaging-guide/getting-set-up.rst:102
msgid "Create your SSH key"
msgstr "Створення ключа SSH"

#: ../ubuntu-packaging-guide/getting-set-up.rst:104
msgid ""
"SSH_ stands for *Secure Shell*, and it is a protocol that allows you to "
"exchange data in a secure way over a network. It is common to use SSH to "
"access and open a shell on another computer, and to use it to securely "
"transfer files. For our purposes, we will mainly be using SSH to securely "
"upload source packages to Launchpad."
msgstr ""
"SSH_ або *Secure Shell* — це протокол, який дозволяє безпечно обмінюватися "
"даними мережею. Звичайною практикою є використання SSH для доступу й "
"відкриття командної оболонки на іншому комп’ютері й для безпечної пересилки "
"файлів. З нашою метою ми переважно будемо використовувати SSH для безпечної "
"відправки пакунків джерельного коду на Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:110
msgid "To generate an SSH key, enter::"
msgstr "Щоб згенерувати ключ SSH, уведіть::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:114
msgid ""
"The default file name usually makes sense, so you can just leave it as it "
"is. For security purposes, it is highly recommended that you use a "
"passphrase."
msgstr ""
"Типове ім’я файлу цілком влаштує, тож можете залишити його як є. З метою "
"безпеки настійно рекомендується вказати парольне гасло."

#: ../ubuntu-packaging-guide/getting-set-up.rst:119
msgid "Set up pbuilder"
msgstr "Налаштування pbuilder"

#: ../ubuntu-packaging-guide/getting-set-up.rst:121
msgid ""
"``pbuilder`` allows you to build packages locally on your machine. It serves "
"a couple of purposes:"
msgstr ""
"``pbuilder`` дозволяє локально збирати пакунки на Вашому комп’ютері. Він "
"слугує декільком цілям:"

#: ../ubuntu-packaging-guide/getting-set-up.rst:124
msgid ""
"The build will be done in a minimal and clean environment. This helps you "
"make sure your builds succeed in a reproducible way, but without modifying "
"your local system"
msgstr ""
"Збірка буде виконана у мінімальному й чистому середовищі. Це дасть "
"можливість переконатися, що збірку вдастся успішно відтворити й на інших "
"комп’ютерах, але при цьому допоможе уникнути змін у Вашій локальній системі"

#: ../ubuntu-packaging-guide/getting-set-up.rst:127
msgid ""
"There is no need to install all necessary *build dependencies* locally"
msgstr ""
"Зникає необхідність у локальному встановленні усіх *збірочних залежностей*"

#: ../ubuntu-packaging-guide/getting-set-up.rst:128
msgid ""
"You can set up multiple instances for various Ubuntu and Debian releases"
msgstr ""
"Можна налаштувати декілька екземплярів для різних випусків Ubuntu і Debian"

#: ../ubuntu-packaging-guide/getting-set-up.rst:130
msgid "Setting ``pbuilder`` up is very easy, run::"
msgstr "Налаштувати ``pbuilder`` дуже просто. Наберіть ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:134
msgid ""
"where <release> is for example `xenial`, `zesty`, `artful` or in the case of "
"Debian maybe `sid` or `buster`. This will take a while as it will download "
"all the necessary packages for a \"minimal installation\". These will be "
"cached though."
msgstr ""

#: ../ubuntu-packaging-guide/getting-set-up.rst:140
msgid "Get set up to work with Launchpad"
msgstr "Підготовка до роботи з Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:142
msgid ""
"With a basic local configuration in place, your next step will be to "
"configure your system to work with Launchpad. This section will focus on the "
"following topics:"
msgstr ""
"Після того, як базова локальна конфігурація створена, наступним кроком буде "
"налаштування системи для роботи з Launchpad. У цьому розділі ми сфокусуємося "
"на таких питаннях:"

#: ../ubuntu-packaging-guide/getting-set-up.rst:146
msgid "What Launchpad is and creating a Launchpad account"
msgstr "Що таке Launchpad й як створити обліковий запис на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:147
msgid "Uploading your GPG and SSH keys to Launchpad"
msgstr "Завантаження Ваших ключів GPG та SSH на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:148
msgid ""
"Configure your shell to recognize you (for putting your name in changelogs)"
msgstr ""

#: ../ubuntu-packaging-guide/getting-set-up.rst:152
msgid "About Launchpad"
msgstr "Відомості про Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:154
msgid ""
"Launchpad is the central piece of infrastructure we use in Ubuntu. It not "
"only stores our packages and our code, but also things like translations, "
"bug reports, and information about the people who work on Ubuntu and their "
"team memberships.  You will also use Launchpad to publish your proposed "
"fixes, and get other Ubuntu developers to review and sponsor them."
msgstr ""
"Launchpad є центральним елементом інфраструктури, що використовується нами в "
"Ubuntu. Він зберігає не лише наші пакунки й наш код, але й такі речі, як "
"переклади, звіти про вади, а також інформацію про людей, що працюють над "
"Ubuntu і їх приналежність до різних команд. Ви можете також використовувати "
"Launchpad, щоб оголосити пропоновані Вами виправлення й попрохати інших "
"розробників Ubuntu перевірити та підтримати їх."

#: ../ubuntu-packaging-guide/getting-set-up.rst:160
msgid ""
"You will need to register with Launchpad and provide a minimal amount of "
"information. This will allow you to download and upload code, submit bug "
"reports, and more."
msgstr ""
"Вам потрібно буде зареєструватися на Launchpad та надати певну мінімальну "
"кількість інформації про себе. Це дозволить Вам стягувати або відправляти "
"джерельний код, відправляти звіти про вади тощо."

#: ../ubuntu-packaging-guide/getting-set-up.rst:164
msgid ""
"Besides hosting Ubuntu, Launchpad can host any Free Software project. For "
"more information see the `Launchpad Help wiki "
"<https://help.launchpad.net/>`_."
msgstr ""
"Крім хостингу Ubuntu, Launchpad може надавати місце для будь-якого вільного "
"проґрамного проєкту. Додаткову інформацію дивіться на `Довідкових вікі-"
"сторінках Launchpad <https://help.launchpad.net/>`_"

#: ../ubuntu-packaging-guide/getting-set-up.rst:169
msgid "Get a Launchpad account"
msgstr "Створення облікового запису на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:171
msgid ""
"If you don't already have a Launchpad account, you can easily `create one "
"<LP-AccountCreate_>`_. If you have a Launchpad account but cannot remember "
"your Launchpad id, you can find this out by going to https://launchpad.net/~ "
"and looking for the part after the `~` in the URL."
msgstr ""
"Якщо в Вас ще немає облікового запису на Launchpad, Ви легко можете "
"`створити його <LP-AccountCreate_>`_. Якщо обліковий запис є, але Ви не "
"пам’ятаєте свій Launchpad ID, його можна дізнатися, зайшовши на "
"https://launchpad.net/~ і поглянувши на частину після `~` в URL."

#: ../ubuntu-packaging-guide/getting-set-up.rst:176
msgid ""
"Launchpad's registration process will ask you to choose a display name. It "
"is encouraged for you to use your real name here so that your Ubuntu "
"developer colleagues will be able to get to know you better."
msgstr ""
"При реєстрації на Launchpad Вас попрохають вибрати відображуване ім’я. "
"Рекомендується вказати тут Ваше справжнє ім’я, щоб Ваші колеги - розробники "
"Ubuntu могли краще з Вами познайомитися."

#: ../ubuntu-packaging-guide/getting-set-up.rst:180
msgid ""
"When you register a new account, Launchpad will send you an email with a "
"link you need to open in your browser in order to verify your email address. "
"If you don't receive it, check in your spam folder."
msgstr ""
"При реєстрації нового облікового запису Launchpad відправить Вам листа з "
"посиланням, яке потрібно відкрити у оглядачі тенет, щоб підтвердити вказану "
"Вами адресу електронної пошти. Якщо Ви не отримали листа, перевірте теку "
"небажаної пошти (спаму)."

#: ../ubuntu-packaging-guide/getting-set-up.rst:184
msgid ""
"`The new account help page <LP-AccountHelp_>`_ on Launchpad has more "
"information about the process and additional settings you can change."
msgstr ""
"`Довідкова сторінка нового облікового запису <LP-AccountHelp_>`_ на "
"Launchpad містить додаткову інформацію про процес та додаткові налаштування, "
"які можна зробити."

#: ../ubuntu-packaging-guide/getting-set-up.rst:191
msgid "Upload your GPG key to Launchpad"
msgstr "Завантаження Вашого ключа GPG на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:193
msgid "First, you will need to get your fingerprint and key ID."
msgstr "Спочатку потрібно отримати відбиток та ідентифікатор ключа."

#: ../ubuntu-packaging-guide/getting-set-up.rst:195
msgid "To find about your GPG fingerprint, run::"
msgstr "Щоб взнати свій відбиток ключа GPG (fingerprint), наберіть::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:199
msgid "and it will print out something like::"
msgstr "й Ви побачите щось типу::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:206
msgid "Then run this command to submit your key to Ubuntu keyserver::"
msgstr ""
"Потім виконайте цю команду для відправки Вашого ключа на сервер ключів "
"Ubuntu::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:210
msgid ""
"where ``43CDE61D`` should be replaced by your key ID (which is in the first "
"line of output of the previous command). Now you can import your key to "
"Launchpad."
msgstr ""
"де ``43CDE61D`` слід замінити на Ваш ідентифікатор ключа (він у першому "
"рядку виводу попередньої команди). Тепер можна імпортувати свій ключ на "
"Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:214
msgid ""
"Head to https://launchpad.net/~/+editpgpkeys and copy the \"Key "
"fingerprint\" into the text box. In the case above this would be ``5C28 0144 "
"FB08 91C0 2CF3  37AC 6F0B F90F 43CD E61D``. Now click on \"Import Key\"."
msgstr ""
"Зайдіть на https://launchpad.net/~/+editpgpkeys й скопіюйте дані з рядка "
"«Key fingerprint» у текстове поле. У наведеному вище прикладі це буде ``5C28 "
"0144 FB08 91C0 2CF3 37AC 6F0B F90F 43CD E61D``. Потім клацніть «Import Key»."

#: ../ubuntu-packaging-guide/getting-set-up.rst:219
msgid ""
"Launchpad will use the fingerprint to check the Ubuntu key server for your "
"key and, if successful, send you an encrypted email asking you to confirm "
"the key import. Check your email account and read the email that Launchpad "
"sent you. `If your email client supports OpenPGP encryption, it will prompt "
"you for the password you chose for the key when GPG generated it. Enter the "
"password, then click the link to confirm that the key is yours.`"
msgstr ""
"Launchpad скористається відбитком ключа для перевірки наявності Вашого ключа "
"на сервері ключів Ubuntu й, у випадку успіху, відправить Вам зашифроване "
"повідомлення електронної пошти, з пропозицією підтвердити імпорт ключа. "
"Перевірте свою пошту й прочитайте листа, отриманого з Launchpad. `Якщо Ваш "
"клієнт електронної пошти підтримує шифрування OpenPGP, він запропонує увести "
"пароль, який Ви вибрали при створенні ключа GPG. Уведіть пароль, потім "
"клацніть на посиланні, аби підтвердити, що цей ключ належить Вам.`"

#: ../ubuntu-packaging-guide/getting-set-up.rst:226
msgid ""
"Launchpad encrypts the email, using your public key, so that it can be sure "
"that the key is yours. If you are using Thunderbird, the default Ubuntu "
"email client, you can install the `Enigmail plugin <Enigmail_>`_ to easily "
"decrypt the message. If your email software does not support OpenPGP "
"encryption, copy the encrypted email's contents, type ``gpg`` in your "
"terminal, then paste the email contents into your terminal window."
msgstr ""
"Launchpad шифрує пошту, використовуючи Ваш публічний ключ, тож Ви зможете "
"переконатися, що ключ Ваш. Якщо Ви користуєтеся поштовим клієнтом "
"Thunderbird, який використовується в Ubuntu типово, для дешифрування "
"повідомлення можете встановити `доповнення Enigmail <Enigmail_>`_. Якщо Ваша "
"поштова проґрама не підтримує шифрування OpenPGP, скопіюйте зашифрований "
"вміст листа у буфер обміну, наберіть у терміналі ``gpg`` й вставте вміст "
"листа у вікно терміналу."

#: ../ubuntu-packaging-guide/getting-set-up.rst:236
msgid ""
"Back on the Launchpad website, use the Confirm button and Launchpad will "
"complete the import of your OpenPGP key."
msgstr ""
"Повернувшись на сайт Launchpad, скористайтеся кнопкою «Confirm», щоб "
"Launchpad завершив імпорт Вашого ключа OpenPGP."

#: ../ubuntu-packaging-guide/getting-set-up.rst:239
msgid ""
"Find more information at "
"https://help.launchpad.net/YourAccount/ImportingYourPGPKey"
msgstr ""
"Додаткову інформацію можна знайти на "
"https://help.launchpad.net/YourAccount/ImportingYourPGPKey"

#: ../ubuntu-packaging-guide/getting-set-up.rst:243
msgid "Upload your SSH key to Launchpad"
msgstr "Завантаження Вашого ключа SSH на Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:245
msgid ""
"Open https://launchpad.net/~/+editsshkeys in a web browser, also open "
"``~/.ssh/id_rsa.pub`` in a text editor. This is the public part of your SSH "
"key, so it is safe to share it with Launchpad. Copy the contents of the file "
"and paste them into the text box on the web page that says \"Add an SSH "
"key\". Now click \"Import Public Key\"."
msgstr ""
"Відкрийте у оглядачі тенет https://launchpad.net/~/+editsshkeys, а у "
"текстовому редакторі файл ``~/.ssh/id_rsa.pub``. Це відкрита частина Вашого "
"ключа SSH, тому можна без побоювань надати до неї спільний доступ на "
"Launchpad. Скопіюйте вміст файлу й вставьте його у текстове поле на веб-"
"сторінці з міткою «Add an SSH key». Потім клацніть «Import Public Key»."

#: ../ubuntu-packaging-guide/getting-set-up.rst:251
msgid ""
"For more information on this process, visit the `creating an SSH keypair "
"<genssh_>`_ page on Launchpad."
msgstr ""
"Для додаткової інформації про цей процес відвідайте сторінку про `створення "
"ключової пари SSH <genssh_>`_ на Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:258
msgid "Configure your shell"
msgstr "Налаштування командної оболонки"

#: ../ubuntu-packaging-guide/getting-set-up.rst:259
msgid ""
"The Debian/Ubuntu packaging tools need to learn about you as well in order "
"to properly credit you in the changelog. Simply open your `~/.bashrc` in a "
"text editor and add something like this to the bottom of it::"
msgstr ""

#: ../ubuntu-packaging-guide/getting-set-up.rst:266
msgid "Now save the file and either restart your terminal or run::"
msgstr "Потім збережіть файл й перезапустіть термінал або наберіть::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:270
msgid ""
"(If you do not use the default shell, which is `bash`, please edit the "
"configuration file for that shell accordingly.)"
msgstr ""
"(Якщо Ви не користуєтеся стандартною командною оболонкою `bash`, "
"відредагуйте конфігураційний файл тієї оболонки, яку Ви полюбляєте "
"використовувати.)"

#: ../ubuntu-packaging-guide/index.rst:9
msgid "Ubuntu Packaging Guide"
msgstr "Посібник розробника Ubuntu"

#: ../ubuntu-packaging-guide/index.rst:11
msgid ""
"Welcome to the Ubuntu Packaging and Development Guide! We are currently "
"developing codename Artful Aardvark, which is to be released in October 2017 "
"as Ubuntu 17.10."
msgstr ""

#: ../ubuntu-packaging-guide/index.rst:15
msgid ""
"This is the official place for learning all about Ubuntu Development and "
"packaging. After reading this guide you will have:"
msgstr ""

#: ../ubuntu-packaging-guide/index.rst:18
msgid ""
"Heard about the most important players, processes and tools in Ubuntu "
"development,"
msgstr ""

#: ../ubuntu-packaging-guide/index.rst:20
msgid "Your development environment set up correctly,"
msgstr ""

#: ../ubuntu-packaging-guide/index.rst:21
msgid "A better idea of how to join our community,"
msgstr ""

#: ../ubuntu-packaging-guide/index.rst:22
msgid "Fixed an actual Ubuntu bug as part of the tutorials."
msgstr ""

#: ../ubuntu-packaging-guide/index.rst:24
msgid ""
"Ubuntu is not only a free and open source operating system, its platform is "
"also open and developed in a transparent fashion. The source code for every "
"single component can be obtained easily and every single change to the "
"Ubuntu platform can be reviewed."
msgstr ""
"Ubuntu — не лише вільна операційна система з відкритим джерельним кодом, її "
"платформа також є відкритою й забезпечує прозорість розробки. Можна легко "
"отримати джерельний код для кожного окремого компонента, й кожну окрему "
"зміну у платформі Ubuntu можна перевірити."

#: ../ubuntu-packaging-guide/index.rst:29
msgid ""
"This means you can actively get involved in improving it and the community "
"of Ubuntu platform developers is always interested in helping peers getting "
"started."
msgstr ""
"Це означає, що Ви можете прийняти активну участь у її покращенні, й "
"спільнота розробників платформи Ubuntu завжди зацікавлена у залученні нових "
"участників."

#: ../ubuntu-packaging-guide/index.rst:33
msgid ""
"Ubuntu is also a community of great people who believe in free software and "
"that it should be accessible for everyone. Its members are welcoming and "
"want you to be involved as well. We want you to get involved, to ask "
"questions, to make Ubuntu better together with us."
msgstr ""
"Ubuntu також є спільнотою чудових людей, що вірять у те, що проґрамне "
"забезпечення має бути вільним та доступним для усіх. Участники спільноти "
"вітають Вас й бажають, щоб Ви теж до них приєдналися. Ми бажаємо, щоб Ви "
"приймали участь у нашій праці, задавали питання, робили Ubuntu ліпшою разом "
"з нами."

#: ../ubuntu-packaging-guide/index.rst:38
msgid ""
"If you run into problems: don't panic! Check out the :doc:`communication "
"article<./communication>` and you will find out how to most easily get in "
"touch with other developers."
msgstr ""
"Якщо в Вас виникнуть складнощі: не хвилюйтеся! Прочитайте :doc:`розділ про "
"комунікацію<./communication>`, й Ви дізнаєтеся, як легко зв’язатися з рештою "
"розробників."

#: ../ubuntu-packaging-guide/index.rst:42
msgid "The guide is split up into two sections:"
msgstr "Цей посібник складається з двох розділів:"

#: ../ubuntu-packaging-guide/index.rst:44
msgid "A list of articles based on tasks, things you want to get done."
msgstr ""
"Перелік статтей, заснованих на певних завданнях, які Вам можливо знадобиться "
"виконати."

#: ../ubuntu-packaging-guide/index.rst:45
msgid ""
"A set of knowledge-base articles that dig deeper into specific bits of our "
"tools and workflows."
msgstr ""
"Набір статтей бази знань, у яких детальніше розглядаються використовувані "
"нами інструменти й робочі процеси."

#: ../ubuntu-packaging-guide/index.rst:49
msgid "Articles"
msgstr "Статті"

#: ../ubuntu-packaging-guide/index.rst:66
msgid "Knowledge Base"
msgstr "База знань"

#: ../ubuntu-packaging-guide/index.rst:79
#: ../ubuntu-packaging-guide/libraries.rst:150
msgid "Further Reading"
msgstr "Матеріяли для подальшого читання"

#: ../ubuntu-packaging-guide/index.rst:81
msgid ""
"You can read this guide offline in different formats, if you install one of "
"the `binary packages <BinPkgs_>`_."
msgstr ""
"Ви можете прочитати офлайн-версію цього посібника у різних форматах, якщо "
"встановите один з `двійкових пакунків <BinPkgs_>`_."

#: ../ubuntu-packaging-guide/index.rst:84
msgid ""
"If you want to learn more about building Debian packages, here are some "
"Debian resources you may find useful:"
msgstr ""
"Якщо Ви бажаєте дізнатися більше про збирання пакунків Debian, ось декілька "
"ресурсів Debian, які можуть бути Вам корисними:"

#: ../ubuntu-packaging-guide/index.rst:87
msgid "`How to package for Debian <HowToPackage_>`_;"
msgstr "`Як створювати пакунки для Debian <HowToPackage_>`_;"

#: ../ubuntu-packaging-guide/index.rst:88
msgid "`Debian Policy Manual <Policy_>`_;"
msgstr "`Посібник з політики Debian <Policy_>`_;"

#: ../ubuntu-packaging-guide/index.rst:89
msgid ""
"`Debian New Maintainers' Guide <NewMaintGuide_>`_ — available in many "
"languages;"
msgstr ""
"`Посібник розробника-початківця Debian <NewMaintGuide_>`_ — доступний "
"різними мовами;"

#: ../ubuntu-packaging-guide/index.rst:90
msgid ""
"`Packaging tutorial <PkgTutorial_>`_ (also available as a `package "
"<PkgTutorialPkg_>`_);"
msgstr ""
"`Посібник зі створення пакунків <PkgTutorial_>`_ (також доступний у вигляді "
"`пакунку <PkgTutorialPkg_>`_);"

#: ../ubuntu-packaging-guide/index.rst:91
msgid "`Guide for Packaging Python Modules <PythonModules_>`_."
msgstr ""
"`Посібник зі створення пакунків для модулів Python <PythonModules_>`_."

#: ../ubuntu-packaging-guide/index.rst:93
msgid ""
"We are always looking to improve this guide. If you find any problems or "
"have some suggestions, please `report a bug on Launchpad <Bugs_>`_. If you'd "
"like to help work on the guide, `grab the source <Source_>`_ there as well."
msgstr ""
"Ми завжди намагаємося поліпшити цей посібник. Якщо Ви знайдете якусь "
"помилку, або бажаєте щось запропонувати, будь ласка, `створіть звіт про ваду "
"на Launchpad <Bugs_>`_. Якщо Ви бажали б допомогти у праці над посібником "
"його `джерельний код <Source_>`_ також доступний на Launchpad."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:3
msgid "Introduction to Ubuntu Development"
msgstr "Вступ у розробку Ubuntu"

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:5
msgid ""
"Ubuntu is made up of thousands of different components, written in many "
"different programming languages. Every component -  be it a software "
"library, a tool or a graphical application - is available as a source "
"package. Source packages in most cases consist of two parts: the actual "
"source code and metadata. Metadata includes the dependencies of the package, "
"copyright and licensing information, and instructions on how to build the "
"package. Once this source package is compiled, the build process provides "
"binary packages, which are the .deb files users can install."
msgstr ""
"Ubuntu складається з тисяч різних компонентів, написаних великою кількістю "
"мов проґрамування. Кожен компонент — бібліотека, засіб або графічний "
"застосунок — доступний у вигляді пакунку джерельного коду. Пакунки "
"джерельних кодів у більшості випадків складаються з двох частин: сам "
"джерельний код і метадані. Метадані включають у себе залежності пакунку, "
"інформацію про авторське право і ліцензію, а також інструкції зі збирання "
"пакунку. Після того, як пакунок джерельних кодів скомпільований, у процесі "
"збирання ми отримаємо двійкові пакунки, що є .deb файлами, які користувачі "
"можуть встановити."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:14
msgid ""
"Every time a new version of an application is released, or when someone "
"makes a change to the source code that goes into Ubuntu, the source package "
"must be uploaded to Launchpad's build machines to be compiled. The resulting "
"binary packages then are distributed to the archive and its mirrors in "
"different countries. The URLs in ``/etc/apt/sources.list`` point to an "
"archive or mirror. Every day images are built for a selection of different "
"Ubuntu flavours. They can be used in various circumstances. There are images "
"you can put on a USB key, you can burn them on DVDs, you can use netboot "
"images and there are images suitable for your phone and tablet. Ubuntu "
"Desktop, Ubuntu Server, Kubuntu and others specify a list of required "
"packages that get on the image. These images are then used for installation "
"tests and provide the feedback for further release planning."
msgstr ""
"Кожного разу, коли виходить нова версія додатку, або коли хтось вносить "
"зміни у джерельний код пакунку, що входить у склад Ubuntu, пакунок з "
"джерельним кодом повинен бути завантажений на збірочні комп’ютери Launchpad "
"для компілювання. Готові бінарні пакунки потім потрапляють у сховище ПЗ та "
"його дзеркала у різних країнах. URL в ``/etc/apt/sources.list`` є "
"посиланнями на сховище або його дзеркал. Кожного дня збираються образи для "
"різних версій Ubuntu. Вони можуть бути використані у різних умовах. Є "
"образи, які можна записати на USB-носії або на DVD-диски, образи, які можна "
"використовувати для мережевого завантаження й є образи, призначені для "
"встановлення на телефон або планшет. Ubuntu, серверна версія Ubuntu, Kubuntu "
"й інші гілки мають специфічний перелік необхідних пакунків, які потрапляють "
"в образ. Це образи, які потім використовуються для перевірки встановлення й "
"забезпечують зворотній зв’язок для подальшого планування випуску."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:27
msgid ""
"Ubuntu's development is very much dependent on the current stage of the "
"release cycle. We release a new version of Ubuntu every six months, which is "
"only possible because we have established strict freeze dates. With every "
"freeze date that is reached developers are expected to make fewer, less "
"intrusive changes. Feature Freeze is the first big freeze date after the "
"first half of the cycle has passed. At this stage features must be largely "
"implemented. The rest of the cycle is supposed to be focused on fixing bugs. "
"After that the user interface, then the documentation, the kernel, etc. are "
"frozen, then the beta release is put out which receives a lot of testing. "
"From the beta release onwards, only critical bugs get fixed and a release "
"candidate release is made and if it does not contain any serious problems, "
"it becomes the final release."
msgstr ""
"Розробка Ubuntu дуже залежить від поточної фази циклу випуску. Ми випускаємо "
"нову версію Ubuntu щопів-року, що можливо лише завдяки тому, що ми "
"встановлюємо точні дати «заморожування». При досягненні кожної дати "
"заморожування очікується, що розробники будуть вносити рідші та менш значущі "
"зміни. Заморожування нових функцій (feature freeze) — це перша велика дата "
"заморожування, що приходить після проходження першої половини циклу "
"розробки. На цьому етапі нові функції повинні бути переважно зреалізовані. У "
"залишкову частину циклу має бути зосередженя на виправленні вад. Після цього "
"«заморожується» користувацький інтерфейс, потім документація, ядро й тощо, "
"після чого випускається бета-версія (beta release), яка інтенсивно "
"тестується. Після того, як випущена бета-версія, виправляються лише критичні "
"помилки, й випускається release candidate, який, якщо він не містить "
"серйозних помилок, стає у подальшому кінцевим випуском."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:42
msgid ""
"Thousands of source packages, billions of lines of code, hundreds of "
"contributors require a lot of communication and planning to maintain high "
"standards of quality. At the beginning and in the middle of each release "
"cycle we have the Ubuntu Developer Summit where developers and contributors "
"come together to plan the features of the next releases. Every feature is "
"discussed by its stakeholders and a specification is written that contains "
"detailed information about its assumptions, implementation, the necessary "
"changes in other places, how to test it and so on. This is all done in an "
"open and transparent fashion, so you can participate remotely and listen to "
"a videocast, chat with attendants and subscribe to changes of "
"specifications, so you are always up to date."
msgstr ""
"Тисячі пакунків джерельного коду, мільярди рядків коду, сотні розробників "
"потребують більше спілкування й планування для підтримування високих "
"стандартів якості. На початку й у середині кожного циклу випуску "
"організовується Ubuntu Developer Summit, де розробники та участники "
"збираються разом, щоб планувати нові функції у наступних випусках. Кожна "
"функція обговорюється зацікавленими сторонами, і складається специфікація, "
"що містить детальну інформацію про початкові припущення, реалізації, "
"внесення необхідних змін у інші пакунки, про тестування тощо. Усе це "
"робиться прозоро й відкрито, тож Ви можете взяти участь віддалено, "
"подивитися видивотрансляцію, поспілкуватися з участниками та підписатися на "
"специфікації, щоб завжди знати про те що відбувається."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:54
msgid ""
"Not every single change can be discussed in a meeting though, particularly "
"because Ubuntu relies on changes that are done in other projects. That is "
"why contributors to Ubuntu constantly stay in touch. Most teams or projects "
"use dedicated mailing lists to avoid too much unrelated noise. For more "
"immediate coordination, developers and contributors use Internet Relay Chat "
"(IRC). All discussions are open and public."
msgstr ""
"Втім на нараді можуть бути обмірковані не усі зміни, оскільки Ubuntu "
"залежить від змін, що вносяться у інші проєкти. Тому участники розробки "
"Ubuntu залишаються постійно на зв’язку. Більшість команд або проєктів "
"використовують окремі переліки розсилки, щоб уникнути більшого потоку не "
"пов’язаних з їх спеціялізацією листів. Для більш безпосереднього "
"координування розробники і добровільні участники використовують Internet "
"Relay Chat (IRC). Усі оговорення є відкритими та публічними."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:61
msgid ""
"Another important tool regarding communication is bug reports. Whenever a "
"defect is found in a package or piece of infrastructure, a bug report is "
"filed in Launchpad. All information is collected in that report and its "
"importance, status and assignee updated when necessary. This makes it an "
"effective tool to stay on top of bugs in a package or project and organise "
"the workload."
msgstr ""
"Ще одним важливим інструментом зв’язку є звіти про вади. Якщо у пакунку або "
"частині інфраструктури виявлена помилка, звіт про неї відправляється на "
"Launchpad. У цьому звіті зібрана уся інформація, й при необхідності "
"відомості про важливість, статус помилки, та особа призначена для її "
"усунення оновлюються. Це робить звіт про ваду ефективним засобом "
"відстежування помилок у пакунках або проєктах й оптимізації робочого "
"навантаження."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:68
msgid ""
"Most of the software available through Ubuntu is not written by Ubuntu "
"developers themselves. Most of it is written by developers of other Open "
"Source projects and then integrated into Ubuntu. These projects are called "
"\"Upstreams\", because their source code flows into Ubuntu, where we "
"\"just\" integrate it. The relationship to Upstreams is critically important "
"to Ubuntu. It is not just code that Ubuntu gets from Upstreams, but it is "
"also that Upstreams get users, bug reports and patches from Ubuntu (and "
"other distributions)."
msgstr ""
"Велика частина доступних в Ubuntu проґрам створена не самими розробниками "
"Ubuntu. Багато з проґрам написані розробниками з інших проєктів з відкритим "
"джерельним кодом, а потім інтегровані в Ubuntu. Такі проєкти прийнято "
"називати «апстрімом» (від англ. upstream — угору за течією), оскільки їх "
"джерельний код вливається в Ubuntu, де ми «просто» інтегруємо його у "
"систему. Зв’язок з апстрімом дуже важливий для Ubuntu. Не лише Ubuntu "
"отримує проґрамний код з апстріму, але й апстрім отримує від користувачів "
"Ubuntu(й інших дистрибутивів) звіти про вади та латки."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:77
msgid ""
"The most important Upstream for Ubuntu is Debian. Debian is the distribution "
"that Ubuntu is based on and many of the design decisions regarding the "
"packaging infrastructure are made there. Traditionally, Debian has always "
"had dedicated maintainers for every single package or dedicated maintenance "
"teams. In Ubuntu there are teams that have an interest in a subset of "
"packages too, and naturally every developer has a special area of expertise, "
"but participation (and upload rights) generally is open to everyone who "
"demonstrates ability and willingness."
msgstr ""
"Найважливішим апстрімом для Ubuntu є Debian. Debian — це дистрибутив, на "
"якому заснована Ubuntu, й саме там створені багато інженерних рішень, що "
"стосуються інфраструктури пакунків. За традицією, в Debian для кожного "
"окремого пакунку завжди є супроводжуючий (мейнтейнер) або окрема група "
"супроводу. В Ubuntu теж є команди, зацікавлені у роботі над підмножиною "
"пакунків й, зрозуміло, кожен розробник має власну область компетенції, але "
"участь (і права завантаження змін) зазвичай доступні будь-кому, хто "
"продемонструє здатність та бажання працювати."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:86
msgid ""
"Getting a change into Ubuntu as a new contributor is not as daunting as it "
"seems and can be a very rewarding experience. It is not only about learning "
"something new and exciting, but also about sharing the solution and solving "
"a problem for millions of users out there."
msgstr ""
"Внести зміну в Ubuntu новому участнику не так складно, як здається, й це "
"може бути вельми корисним досвідом. Це дозволяє не лише навчитися чомусь "
"новому й захоплюючому, але й поділитися своїм вирішенням проблеми з "
"мільйонами інших користувачів."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:91
msgid ""
"Open Source Development happens in a distributed world with different goals "
"and different areas of focus. For example there might be the case that a "
"particular Upstream is interested in working on a new big feature while "
"Ubuntu, because of the tight release schedule, is interested in shipping a "
"solid version with just an additional bug fix. That is why we make use of "
"\"Distributed Development\", where code is being worked on in various "
"branches that are merged with each other after code reviews and sufficient "
"discussion."
msgstr ""
"Розробка відкритого проґрамного забезпечення відбувається у розподіленому "
"світі, у якому у розробників можуть бути різні цілі й різні області "
"інтересів. Наприклад, може бути так, що окремий апстрім зацікавлений у "
"роботі над великим нововведенням, в той час як Ubuntu, внаслідок тісного "
"розкладу релізів, більше зацікавлена у випуску стабільної версії, у якій "
"лише виправлені деякі вади. Тому ми використовуємо «Ubuntu Distributed "
"Development», де робота над кодом ведеться у різних гілках, які потім "
"зливаються один з одним після перевірки коду й достатньої кількості "
"обговорень."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:101
msgid ""
"In the example mentioned above it would make sense to ship Ubuntu with the "
"existing version of the project, add the bugfix, get it into Upstream for "
"their next release and ship that (if suitable) in the next Ubuntu release. "
"It would be the best possible compromise and a situation where everybody "
"wins."
msgstr ""
"У приведеному вище прикладі має сенс включити в Ubuntu існуючу версію "
"проєкту, зробити виправлення вад, додати їх у апстрім для наступного випуску "
"проєкту й включити його (якщо він до цього придатний) у наступний випуск "
"Ubuntu. Це буде найкращим компромісом і ситуацією у якій виграють обидві "
"сторони."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:106
msgid ""
"To fix a bug in Ubuntu, you would first get the source code for the package, "
"then work on the fix, document it so it is easy to understand for other "
"developers and users, then build the package to test it. After you have "
"tested it, you can easily propose the change to be included in the current "
"Ubuntu development release. A developer with upload rights will review it "
"for you and then get it integrated into Ubuntu."
msgstr ""
"Щоб виправити помилку в Ubuntu, потрібно спочатку отримати джерельний код "
"пакунку, попрацювати над його виправленням, забезпечити свою роботу "
"документацією, щоб іншим розробникам та користувачам було легко зрозуміти, "
"що саме Ви зробили, а потім зібрати пакунок й протестувати його. Після того, "
"як Ви протестували змінений пакунок, можна запропонувати включити його у "
"поточний розроблюваний реліз Ubuntu. Розробник з правом завантаження "
"перевірить Ваш пакунок й потім інтегрує його в Ubuntu."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:115
msgid ""
"When trying to find a solution it is usually a good idea to check with "
"Upstream and see if the problem (or a possible solution) is known already "
"and, if not, do your best to make the solution a concerted effort."
msgstr ""
"При спробі знайти вирішення корисно перевірити, чи відомо про проблему, над "
"якою Ви працюєте в апстрімі, й чи не знайдено там вже її можливе вирішення. "
"Якщо ні, зробіть усе можливе, щоб вирішити проблему спільними зусиллями."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:119
msgid ""
"Additional steps might involve getting the change backported to an older, "
"still supported version of Ubuntu and forwarding it to Upstream."
msgstr ""
"Додаткові кроки, які Ви можете зробити, — це адаптування Вашої зміни для "
"попередніх підтримуваних випусків Ubuntu й відправлення її в апстрім."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:122
msgid ""
"The most important requirements for success in Ubuntu development are: "
"having a knack for \"making things work again,\" not being afraid to read "
"documentation and ask questions, being a team player and enjoying some "
"detective work."
msgstr ""
"Найважливішими вимогами для успішної розробки в Ubuntu є: вміти «примушувати "
"речі знову працювати», не боятися читати документацію й задавати питання, "
"бути командним гравцем та мати певну схильність до роботи детектива."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:126
msgid ""
"Good places to ask your questions are ``ubuntu-motu@lists.ubuntu.com`` and "
"``#ubuntu-motu`` on ``freenode.``. You will easily find a lot of new friends "
"and people with the same passion that you have: making the world a better "
"place by making better Open Source software."
msgstr ""

#: ../ubuntu-packaging-guide/kde.rst:3
msgid "KDE Packaging"
msgstr "Робота з пакунками KDE"

#: ../ubuntu-packaging-guide/kde.rst:5
msgid ""
"Packaging of KDE programs in Ubuntu is managed by the Kubuntu and MOTU "
"teams.  You can contact the Kubuntu team on the `Kubuntu mailing list "
"<KubuntuML_>`_ and ``#kubuntu-devel`` Freenode IRC channel.  More "
"information about Kubuntu development is on the `Kubuntu wiki page <Wiki_>`_."
msgstr ""
"Створенням пакунків проґрам KDE в Ubuntu займаються команди Kubuntu і MOTU. "
"Зв’язатися з командою Kubuntu можна через `поштову розсилку Kubuntu "
"<KubuntuML_>`_ й канал Freenode IRC ``#kubuntu-devel``. Додаткова інформація "
"про розробку Kubuntu доступна на `wiki-сторінці Kubuntu <Wiki_>`_."

#: ../ubuntu-packaging-guide/kde.rst:10
msgid ""
"Our packaging follows the practices of the `Debian Qt/KDE Team "
"<QtKDETeam_>`_ and Debian KDE Extras Team.  Most of our packages are derived "
"from the packaging of these Debian teams."
msgstr ""
"При створенні пакунків ми враховуємо практику команд `Debian Qt/KDE "
"<QtKDETeam_>`_ і Debian KDE Extras. Більшість наших пакунків є похідними від "
"пакунків, створених цими командами Debian."

#: ../ubuntu-packaging-guide/kde.rst:15
msgid "Patching Policy"
msgstr "Політика створення латок"

#: ../ubuntu-packaging-guide/kde.rst:17
msgid ""
"Kubuntu does not add patches to KDE programs unless they come from the "
"upstream authors or submitted upstream with the expectation they will be "
"merged soon or we have consulted the issue with the upstream authors."
msgstr ""
"Kubuntu додає латки у застосунки KDE, лише якщо вони походять від "
"оригінальних авторів, або якщо вони були відправлені в upstream й є "
"впевненість у їх швидкому прийнятті, або якщо ми обміркували проблеми з "
"розробниками KDE."

#: ../ubuntu-packaging-guide/kde.rst:22
msgid ""
"Kubuntu does not change the branding of packages except where upstream "
"expects this (such as the top left logo of the Kickoff menu) or to simplify "
"(such as removing splash screens)."
msgstr ""
"Kubuntu не змінює фірмового оформлення пакунків, крім випадків, коли цього "
"потребує апстрім (наприклад, логотип у горішньому лівому куту меню Kickoff) "
"або для спрощення (наприклад, вилучення показуваних при запуску заставок)."

#: ../ubuntu-packaging-guide/kde.rst:27
msgid "debian/rules"
msgstr "debian/rules"

#: ../ubuntu-packaging-guide/kde.rst:29
msgid ""
"Debian packages include some additions to the basic Debhelper usage. These "
"are kept in the ``pkg-kde-tools`` package."
msgstr ""
"Пакунки Debian включають деякі доповнення до звичайного використання "
"Debhelper. Вони зберігаються у пакунку ``pkg-kde-tools``."

#: ../ubuntu-packaging-guide/kde.rst:32
msgid ""
"Packages which use Debhelper 7 should add the ``--with=kde`` option. This "
"will ensure the correct build flags are used and add options such as "
"handling kdeinit stubs and translations::"
msgstr ""
"Пакунки, що використовують Debhelper 7, повинні додати опцію ``--with=kde``. "
"Це дозволить переконатися у використанні правильних прапорців збірки і "
"опцій, таких як обробка завдань kdeinit та файлів перекладу."

#: ../ubuntu-packaging-guide/kde.rst:39
msgid ""
"Some newer KDE packages use the ``dhmk`` system, an alternative to ``dh`` "
"made by the Debian Qt/KDE team.  You can read about it in /usr/share/pkg-kde-"
"tools/qt-kde-team/2/README.  Packages using this will ``include "
"/usr/share/pkg-kde-tools/qt-kde-team/2/debian-qt-kde.mk`` instead of running "
"``dh``."
msgstr ""
"Деякі нові пакунки KDE використовують систему ``dhmk``, альтернативу ``dh``, "
"створену командою Debian Qt/KDE. Прочитати про неї можна в /usr/share/pkg-"
"kde-tools/qt-kde-team/2/README. Пакунки що її використовують будуть "
"``включати /usr/share/pkg-kde-tools/qt-kde-team/2/debian-qt-kde.mk`` замість "
"запуску ``dh``."

#: ../ubuntu-packaging-guide/kde.rst:47
msgid "Translations"
msgstr "Переклади"

#: ../ubuntu-packaging-guide/kde.rst:49
msgid ""
"Packages in main have their translations imported into Launchpad and "
"exported from Launchpad into Ubuntu's language-packs."
msgstr ""
"Переклади пакунків з репозиторію main імпортуються на Launchpad і "
"експортуються з Launchpad у мовні пакунки Ubuntu."

#: ../ubuntu-packaging-guide/kde.rst:52
msgid ""
"So any KDE package in main must generate translation templates, include or "
"make available upstream translations and handle ``.desktop`` file "
"translations."
msgstr ""
"Отже, кожен KDE-пакунок в main повинен створювати шаблони перекладів, "
"включати оригінальні переклади і опрацьовувати рядки що перекладаються у "
"``.desktop``-файлах."

#: ../ubuntu-packaging-guide/kde.rst:56
msgid ""
"To generate translation templates the package must include a ``Messages.sh`` "
"file; complain to the upstream if it does not.  You can check it works by "
"running ``extract-messages.sh`` which should produce one or more ``.pot`` "
"files in ``po/``.  This will be done automatically during build if you use "
"the ``--with=kde`` option to ``dh``."
msgstr ""
"Для генерації шаблонів перекладів пакунок повинен містити файл "
"``Messages.sh``; якщо його там немає, зверніться в апстрім. Перевірити його "
"роботу можна, виконавши сценарій ``extract-messages.sh``, який повинен "
"створити один або декілька файлів ``.pot`` у каталозі ``po/``. У процесі "
"збирання це буде зроблено автоматично, якщо Ви використовуєте опцію ``--"
"with=kde`` для ``dh``."

#: ../ubuntu-packaging-guide/kde.rst:63
msgid ""
"Upstream will usually have also put the translation ``.po`` files into the "
"``po/`` directory.  If they do not, check if they are in separate upstream "
"language packs such as the KDE SC language packs.  If they are in separate "
"language packs Launchpad will need to associate these together manually, "
"contact `David Planella <dpm_>`_ to do this."
msgstr ""
"Апстрім зазвичай також поміщає файли перекладів ``.po`` у каталог ``po/``. "
"Якщо їх там немає, перевірте, чи не виділені вони у один з окремих мовних "
"пакунків апстріму, наприклад, у мовні пакунки KDE SC. Якщо вони у окремому "
"мовному пакунку, на Launchpad необхідно збирати їх разом вручну. "
"Проконсультуйтеся з цього приводу з `Девідом Планеллою (David Planella) "
"<dpm_>`_."

#: ../ubuntu-packaging-guide/kde.rst:69
msgid ""
"If a package is moved from universe to main it will need to be re-uploaded "
"before the translations get imported into Launchpad."
msgstr ""
"Якщо пакунок переміщений з universe в main, його слід перевивантажити перед "
"імпортом перекладів на Launchpad."

#: ../ubuntu-packaging-guide/kde.rst:72
msgid ""
"``.desktop`` files also need translations.  We patch KDELibs to read "
"translations out of ``.po`` files which are pointed to by a line ``X-Ubuntu-"
"Gettext-Domain=`` added to ``.desktop`` files at package build time.  A .pot "
"file for each package is be generated at build time and .po files need to be "
"downloaded from upstream and included in the package or in our language "
"packs.  The list of .po files to be downloaded from KDE's repositories is in "
"``/usr/lib/kubuntu-desktop-i18n/desktop-template-list``."
msgstr ""
"Файли ``.desktop`` також потребують перекладу. Ми додали латку до KDELibs "
"для читання перекладів з ``.po``-файлів, що вказують на рядок ``X-Ubuntu-"
"Gettext-Domain=``, що додається до файлів ``.desktop`` під час збірки "
"пакунку. Файл .pot для кожного пакунку генерується під час збірки й .po-"
"файли необхідно стягнути з апстріму і включити у пакунок або в наші мовні "
"пакунки. Перелік .po-файлів, які потрібно стягнути зі сховищ KDE, "
"знаходиться в ``/usr/lib/kubuntu-desktop-i18n/desktop-template-list``."

#: ../ubuntu-packaging-guide/kde.rst:82
msgid "Library Symbols"
msgstr "Бібліотекові символи"

#: ../ubuntu-packaging-guide/kde.rst:84
msgid ""
"Library symbols are tracked in ``.symbols`` files to ensure none go missing "
"for new releases.  KDE uses C++ libraries which act a little differently "
"compared to C libraries.  Debian's Qt/KDE Team have scripts to handle this. "
"See `Working with symbols files <SymbolsFiles_>`_ for how to create and keep "
"these files up to date."
msgstr ""
"Бібліотекові символи відстежуються за допомогою файлів ``.symbols``, які "
"дозволяють переконатися, що усе на місці. KDE використовує бібліотеки C++, "
"які діють дещо інакше, ніж бібліотеки C. Для Debian команда Qt/KDE створила "
"скрипти, які дозволяють подолати це. Документ `Робота з файлами symbols "
"<SymbolsFiles_>`_ дає опис, як створювати й оновлювати такі файли."

#: ../ubuntu-packaging-guide/libraries.rst:3
msgid "Shared Libraries"
msgstr "Спільні бібліотеки"

#: ../ubuntu-packaging-guide/libraries.rst:5
msgid ""
"Shared libraries are compiled code which is intended to be shared among "
"several different programs.  They are distributed as ``.so`` files in "
"``/usr/lib/``."
msgstr ""
"Спільні бібліотеки — це скомпільований код, призначений для спільного "
"використання декількома різними проґрамами. Вони розповсюджуються у вигляді "
"файлів ``.so`` в ``/usr/lib/``."

#: ../ubuntu-packaging-guide/libraries.rst:9
msgid ""
"A library exports symbols which are the compiled versions of functions, "
"classes and variables.  A library has a name called an SONAME which includes "
"a version number.  This SONAME version does not necessarily match the public "
"release version number.  A program gets compiled against a given SONAME "
"version of the library.  If any of the symbols is removed or changes then "
"the version number needs to be changed which forces any packages using that "
"library to be recompiled against the new version.  Version numbers are "
"usually set by upstream and we follow them in our binary package names "
"called an ABI number, but sometimes upstreams do not use sensible version "
"numbers and packagers have to keep separate version numbers."
msgstr ""
"Бібліотеки експортують символи у скомпільованому вигляді: функції, кляси та "
"змінні. В кожної бібліотеки також є назва SONAME, що включає номер її "
"версії, але який не обов’язково збігається з офіційним номером релізу. "
"Проґрами компілюються з конкретним SONAME бібліотеки. Так, якщо якийсь з "
"символів бібліотеки був вилучений або змінений -- небхідно змінити версію з "
"тим, щоб усі залежні від бібліотеки пакунки були перекомпільовані з "
"використанням нової версії. Зазвичай версії встановлюються у джерелі, й ми "
"використовуємо ті ж номери версій для двійкових пакунків, що називаються "
"\"номер ABI\", але у випадку, якщо джерело не використовує притомної "
"версійності, творці пакунків можуть використовувати окрему, традиційнішу "
"нумерацію."

#: ../ubuntu-packaging-guide/libraries.rst:21
msgid ""
"Libraries are usually distributed by upstream as standalone releases. "
"Sometimes they are distributed as part of a program.  In this case they can "
"be included in the binary package along with the program (this is called "
"bundling) if you do not expect any other programs to use the library, more "
"often they should be split out into separate binary packages."
msgstr ""
"Бібліотеки зазвичай розповсюджуються апстрімом у вигляді окремих випусків. "
"Інколи вони розповсюджуються, як частина проґрами. У останньому випадку вони "
"можуть бути включені у двійковий пакунок разом з проґрамою (це зветься "
"bundling), якщо Ви не припускаєте використання цих бібліотек іншими "
"проґрамами, але частіше їх усе ж слід виділяти у окремі двійкові пакунки."

#: ../ubuntu-packaging-guide/libraries.rst:27
msgid ""
"The libraries themselves are put into a binary package named ``libfoo1`` "
"where ``foo`` is the name of the library and ``1`` is the version from the "
"SONAME. Development files from the package, such as header files, needed to "
"compile programs against the library are put into a package called ``libfoo-"
"dev``."
msgstr ""
"Самі бібліотеки поміщаються у двійковий пакунок з іменем ``libfoo1``, де "
"``foo`` — ім’я бібліотеки, а ``1`` — версія з SONAME. Файли розробки з "
"пакунку, такі як заголовкові файли, необхідні для компілювання проґрам з "
"бібліотекою, поміщаються у пакунок з іменем ``libfoo-dev``."

#: ../ubuntu-packaging-guide/libraries.rst:34
msgid "An Example"
msgstr "Приклад"

#: ../ubuntu-packaging-guide/libraries.rst:36
msgid "We will use libnova as an example::"
msgstr "У якості прикладу ми використовуємо libnova::"

#: ../ubuntu-packaging-guide/libraries.rst:41
msgid "To find the SONAME of the library run::"
msgstr "Щоб знайти SONAME бібліотеки, виконайте::"

#: ../ubuntu-packaging-guide/libraries.rst:45
msgid ""
"The SONAME is ``libnova-0.12.so.2``, which matches the file name (usually "
"the case but not always). Here upstream has put the upstream version number "
"as part of the SONAME and given it an ABI version of ``2``.  Library package "
"names should follow the SONAME of the library they contain. The library "
"binary package is called ``libnova-0.12-2`` where ``libnova-0.12`` is the "
"name of the library and ``2`` is our ABI number."
msgstr ""
"SONAME у даному випадку ``libnova-0.12.so.2``, що відповідає імені файлу (як "
"правило, але не завжди). Тут апстрім помістив номер версії з апстріму, як "
"частину SONAME, й задав ABI-версію ``2``. Імена бібліотекових пакунків "
"повинні слідувати SONAME бібліотеки, яку вони містять. Двійковий "
"бібліотековий пакунок зветься ``libnova-0.12-2``, де ``libnova-0.12`` — ім’я "
"бібліотеки, а ``2`` — наш ABI-номер."

#: ../ubuntu-packaging-guide/libraries.rst:52
msgid ""
"If upstream makes incompatible changes to their library they will have to "
"reversion their SONAME and we will have to rename our library.  Any other "
"packages using our library package will need to recompiled against the new "
"version, this is called a transition and can take some effort. Hopefully our "
"ABI number will continue to match upstream's SONAME but sometimes they "
"introduce incompatibilities without changing their version number and we "
"will need to change ours."
msgstr ""
"Якщо автори з апстріму внесли несумісні зміни у свою бібліотеку, вони "
"повинні змінити номер версії SONAME, а ми повинні перейменувати нашу "
"бібліотеку. Будь-які інші пакунки, що використовують наш бібліотековий "
"пакунок, потрібно буде перекомпілювати з новою версією, це зветься переходом "
"(transition) й потребує певних зусиль. Потрібно сподіватися, наш ABI-номер "
"продовжить відповідати SONAME апстріму, але інколи вони вносять несумісності "
"без зміни їх номеру версії, а нам потрібно змінити наш."

#: ../ubuntu-packaging-guide/libraries.rst:60
msgid ""
"Looking in debian/libnova-0.12-2.install we see it includes two files::"
msgstr ""
"Поглянувши на debian/libnova-0.12-2.instal, ми побачимо, що він включає у "
"себе два файли::"

#: ../ubuntu-packaging-guide/libraries.rst:65
msgid ""
"The last one is the actual library, complete with minor and point version "
"number.  The first one is a symlink which points to the actual library.  The "
"symlink is what programs using the library will look for, the running "
"programs do not care about the minor version number."
msgstr ""
"Другий рядок — справжня бібліотека, з повним номером версії. Перше — "
"символьне посилання, що вказує на справжню бібліотеку. Проґрами, що "
"використовують бібліотеку, как правило, будуть користуватися символічним "
"посиланням."

#: ../ubuntu-packaging-guide/libraries.rst:70
msgid ""
"``libnova-dev.install`` includes all the files needed to compile a program "
"with this library.  Header files, a config binary, the ``.la`` libtool file "
"and ``libnova.so`` which is another symlink pointing at the library, "
"programs compiling against the library do not care about the major version "
"number (although the binary they compile into will)."
msgstr ""
"``libnova-dev.install`` містить усі файли, необхідні для компілювання "
"проґрами з даною бібліотекою. Заголовкові файли, бінарник конфігурації, файл "
"libtool'a ``.la``, а також ``libnova.so`` -- ще один симлінк на бібліотеку, "
"створюваний з тим, щоб проґрами могли компілюватися поза залежністю від "
"старшого номеру версії (при цьому, скомпільваний застосунок все одно буде "
"залежати від версії)."

#: ../ubuntu-packaging-guide/libraries.rst:76
msgid ""
"``.la`` libtool files are needed on some non-Linux systems with poor library "
"support but usually cause more problems than they solve on Debian systems.  "
"It is a current `Debian goal to remove .la files <LAFileRemoval_>`_ and we "
"should help with this."
msgstr ""
"``.la``-файли libtool'у потрібні на деяких не-Linux системах з обмеженою "
"підтримкою бібліотек, але на системах Debian часто створюють більше проблем, "
"ніж вирішують. `Мета Debian відмовитися від .la-файлів <LAFileRemoval_>`_ "
"сьогодні вельми актуальна, й Ви можете допомогти з вирішенням цього завдання."

#: ../ubuntu-packaging-guide/libraries.rst:82
msgid "Static Libraries"
msgstr "Статичні бібліотеки"

#: ../ubuntu-packaging-guide/libraries.rst:84
msgid ""
"The -dev package also ships ``usr/lib/libnova.a``.  This is a static "
"library, an alternative to the shared library.  Any program compiled against "
"the static library will include the code directory into itself.  This gets "
"round worrying about binary compatibility of the library.  However it also "
"means that any bugs, including security issues, will not be updated along "
"with the library until the program is recompiled.  For this reason programs "
"using static libraries are discouraged."
msgstr ""
"Пакунок -dev також містить ``usr/lib/libnova.a``. Це статична бібліотека, "
"альтернатива спільній бібліотеці. Будь-яка проґрама, скомпільована зі "
"статичною бібліотекою, містить її код безпосередньо у собі. Це дозволяє не "
"бентежитися про двійкову сумісність бібліотеки. Втім це також значить, що "
"будь-які помилки, у тому числі вразливості у безпеці, не будуть виправлені "
"за рахунок оновлення бібліотеки, поки проґрама не буде перекомпільована. З "
"цієї причини використовувати проґрами з статичними бібліотеками не радимо."

#: ../ubuntu-packaging-guide/libraries.rst:94
msgid "Symbol Files"
msgstr "Символьні файли"

#: ../ubuntu-packaging-guide/libraries.rst:96
msgid ""
"When a package builds against a library the ``shlibs`` mechanism will add a "
"package dependency on that library.  This is why most programs will have "
"``Depends: ${shlibs:Depends}`` in ``debian/control``.  That gets replaced "
"with the library dependencies at build time.  However shlibs can only make "
"it depend on the major ABI version number, ``2`` in our libnova example, so "
"if new symbols get added in libnova 2.1 a program using these symbols could "
"still be installed against libnova ABI 2.0 which would then crash."
msgstr ""
"Коли додаток компілюється з бібліотекою, механізм ``shlibs`` додасть до "
"пакунку залежність від цієї бібліотеки. Саме тому більшість проґрам містять "
"``Depends: ${shlibs:Depends}`` у файлі ``debian/control``. Це замінюється "
"переліком залежних бібліотек при білді. Втім shlibs може лише вказувати "
"залежність від старшої ABI-версії , ``2`` у нашому прикладі з libnova, тож "
"якщо нові символи будуть додані у майбутній libnova 2.1 -- застосунок буде "
"запускатися й зі старішою версією libnova ABI 2.0, що призведе до аварійного "
"завершення."

#: ../ubuntu-packaging-guide/libraries.rst:104
msgid ""
"To make the library dependencies more precise we keep ``.symbols`` files "
"that list all the symbols in a library and the version they appeared in."
msgstr ""
"Щоб точніше вказувати залежності від бібліотек, ми створили файл "
"``.symbols``, який перераховує усі символи бібліотеки й версії, у яких вони "
"з’явилися."

#: ../ubuntu-packaging-guide/libraries.rst:107
msgid ""
"libnova has no symbols file so we can create one.  Start by compiling the "
"package::"
msgstr ""
"libnova не має символьного файлу, тож ми можемо створити його. Почніть з "
"компілювання пакунку::"

#: ../ubuntu-packaging-guide/libraries.rst:112
msgid ""
"The ``-nc`` will cause it to finish at the end of compilation without "
"removing the built files.  Change to the build and run ``dpkg-gensymbols`` "
"for the library package::"
msgstr ""
"Опція ``-nc`` вказує не вилучати збірочні файли після завершення "
"компілювання. Перейдіть у каталог збірки й виконайте ``dpkg-gensymbols`` для "
"пакунку бібліотеки::"

#: ../ubuntu-packaging-guide/libraries.rst:119
msgid "This makes a diff file which you can self apply::"
msgstr "Це створить diff-файл, який Ви зможете застосувати самостійно::"

#: ../ubuntu-packaging-guide/libraries.rst:123
msgid ""
"Which will create a file named similar to ``dpkg-gensymbolsnY_WWI`` that "
"lists all the symbols.  It also lists the current package version.  We can "
"remove the packaging version from that listed in the symbols file because "
"new symbols are not generally added by new packaging versions, but by the "
"upstream developers::"
msgstr ""
"Це створить файл з іменем вигляду ``dpkg-gensymbolsnY_WWI``, у якому будуть "
"перераховані усі символи. Він також вказує поточну версію пакунку. Версію "
"пакунку можна прибрати з файлу, оскільки нові символи зазвичай додаються не "
"з новою версією пакунку, а розробниками початкової бібліотеки."

#: ../ubuntu-packaging-guide/libraries.rst:130
msgid "Now move the file into its location, commit and do a test build::"
msgstr ""
"Тепер перемістіть файл туди, де він має знаходитися, зафіксуйте зміни та "
"виконайте тестову збірку::"

#: ../ubuntu-packaging-guide/libraries.rst:138
msgid ""
"If it successfully compiles the symbols file is correct.  With the next "
"upstream version of libnova you would run dpkg-gensymbols again and it will "
"give a diff to update the symbols file."
msgstr ""
"Якщо компілювання виконується успішно, значить символьний файл не містить "
"вад. З виходом наступної апстрім-версії libnova Вам доведеться знову "
"запустити dpkg-gensymbols, щоб створити diff для оновлення символьного файлу."

#: ../ubuntu-packaging-guide/libraries.rst:143
msgid "C++ Library Symbols Files"
msgstr "Символьні файли бібліотек C++"

#: ../ubuntu-packaging-guide/libraries.rst:145
msgid ""
"C++ has even more exacting standards of binary compatibility than C.  The "
"Debian Qt/KDE Team maintain some scripts to handle this, see their `Working "
"with symbols files <SymbolsFiles_>`_ page for how to use them."
msgstr ""
"В мови C++ більш суворі стандарти на двійкову сумісність, ніж у C. Команда "
"Debian Qt/KDE підтримує деякі скрипти, які допоможуть подолати це: сторінка "
"`Робота з файлами symbols <SymbolsFiles_>`_ дає опис принципів їх "
"використання."

#: ../ubuntu-packaging-guide/libraries.rst:152
msgid ""
"Junichi Uekawa's `Debian Library Packaging Guide <LibraryGuide_>`_ goes into "
"this topic in more detail."
msgstr ""
"Стаття Junichi Uekawa `Пакункування бібліотек для Debian <LibraryGuide_>`_ "
"розглядає це питання детальніше."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:3
msgid "Packaging New Software"
msgstr "Створення пакунків для нових проґрам"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:5
msgid ""
"While there are thousands of packages in the Ubuntu archive, there are still "
"a lot nobody has gotten to yet. If there is an exciting new piece of "
"software that you feel needs wider exposure, maybe you want to try your hand "
"at creating a package for Ubuntu or a PPA_. This guide will take you through "
"the steps of packaging new software."
msgstr ""
"Хоч у архіві Ubuntu є тисячі пакунків, вистачає проґрам, якими ніхто не "
"займається. Якщо Ви знаєте про якусь чудову проґраму, про яку, на Вашу "
"думку, варто взнати ширшому колу користувачів, Ви можете спробувати докласти "
"свою руку до створення пакунку для Ubuntu або PPA_. Цей посібник проведе Вас "
"через етапи створення пакунку для нової проґрами."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:11
msgid ""
"You will want to read the :doc:`Getting Set Up<./getting-set-up>` article "
"first in order to prepare your development environment."
msgstr ""
"Спочатку Вам слід прочитати статтю :doc:`Підготовка<./getting-set-up>`, щоб "
"підготувати своє середовище розробки."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:15
msgid "Checking the Program"
msgstr "Перевірка проґрами"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:17
msgid ""
"The first stage in packaging is to get the released tar from upstream (we "
"call the authors of applications \"upstream\") and check that it compiles "
"and runs."
msgstr ""
"Першим етапом створення пакунку є отримання tar-файлу з апстріму "
"(«апстрімом» ми звемо авторів застосунків) й перевірка того, що він "
"нормально компілюється та запускається."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:20
msgid ""
"This guide will take you through packaging a simple application called GNU "
"Hello which has been posted on GNU.org_."
msgstr ""
"Цей посібник проведе Вас через процес створення пакунку для невеликого "
"застосунку GNU Hello, доступного на GNU.org_."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:23
msgid ""
"If you don't have the build tools lets make sure we have them first.  Also "
"if you don't have the required dependencies lets install those as well."
msgstr ""
"Якщо в Вас ще немає інструментів збірки, встановіть їх. Також встановіть усі "
"необхідні залежності."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:26
msgid "Install build tools::"
msgstr "Встановимо інструменти збірки::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:30
msgid "Download main package::"
msgstr "Стягнемо основний пакунок::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:34
msgid "Now uncompress main package::"
msgstr "Тепер розпакуємо основний пакунок::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:39
msgid ""
"This application uses the autoconf build system so we want to run "
"``./configure`` to prepare for compilation."
msgstr ""
"Цей застосунок використовує систему збірки autoconf, тож нам потібно "
"запустити ``./configure`` для підготовки до компілювання."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:42
msgid ""
"This will check for the required build dependencies. As ``hello`` is a "
"simple example, ``build-essential`` should provide everything we need. For "
"more complex programs, the command will fail if you do not have the needed "
"libraries and development files. Install the needed packages and repeat "
"until the command runs successfully.::"
msgstr ""
"При цьому буде перевірено наявність необхідних для збірки залежностей. "
"Оскільки ``hello`` — простий приклад, ``build-essential`` забезпечить нас "
"усім, що потрібно. Для складніших проґрам, команда завершиться помилкою, "
"якщо в нас немає необхідних бібліотек і файлів для розробки. Встановіть "
"потрібні пакунки й повторіть процес, поки команда не завершиться з успіхом.::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:50
msgid "Now you can compile the source::"
msgstr "Тепер потрібно скомпілювати джерельний код::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:54
msgid ""
"If compilation completes successfully you can install and run the program::"
msgstr ""
"Якщо компілювання завершилося успішно, можна встановити та запустити "
"проґраму::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:60
msgid "Starting a Package"
msgstr "Створення пакунку"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:62
msgid ""
"``bzr-builddeb`` includes a plugin to create a new package from a template. "
"The plugin is a wrapper around the ``dh_make`` command. You should already "
"have these if you installed ``packaging-dev``. Run the command providing the "
"package name, version number, and path to the upstream tarball::"
msgstr ""
"``bzr-builddeb`` містить модуль для створення нового пакунку з шаблону. Цей "
"модуль є обгорткою навколо команди ``dh_make`` . Він вже повинен бути в Вас, "
"якщо Ви встановили ``packaging-dev``. Запустіть команду, вказавши ім’я "
"пакунку, номер версії та шлях до tar-архіву з апстріму::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:71
msgid ""
"When it asks what type of package type ``s`` for single binary. This will "
"import the code into a branch and add the ``debian/`` packaging directory.  "
"Have a look at the contents.  Most of the files it adds are only needed for "
"specialist packages (such as Emacs modules) so you can start by removing the "
"optional example files::"
msgstr ""
"Коли він спитає тип пакунку, оберіть ``s``: одинарний бінарник. Це імпортує "
"код у гілку й створить теку ``debian/``. Погляньте на її вміст: більшість "
"автоматично створених файлів потрібні лише для спеціялізованих пакунків "
"(наприклад модулі Emacs), тож можна почати з вилучення зайвих файлів::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:80
msgid "You should now customise each of the files."
msgstr "Тепер потрібно внести зміни у кожен з файлів."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:82
msgid ""
"In ``debian/changelog`` change the version number to an Ubuntu version: "
"``2.7-0ubuntu1`` (upstream version 2.7, Debian version 0, Ubuntu version 1). "
" Also change ``unstable`` to the current development Ubuntu release such as "
"``trusty``."
msgstr ""
"В ``debian/changelog`` змініть номер версії на версію Ubuntu: ``2.7-"
"0ubuntu1`` (апстрім-версія 2.7, версія в Debian 0, версія в Ubuntu 1). Також "
"змініть ``unstable`` на поточний розроблюваний випуск Ubuntu, наприклад, "
"``trusty``."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:87
msgid ""
"Much of the package building work is done by a series of scripts called "
"``debhelper``.  The exact behaviour of ``debhelper`` changes with new major "
"versions, the compat file instructs ``debhelper`` which version to act as.  "
"You will generally want to set this to the most recent version which is "
"``9``."
msgstr ""
"Велика частина процесу компілювання пакунку здійснюється скриптами з "
"``debhelper``. Оскільки поведінка ``debhelper`` змінюється при виході "
"старшої версії, файл compat повідомляє ``debhelper`` яку саме версію "
"використовувати. Має сенс використовувати найсвіжішу версію: ``9``."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:93
msgid ""
"``control`` contains all the metadata of the package.  The first paragraph "
"describes the source package. The second and following paragraphs describe "
"the binary packages to be built.  We will need to add the packages needed to "
"compile the application to ``Build-Depends:``. For ``hello``, make sure that "
"it includes at least::"
msgstr ""
"Файл ``control`` містить усі метадані пакунку. Перший абзац дає опис пакунку "
"джерельних кодів. Другий та наступні абзаци дають опис двійкових пакунків, "
"які повинні бути зібрані. Нам знадобиться додати пакунки, необхідні для "
"компілювання додатку в ``Build-Depends:``. Для ``hello`` він має включати, "
"як мінімум::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:101
msgid ""
"You will also need to fill in a description of the program in the "
"``Description:`` field."
msgstr "Також потрібно заповнити опис проґрами у полі ``Description:``."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:104
msgid ""
"``copyright`` needs to be filled in to follow the licence of the upstream "
"source.  According to the hello/COPYING file this is GNU GPL 3 or later."
msgstr ""
"``copyright`` потрібно заповнити у відповідності з ліцензією на джерело з "
"апстріму. Згідно файлу hello/COPYING, це ліцензія GNU GPL 3 або пізніша її "
"версія."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:107
msgid ""
"``docs`` contains any upstream documentation files you think should be "
"included in the final package."
msgstr ""
"``docs`` повинен містити будь-які файли документації з апстріму, які, на "
"Вашу думку, мають бути включені у готовий пакунок."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:110
msgid ""
"``README.source`` and ``README.Debian`` are only needed if your package has "
"any non-standard features, we don't so you can delete them."
msgstr ""
"``README.source`` і ``README.Debian`` необхідні, лише якщо Ваш пакунок має "
"якісь нестандартні функції. В нас таких немає, тож можна вилучити ці файли."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:113
msgid ""
"``source/format`` can be left as is, this describes the version format of "
"the source package and should be ``3.0 (quilt)``."
msgstr ""
"``source/format`` можна залишити як є, він дає опис формату версії пакунку "
"джерельного коду, який повинен бути ``3.0 (quilt)``."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:116
msgid ""
"``rules`` is the most complex file.  This is a Makefile which compiles the "
"code and turns it into a binary package.  Fortunately most of the work is "
"automatically done these days by ``debhelper 7`` so the universal ``%`` "
"Makefile target just runs the ``dh`` script which will run everything needed."
msgstr ""
"``rules`` — найскладніший файл. Це Makefile, який компілює код й перетворює "
"його у двійковий пакунок. На щастя, основну частину роботи на сьогодні "
"автоматично виконує ``debhelper 7``, тож універсальна мета ``%`` просто "
"запускає сценарій ``dh``, який робить усе, що потрібно."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:121
msgid ""
"All of these file are explained in more detail in the :doc:`overview of the "
"debian directory<./debian-dir-overview>` article."
msgstr ""
"Детальніший опис усіх цих фалів у статті :doc:`огляд каталогу debian "
"<./debian-dir-overview>`."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:124
msgid "Finally commit the code to your packaging branch::"
msgstr "Нарешті, закоммте код у гілку для пакунків::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:130
msgid "Building the package"
msgstr "Збірка пакунку"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:132
msgid ""
"Now we need to check that our packaging successfully compiles the package "
"and builds the .deb binary package::"
msgstr ""
"Тепер нам потрібно перевірити, що наші джерельні файли для пакунку успішно "
"компілюються й збираються у двійковий .deb-пакунок::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:138
msgid ""
"``bzr builddeb`` is a command to build the package in its current location. "
"The ``-us -uc`` tell it there is no need to GPG sign the package.  The "
"result will be placed in ``..``."
msgstr ""
"``bzr builddeb`` — це команда для збірки пакунку у його поточному "
"місцезнаходженні. ``-us -uc`` повідомляє що підписувати пакунок за допомогою "
"GPG не потрібно. Результат буде поміщений у каталог «..»."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:142
msgid "You can view the contents of the package with::"
msgstr "Продивитися вміст пакунку можна за допомогою::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:146
msgid ""
"Install the package and check it works (later you will be able to uninstall "
"it using ``sudo apt-get remove hello`` if you want)::"
msgstr ""
"Встановіть пакунок й перевірте, що він працює (пізніше за бажання Ви зможете "
"вилучити його командою ``sudo apt-get remove hello``)::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:151
msgid "You can also install all packages at once using::"
msgstr "Можете також встановити усі пакунки одразу за допомогою::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:156
msgid "Next Steps"
msgstr "Наступні кроки"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:158
msgid ""
"Even if it builds the .deb binary package, your packaging may have bugs.  "
"Many errors can be automatically detected by our tool ``lintian`` which can "
"be run on the source .dsc metadata file, .deb binary packages or .changes "
"file::"
msgstr ""
"Навіть якщо двійковий .deb-пакунок успішно збирається, Ваші джерельні файли "
"для пакунку можуть містити помилки. Багато помилок можуть автоматично "
"виявлятися нашим інструментом ``lintian``, який можна застосувати до файлу "
"метаданих .dsc, двійкових пакунків .deb або файлу .changes::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:166
msgid ""
"To see verbose description of the problems use ``--info`` lintian flag or "
"``lintian-info`` command."
msgstr ""
"Щоб побачити детальний опис вад, використовуйте прапорець lintian ``--info`` "
"або команду ``lintian-info``."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:169
msgid ""
"For Python packages, there is also a ``lintian4python`` tool that provides "
"some additional lintian checks."
msgstr ""
"Для пакунків Python є також інструмент ``lintian4python``, здійснюючий деякі "
"додаткові перевірки lintian."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:172
msgid ""
"After making a fix to the packaging you can rebuild using ``-nc`` \"no "
"clean\" without having to build from scratch::"
msgstr ""
"Після створення виправлення для файлів пакунку можна перезібрати його з "
"параметром ``-nc`` (\"no clean\"), щоб не починати збірку з самого початку::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:177
msgid ""
"Having checked that the package builds locally you should ensure it builds "
"on a clean system using ``pbuilder``. Since we are going to upload to a PPA "
"(Personal Package Archive) shortly, this upload will need to be *signed* to "
"allow Launchpad to verify that the upload comes from you (you can tell the "
"upload will be signed because the ``-us`` and ``-uc`` flags are not passed "
"to ``bzr builddeb`` like they were before). For signing to work you need to "
"have set up GPG. If you haven't set up ``pbuilder-dist`` or GPG yet, "
":doc:`do so now<./getting-set-up>`::"
msgstr ""
"Переконавшись, що пакунок успішно збирається локально, Ви повинні "
"перевірити, чи правильно його збирання буде відбуватися у чистій системі, за "
"допомогою ``pbuilder``. Оскільки незабаром ми збираємося завантажити його в "
"PPA (персональний архів пакунків), це завантаження потрібно забезпечити "
"*цифровим підписом*, щоб Launchpad міг переконатися, що завантаження зробили "
"Ви (дізнатися про те, що завантаження буде підписане, можна за відсутністю "
"передаваних ``bzr builddeb`` прапорців ``-us`` і ``-uc``, які ми "
"використовували раніше). Для підписування своєї роботи Вам знадобиться "
"налаштувати GPG. Якщо Ви ще не налаштували ``pbuilder-dist`` або GPG, "
":doc:`зробіть це зараз<./getting-set-up>`::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:190
msgid ""
"When you are happy with your package you will want others to review it.  You "
"can upload the branch to Launchpad for review::"
msgstr ""
"Після того як Ви залишитеся задоволені отриманим пакунком, потрібно, щоб "
"його перевірили інші люди. Ви можете вивантажити гілку на Launchpad для "
"перевірки::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:195
msgid ""
"Uploading it to a PPA will ensure it builds and give an easy way for you and "
"others to test the binary packages.  You will need to set up a PPA in "
"Launchpad and then upload with ``dput``::"
msgstr ""
"Вивантаження в PPA дозволить переконатися, що пакунок збирається нормально, "
"а також дозволить Вам і решті тестувати бінарні пакунки. Вам знадобиться "
"створити PPA на Launchpad, після чого вивантажити пакунок за допомогою "
"``dput``::"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:201
msgid "See :doc:`uploading<./udd-uploading>` for more information."
msgstr ""
"Дивіться розділ «:doc:`Завантаження<./udd-uploading>`» для додаткової "
"інформації."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:203
msgid ""
"You can ask for reviews in ``#ubuntu-motu`` IRC channel, or on the `MOTU "
"mailing list <ubuntu-motu_>`_.  There might also be a more specific team you "
"could ask such as the GNU team for more specific questions."
msgstr ""
"Попрохати провести review можна на каналі IRC ``#ubuntu-motu``, або у "
"`переліку розсилки MOTU <ubuntu-motu_>`_. У деяких випадках може знадобитися "
"участь конкретної команди: у подібних випадках команда GNU допоможе "
"розібратися."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:208
msgid "Submitting for inclusion"
msgstr "Відправка на включення"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:210
msgid ""
"There are a number of paths that a package can take to enter Ubuntu. In most "
"cases, going through Debian first can be the best path. This way ensures "
"that your package will reach the largest number of users as it will be "
"available in not just Debian and Ubuntu but all of their derivatives as "
"well. Here are some useful links for submitting new packages to Debian:"
msgstr ""
"Існує декілька шляхів, якими пакунок може потрапити в Ubuntu. У більшості "
"випадків кращим шляхом може бути проходження спочатку через Debian. Це "
"дозволить Вашому пакунку стати доступним для щонайбільшої кількості "
"користувачів, оскільки він буде доступний не лише в Debian та Ubuntu, але й "
"в усіх дистрибутивах, створених на їх основі. Ось декілька корисних посилань "
"з відправки нових пакунків в Debian:"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:217
msgid ""
"`Debian Mentors FAQ <MentorsFAQ_>`_ - debian-mentors is for the mentoring of "
"new and prospective Debian Developers. It is where you can find a sponsor to "
"upload your package to the archive."
msgstr ""
"`Debian Mentors FAQ <MentorsFAQ_>`_ - debian-mentors створений для "
"менторства нових і перспективних розробників Debian. Це те місце, де можна "
"знайти спонсора для завантаження Вашого пакунку в архів."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:221
msgid ""
"`Work-Needing and Prospective Packages <WNPP_>`_ - Information on how to "
"file \"Intent to Package\" and \"Request for Package\" bugs as well as list "
"of open ITPs and RFPs."
msgstr ""
"`Work-Needing and Prospective Packages <WNPP_>`_ - інформація про те як "
"відправляти баги \"Intent to Package\" (Призначення пакунку) і \"Request for "
"Package\" (Запит пакунку), а також переліки відкритих ITP та RFP."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:225
msgid ""
"`Debian Developer's Reference, 5.1. New packages <DevRef_>`_ - The entire "
"document is invaluable for both Ubuntu and Debian packagers. This section "
"documents processes for submitting new packages."
msgstr ""
"`Посібник Розробника Debian, 5.1. Створення пакунків <DevRef_>`_ - безцінний "
"документ для творців пакунків як під Ubuntu, так й під Debian. Даний розділ "
"дає опис процесу відправки нових пакунків."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:229
msgid ""
"In some cases, it might make sense to go directly into Ubuntu first. For "
"instance, Debian might be in a freeze making it unlikely that your package "
"will make it into Ubuntu in time for the next release. This process is "
"documented on the `\"New Packages\" <NewPackages_>`_ section of the Ubuntu "
"wiki."
msgstr ""
"У деяких випадках має сенс відправлятися прямо в Ubuntu. Наприклад, якщо "
"Debian знаходиться у стані \"freeze\": тоді Ваш пакунок навряд встигне "
"увійти в Ubuntu до найближчого релізу. Опис цього процесу на сторінці "
"`\"Нові Пакунки\" <NewPackages_>`_ Ubuntu Wiki."

#: ../ubuntu-packaging-guide/packaging-new-software.rst:235
msgid "Screenshots"
msgstr "Знятки екрану"

#: ../ubuntu-packaging-guide/packaging-new-software.rst:237
msgid ""
"Once you have uploaded a package to debian, you should add screenshots to "
"allow propective users to see what the program is like. These should be "
"uploaded to http://screenshots.debian.net/upload ."
msgstr ""
"Завантаживши пакунок в Debian, Вам слід додати знятки екрану, аби майбутні "
"користувачі змогли отримати уяву про те, як виглядає інтерфейс проґрами. "
"Знятки потрібно відправляти на http://screenshots.debian.net/upload ."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:3
msgid "Patches to Packages"
msgstr "Латки для пакунків"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:5
msgid ""
"Sometimes, Ubuntu package maintainers have to change the upstream source "
"code in order to make it work properly on Ubuntu.  Examples include, patches "
"to upstream that haven't yet made it into a released version, or changes to "
"the upstream's build system needed only for building it on Ubuntu.  We could "
"change the upstream source code directly, but doing this makes it more "
"difficult to remove the patches later when upstream has incorporated them, "
"or extract the change to submit to the upstream project.  Instead, we keep "
"these changes as separate patches, in the form of diff files."
msgstr ""
"Інколи розробникам пакунку Ubuntu потрібно змінити джерельний код апстріму, "
"щоб примусити його працювати в Ubuntu належним чином. Приклади включають "
"латки для апстрімів, які ще не потрапили у версію релізу, або зміни до "
"систем білдів апстріму, необхідні лише для їх збірки на Ubuntu. Ми будемо "
"міняти джерельний код апстріму напряму, але такий метод робить складнішим "
"подальше вилучення латок, коли апстрім вже застосував їх, також ускладнюючи "
"витягнення змін для їх відправки у проєкт апстріму. Замість цього, ми будемо "
"зберігати ці зміни як окремі латки у формі diff файлів."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:14
msgid ""
"There are a number of different ways of handling patches in Debian packages, "
"fortunately we are standardizing on one system, `Quilt`_, which is now used "
"by most packages."
msgstr ""
"Існують різні способи роботи з латками для пакунків Debian. На щастя, ми "
"зупинимося на одній системі, `Quilt`_, яка наразі використовується більшістю "
"пакунків."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:18
msgid "Let's look at an example package, ``kamoso`` in Trusty::"
msgstr "Давайте візьмемо у якості прикладу пакунок ``kamoso`` в Trusty::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:22
msgid ""
"The patches are kept in ``debian/patches``.  This package has one patch "
"``kubuntu_01_fix_qmax_on_armel.diff`` to fix a compile failure on ARM.  The "
"patch has been given a name to describe what it does, a number to keep the "
"patches in order (two patches can overlap if they change the same file) and "
"in this case the Kubuntu team adds their own prefix to show the patch comes "
"from them rather than from Debian."
msgstr ""
"Латки зберігаються в ``debian/patches``. Для цього пакунку є одна латка "
"``kubuntu_01_fix_qmax_on_armel.diff`` для виправлення вади компілювання на "
"платформі ARM. Цій латці привласнено ім’я, що дає опис, того що вона робить, "
"номер патчу за порядком (щоб уникнути плутанини, якщо дві латки мають "
"однакове ім’я) й, у даному випадку, команда Kubuntu додала свій власний "
"префікс, щоб показати, що латка походить від них, а не від Debian."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:29
msgid "The order of patches to apply is kept in ``debian/patches/series``."
msgstr "Порядок застосування латок зберігається в ``debian/patches/series``."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:32
msgid "Patches with Quilt"
msgstr "Латки за допомогою Quilt"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:34
msgid ""
"Before working with Quilt you need to tell it where to find the patches.  "
"Add this to your ``~/.bashrc``::"
msgstr ""
"Перед роботою з Quilt потрібно вказати цій системі, де шукати латки. Додайте "
"в ``~/.bashrc`` таке::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:39
msgid "And source the file to apply the new export::"
msgstr "Й джерело файлу для застосування нового експорту::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:43
msgid ""
"By default all patches are applied already to UDD checkouts or downloaded "
"packages.  You can check this with::"
msgstr ""
"Типово усі латки застосовуються вже з UDD витягнень або завантажуваних "
"пакунків. Ви можете перевірити це за допомогою::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:49
msgid "If you wanted to remove the patch you would run ``pop``::"
msgstr "Якщо Ви бажаєте вилучити латку, потрібно виконати ``pop``::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:57
msgid "And to apply a patch you use ``push``::"
msgstr "А щоб застосувати латку, використовуйте ``push``::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:67
msgid "Adding a New Patch"
msgstr "Додавання нової латки"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:69
msgid ""
"To add a new patch you need to tell Quilt to create a new patch, tell it "
"which files that patch should change, edit the files then refresh the patch::"
msgstr ""
"Для додавання нової латки потрібно вказати Quilt створити нову латку, "
"повідомити йому, які файли ця латка повинна змінити, відредагувати файли, а "
"потім оновити латку::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:81
msgid ""
"The ``quilt add`` step is important, if you forget it the files will not end "
"up in the patch."
msgstr ""
"Крок ``quilt add`` важливий: якщо Ви забудете його зробити, файли не "
"потраплять у латку."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:84
msgid ""
"The change will now be in "
"``debian/patches/kubuntu_02_program_description.diff`` and the ``series`` "
"file will have had the new patch added to it.  You should add the new file "
"to the packaging::"
msgstr ""
"Тепер зміни будуть в ``debian/patches/kubuntu_02_program_description.diff``, "
"а у файл ``series`` буде додана інформація про нову латку. Ви повинні додати "
"новий файл у джерельні файли для пакунку::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:94
msgid ""
"Quilt keeps its metadata in the ``.pc/`` directory, so currently you need to "
"add that to the packaging too.  This should be improved in future."
msgstr ""
"Quilt містить свої мета-дані у директорії ``.pc/``, тому зараз Вам потрібно "
"додати у пакунок і її. Це має бути покращено у майбутньому."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:97
msgid ""
"As a general rule you should be careful adding patches to programs unless "
"they come from upstream, there is often a good reason why that change has "
"not already been made.  The above example changes a user interface string "
"for example, so it would break all translations.  If in doubt, do ask the "
"upstream author before adding a patch."
msgstr ""
"Як правило, слід проявляти обережність при додаванні латок до проґрам, якщо "
"вони походять не з апстріму. Часто є вагома причина, з якої зміни ще не були "
"зроблені. У розглянутому вище прикладі змінюється рядок у користувацькому "
"інтерфейсі, тож це може зламати усі переклади. Якщо маєте сумнів, спитайте "
"автора з апстріму перед тим, як додати латку."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:105
msgid "Patch Headers"
msgstr "Заголовки латок"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:107
msgid ""
"We recommend that you tag every patch with DEP-3_ headers by putting them at "
"the top of patch file. Here are some headers that you can use:"
msgstr ""
"Ми рекомендуємо додавати до кожної латки заголовки DEP-3_, поміщаючи їх у "
"самому верху файлу латки. Ось деякі заголовки, які можна використовувати:"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:0
msgid "Description"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:110
msgid ""
"Description of what the patch does. It is formatted like ``Description`` "
"field in ``debian/control``: first line is short description, starting with "
"lowercase letter, the next lines are long description, indented with a space."
msgstr ""
"Опис того, що робить латка. Має формат, аналогічний полю ``Description`` в "
"``debian/control``: перший рядок містить короткий опис, що починається з "
"рядкової літери, решта рядків містять довший опис з пробілом у якості "
"відступу."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:0
msgid "Author"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:114
msgid "Who wrote the patch (i.e. \"Jane Doe <packager@example.com>\")."
msgstr "Хто написав латку (наприклад, \"Jane Doe <packager@example.com>\")."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:0
msgid "Origin"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:115
msgid ""
"Where this patch comes from (i.e. \"upstream\"), when *Author* is not "
"present."
msgstr ""
"Звідки прийшла ця латка (наприклад, \"upstream\"), якщо заголовок *Author* "
"відсутній."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:0
msgid "Bug-Ubuntu"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:117
msgid ""
"A link to Launchpad bug, a short form is preferred (like "
"*https://bugs.launchpad.net/bugs/XXXXXXX*). If there are also bugs in "
"upstream or Debian bugtrackers, add *Bug* or *Bug-Debian* headers."
msgstr ""
"Посилання на інформацію про помилку на Launchpad, бажано, у короткій формі "
"(типу *https://bugs.launchpad.net/bugs/XXXXXXX*). Якщо також є звіти про "
"вади в апстрімі або системах відстежування помилок Debian, додайте заголовки "
"*Bug* або *Bug-Debian*."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:0
msgid "Forwarded"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:121
msgid ""
"Whether the patch was forwarded upstream. Either \"yes\", \"no\" or \"not-"
"needed\"."
msgstr ""
"Чи була латка передана в апстрим. Значення: \"yes\", \"no\" або \"not-"
"needed\"."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:0
msgid "Last-Update"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:123
msgid "Date of the last revision (in form \"YYYY-MM-DD\")."
msgstr "Дата останньої ревізії (у формі \"ГГГГ-ММ-ДД\")."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:127
msgid "Upgrading to New Upstream Versions"
msgstr "Оновлення до нових версій з апстріму"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:129
msgid ""
"To upgrade to the new version, you can use ``bzr merge-upstream`` command::"
msgstr ""
"Щоб виконати оновлення до останньої версії, Ви можете використовувати "
"команду ``bzr merge-upstream``::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:133
msgid ""
"When you run this command, all patches will be unapplied, because they can "
"become out of date. They might need to be refreshed to match the new "
"upstream source or they might need to be removed altogether. To check for "
"problems, apply the patches one at a time::"
msgstr ""
"При запуску цієї команди відбудеться відткат усіх латок, оскільки вони "
"можуть стати застарілими. Можливо знадобиться їх оновити для відповідності "
"новому джерелу апстріму, або знадобиться вилучити їх усі разом. Для "
"полегшення перевірки проблем застосовуйте латки по одній."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:145
msgid ""
"If it can be reverse-applied this means the patch has been applied already "
"by upstream, so we can delete the patch::"
msgstr ""
"Якщо для латки вказано ``it can be reverse-applied``, значить латку вже було "
"застосовано апстрімом, тож ми можемо вилучити цю латку::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:151
msgid "Then carry on::"
msgstr "Потім продовжуйте::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:156
msgid ""
"It is a good idea to run refresh, this will update the patch relative to the "
"changed upstream source::"
msgstr ""
"Непоганою думкою буде виконати refresh, це оновить латку відносно змін "
"джерельного коду в апстрімі::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:162
msgid "Then commit as usual::"
msgstr "Потім виконайте фіксацію, як звичайно::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:168
msgid "Making A Package Use Quilt"
msgstr "Створення пакунку з використанням Quilt"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:170
msgid ""
"Modern packages use Quilt by default, it is built into the packaging format. "
" Check in ``debian/source/format`` to ensure it says ``3.0 (quilt)``."
msgstr ""
"Сучасні пакунки використовують Quilt типово, це вбудовано у формат "
"джерельних файлів пакунку. Перевірте, що в ``debian/source/format`` вказано "
"``3.0 (quilt)``."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:174
msgid ""
"Older packages using source format 1.0 will need to explicitly use Quilt, "
"usually by including a makefile into ``debian/rules``."
msgstr ""
"Для старіших пакунків, що використовують формат 1.0, необхідно "
"використовувати Quilt явно, зазвичай за допомогою включення make-файлу у "
"``debian/rules``."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:179
msgid "Configuring Quilt"
msgstr "Конфігурування Quilt"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:181
msgid ""
"You can use ``~/.quiltrc`` file to configure quilt. Here are some options "
"that can be useful for using quilt with debian/packages:"
msgstr ""
"Ви можете скористатися файлом ``~/.quiltrc`` для конфігурування quilt. Ось "
"декілька опцій, які можуть бути корисні при використанні quilt з пакунками "
"Debian:"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:195
msgid "Other Patch Systems"
msgstr "Інші системи керування латками"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:197
msgid ""
"Other patch systems used by packages include ``dpatch`` and ``cdbs simple-"
"patchsys``, these work similarly to Quilt by keeping patches in "
"``debian/patches`` but have different commands to apply, un-apply or create "
"patches. You can find out which patch system is used by a package by using "
"the ``what-patch`` command (from the ``ubuntu-dev-tools`` package). You can "
"use ``edit-patch``, shown in :ref:`previous chapters <working-on-a-fix>`, as "
"a reliable way to work with all systems."
msgstr ""
"Інші системи латання, що використовуються у пакунках, включають ``dpatch`` і "
"``cdbs simple-patchsys``, принцип роботи яких схожий на Quilt - латки "
"зберігаються в ``debian/patches``, але для їх застосування, скасування або "
"створення потрібні інші команди. Ви можете дізнатися яка система латання "
"використовується у пакунку за допомогою команди ``what-patch``(у пакунку "
"``ubuntu-dev-tools``). Ви можете використовувати ``edit-patch``, показаний в "
":ref:`попередніх розділах <working-on-a-fix>`, у якості надійного способу "
"для роботи з усіма системами."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:205
msgid ""
"In even older packages changes will be included directly to sources and kept "
"in the ``diff.gz`` source file.  This makes it hard to upgrade to new "
"upstream versions or differentiate between patches and is best avoided."
msgstr ""
"У старіших пакунках зміни будуть включені напряму у джерела і зберігатися у "
"джерельному файлі ``diff.gz``. Це робить складнішим процес оновлення до "
"нових версій апстріму або відмінності між латками - ліпше уникати."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:209
msgid ""
"Do not change a package's patch system without discussing it with the Debian "
"maintainer or relevant Ubuntu team.  If there is no existing patch system "
"then feel free to add Quilt."
msgstr ""
"Не змінюйте систему латання, не обміркувавши це з супроводжуючим Debian або "
"командою Ubuntu яка має відношення до справи. Якщо існуючої системи латання "
"немає, можете додати Quilt."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:3
msgid "Security and Stable Release Updates"
msgstr "Оновлення безпеки й оновлення стабільних релізів"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:6
msgid "Fixing a Security Bug in Ubuntu"
msgstr "Виправлення помилок безпеки в Ubuntu"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:11
msgid ""
"Fixing security bugs in Ubuntu is not really any different than :doc:`fixing "
"a regular bug in Ubuntu<./fixing-a-bug>`, and it is assumed that you are "
"familiar with patching normal bugs. To demonstrate where things are "
"different, we will be updating the dbus package in Ubuntu 12.04 LTS (Precise "
"Pangolin) for a security update."
msgstr ""
"Виправлення дірок у безпеці в Ubuntu фактично не відрізняється від "
":doc:`виправлення звичайного багу<./fixing-a-bug>`, і припускається, що Ви "
"знайомі з виправленням звичайних багів. Для демонстрації відмінностей ми "
"будемо додавати у пакунок dbus в Ubuntu 12.04 LTS (Precise Pangolin) "
"оновлення для системи безпеки."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:19
msgid "Obtaining the source"
msgstr "Отримання джерельного коду"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:21
msgid ""
"In this example, we already know we want to fix the dbus package in Ubuntu "
"12.04 LTS (Precise Pangolin). So first you need to determine the version of "
"the package you want to download. We can use the ``rmadison`` to help with "
"this::"
msgstr ""
"У даному прикладі ми вже знаємо, що бажаємо виправити пакунок dbus в Ubuntu "
"12.04 LTS (Precise Pangolin). Тому спочатку потрібно визначити версію "
"пакунку, який бажаєте стягнути. Ми можемо використовувати ``rmadison`` у "
"якості допомоги у даній ситуації."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:30
msgid ""
"Typically you will want to choose the highest version for the release you "
"want to patch that is not in -proposed or -backports. Since we are updating "
"Precise's dbus, you'll download 1.4.18-1ubuntu1.4 from precise-updates::"
msgstr ""
"Зазвичай обирають найостаннішу версію для релізу, який Ви бажаєте залатати, "
"який не в -proposed або -backports. Оскільки ми оновлюємо dbus Precise, Ви "
"стягнете 1.4.18-1ubuntu1.4 з precise-updates::"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:38
msgid "Patching the source"
msgstr "Створення латки"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:39
msgid ""
"Now that we have the source package, we need to patch it to fix the "
"vulnerability. You may use whatever patch method that is appropriate for the "
"package, including :doc:`UDD techniques<./udd-intro>`, but this example will "
"use ``edit-patch`` (from the ubuntu-dev-tools package). ``edit-patch`` is "
"the easiest way to patch packages and it is basically a wrapper around every "
"other patch system you can imagine."
msgstr ""
"Тепер, коли ми маємо джерельний пакунок, ми повинні зробити латку для "
"виправлення вразливості. Ви можете використовувати будь-який метод, що "
"підходить для даного пакунку, у тому числі :doc:`методи UDD<./udd-intro>`, "
"але у цьому прикладі будемо використовувати ``edit-patch`` (з пакунку ubuntu-"
"dev-tools). ``edit-patch`` — це найпростіший спосіб для виправлення "
"пакунків, що працює з будь-якою системою латання, яку Ви можете собі уявити."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:46
msgid "To create your patch using ``edit-patch``::"
msgstr "Щоб створити латку за допомогою ``edit-patch``::"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:51
msgid ""
"This will apply the existing patches and put the packaging in a temporary "
"directory. Now edit the files needed to fix the vulnerability.  Often "
"upstream will have provided a patch so you can apply that patch::"
msgstr ""
"Це застосує усі існуючі латки й помістить пакунок у тимчасовий каталог. "
"Тепер відредагуйте файли для виправлення вразливостей. Зазвичай в апстрімі "
"лежить і латка, тому Ви одразу можете її застосувати::"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:57
msgid ""
"After making the necessary changes, you just hit Ctrl-D or type exit to "
"leave the temporary shell."
msgstr ""
"Після внесення необхідних змін просто натисніть Ctrl-D або наберіть exit, "
"щоб залишити тимчасову командну оболонку."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:61
msgid "Formatting the changelog and patches"
msgstr "Форматування файлу changelog і латок"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:63
msgid ""
"After applying your patches you will want to update the changelog. The "
"``dch`` command is used to edit the ``debian/changelog`` file and ``edit-"
"patch`` will launch ``dch`` automatically after un-applying all the patches. "
"If you are not using ``edit-patch``, you can launch ``dch -i`` manually. "
"Unlike with regular patches, you should use the following format (note the "
"distribution name uses precise-security since this is a security update for "
"Precise) for security updates::"
msgstr ""
"Після застосування латок Вам знадобиться внести зміни в лог. Команда ``dch`` "
"використовується для редагування файлу ``debian/changelog`` і ``edit-patch`` "
"автоматично запустить ``dch`` після відкату усіх латок. Якщо Ви не "
"користуєтеся ``edit-patch``, то можете запустити ``dch -i`` вручну. На "
"відміну від звичайних латок, Вам слід використовувати наступний формат "
"(зверніть увагу, що в імені дитрибутиву використовується precise-security, "
"оскільки це оновлення безпеки для Precise) для оновлень безпеки::"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:80
msgid ""
"Update your patch to use the appropriate patch tags. Your patch should have "
"at a minimum the Origin, Description and Bug-Ubuntu tags. For example, edit "
"debian/patches/99-fix-a-vulnerability.patch to have something like::"
msgstr ""
"Оновіть свою латку для використання відповідних тегів. Ваша латка повинна "
"містити як мінімум теги Origin, Description і Bug-Ubuntu. Наприклад, "
"відредагуйте ``debian/patches/99-fix-a-vulnerability.patch``, щоб він мав "
"приблизно такі рядки::"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:91
msgid ""
"Multiple vulnerabilities can be fixed in the same security upload; just be "
"sure to use different patches for different vulnerabilities."
msgstr ""
"Множинні вразливості можна виправити одним завантаженням безпеки, просто "
"переконайтеся що використовуєте різні латки для різних вразливостей."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:95
msgid "Test and Submit your work"
msgstr "Перевірка й відправка Вашої праці"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:97
msgid ""
"At this point the process is the same as for :doc:`fixing a regular bug in "
"Ubuntu<./fixing-a-bug>`. Specifically, you will want to:"
msgstr ""
"На цьому етапі процес такий самий, як при :doc:`виправленні звичайних вад в "
"Ubuntu<./fixing-a-bug>`. А саме, Вам потрібно:"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:100
msgid ""
"Build your package and verify that it compiles without error and without any "
"added compiler warnings"
msgstr ""
"Виконати збірку пакунку й перевірити, що він компілюється без помилок і "
"компілювальник не видає ніяких додаткових застережень"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:102
msgid "Upgrade to the new version of the package from the previous version"
msgstr "Виконати оновлення з попередньої версії пакунку до нової версії"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:103
msgid ""
"Test that the new package fixes the vulnerability and does not introduce any "
"regressions"
msgstr ""
"Переконатися, що новий пакунок латає вразливість й не вносить ніяких "
"погіршень"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:105
msgid ""
"Submit your work via a Launchpad merge proposal and file a Launchpad bug "
"being sure to mark the bug as a security bug and to subscribe ``ubuntu-"
"security-sponsors``"
msgstr ""
"Відправляйте свою працю через пропозицію про об’єднання Launchpad й "
"відправляйте баг в Launchpad, переконавшись що позначили баг як помилку "
"безпеки, й для підписки ``ubuntu-security-sponsors``"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:109
msgid ""
"If the security vulnerability is not yet public then do not file a merge "
"proposal and ensure you mark the bug as private."
msgstr ""
"Якщо це вразливість у безпеці, про яку ще не оголошено публічно, то не "
"відправляйте пропозицію злиття й переконайтеся, що Ви позначили свою "
"помилку, як приватну (private)."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:112
msgid ""
"The filed bug should include a Test Case, i.e. a comment which clearly shows "
"how to recreate the bug by running the old version then how to ensure the "
"bug no longer exists in the new version."
msgstr ""
"Відправлений баг повинен містити Тестовий Приклад, тобто коментар, який "
"чітко показує як відтворити баг, запустивши стару версію, також показуючи як "
"переконатися, що баг більше не існує у новій версії."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:116
msgid ""
"The bug report should also confirm that the issue is fixed in Ubuntu "
"versions newer than the one with the proposed fix (in the above example "
"newer than Precise).  If the issue is not fixed in newer Ubuntu versions you "
"should prepare updates for those versions too."
msgstr ""
"Звіт про баг також повинен підтверджувати, що вада виправлена у нових "
"версіях Ubuntu за допомогою запропонованого фіксу (у вищевказаному прикладі "
"вище ніж в Precise). Якщо проблема не виправлена у нових версіях Ubuntu, Ви "
"повинні підготувати оновлення й для нових версій."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:123
msgid "Stable Release Updates"
msgstr "Оновлення стабільного релізу"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:125
msgid ""
"We also allow updates to releases where a package has a high impact bug such "
"as a severe regression from a previous release or a bug which could cause "
"data loss.  Due to the potential for such updates to themselves introduce "
"bugs we only allow this where the change can be easily understood and "
"verified."
msgstr ""
"Ми також дозволяємо вносити оновлення у випуски, у яких пакунок містить "
"серйозну помилку, таку як значна реґресія у порівнянні з попереднім випуском "
"або вада, яка може призвести до втрати даних. З-за того, що такі зміни самі "
"потенційно можуть призвести до появи додаткових помилок, ми дозволяємо "
"робити це лише там, де зміни легко можна зрозуміти та перевірити."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:130
msgid ""
"The process for Stable Release Updates is just the same as the process for "
"security bugs except you should subscribe ``ubuntu-sru`` to the bug."
msgstr ""
"Процес оновлень стабільного випуску (Stable Release Updates або SRU) такий "
"самий, як і для виправлень помилок безпеки, за виключенням того, що потрібно "
"підписати на звіт про ваду команду ``ubuntu-sru``."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:133
msgid ""
"The update will go into the ``proposed`` archive (for example ``precise-"
"proposed``) where it will need to be checked that it fixes the problem and "
"does not introduce new problems.  After a week without reported problems it "
"can be moved to ``updates``."
msgstr ""
"Оновлення потрапить в архів ``proposed``(наприклад ``precise-proposed``), де "
"його перевіряють на здатність виправити проблему й підтверджують, що воно не "
"є наслідком нових проблем. Після тижню роботи без заявлених проблем, "
"оновлення потрапляє у розділ ``updates``."

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:138
msgid ""
"See the `Stable Release Updates wiki page <SRUWiki_>`_ for more information."
msgstr ""
"Дивіться 'Вікі сторінку Оновлень Стабільного Релізу <SRUWiki_>`_ для "
"отримання додаткової інформації."

msgid "translator-credits"
msgstr ""
"Launchpad Contributions:\n"
"  Dmitry Shachnev https://launchpad.net/~mitya57\n"
"  stuartlittle https://launchpad.net/~stuartlittle1970"

#~ msgid "add the following to the Source section in ``debian/control``::"
#~ msgstr "додати наступний рядок до розділу Source в ``debian/control``::"

#~ msgid ""
#~ "`Harvest <http://harvest.ubuntu.com/>`_ is where we keep track of various "
#~ "TODO lists regarding Ubuntu development. It lists bugs that were fixed "
#~ "upstream or in Debian already, lists small bugs (we call them 'bitesize'), "
#~ "and so on. Check it out and find your first bug to work on."
#~ msgstr ""
#~ "`Harvest <http://harvest.ubuntu.com/>`_ зберігає різні переліки TODO, що "
#~ "стосуються розробки Ubuntu. Це переліки помилок, які були вже виправлені у "
#~ "апстрімі або в Debian, переліки невеликих помилок (ми називаємо їх "
#~ "«bitesize») й так далі. Продивіться їх та знайдіть помилку, виправленням "
#~ "якої Ви бажаєте зайнятися."

#~ msgid ""
#~ "Let's say you've found a bug in Tomboy, a note taking desktop application. "
#~ "The Tomboy application can be started by running ``/usr/bin/tomboy`` on the "
#~ "command line.  To find the binary package containing this application, use "
#~ "this command::"
#~ msgstr ""
#~ "Припустимо, Ви виявили помилку в Tomboy, застосунку для створення нотаток на "
#~ "стільниці. Додаток Tomboy можна запустити, виконавши ``/usr/bin/tomboy`` у "
#~ "командному рядку. Щоб знайти двійковий пакунок, що містить цей застосунок, "
#~ "використовуйте таку команду::"

#~ msgid ""
#~ "Note that the part preceding the colon is the binary package name.  It's "
#~ "often the case that the source package and binary package will have "
#~ "different names. This is most common when a single source package is used to "
#~ "build multiple different binary packages.  To find the source package for a "
#~ "particular binary package, type::"
#~ msgstr ""
#~ "Зверніть увагу на те, що частина, передуюча двокрапці, є іменем двійкового "
#~ "пакунку. Часто буває так, що у пакунку джерельного коду і двійкового пакунку "
#~ "різні імена. Частіше за усе, це відбувається, коли один пакунок джерельного "
#~ "коду використовується, щоб створити декілька різних двійкових пакунків. Щоб "
#~ "знайти джерельний пакунок для певного двійкового пакунку, уведіть::"

#~ msgid ""
#~ "Once you've got a local branch of the source package, you can investigate "
#~ "the bug, create a fix, and upload your proposed fix to Launchpad, in the "
#~ "form of a Bazaar branch.  When you are happy with your fix, you can "
#~ ":ref:`submit a merge proposal <merge-proposal>`, which asks other Ubuntu "
#~ "developers to review and approve your change.  If they agree with your "
#~ "changes, an Ubuntu developer will upload the new version of the package to "
#~ "Ubuntu so that everyone gets the benefit of your excellent fix - and you get "
#~ "a little bit of credit.  You're now on your way to becoming an Ubuntu "
#~ "developer!"
#~ msgstr ""
#~ "Як тільки Ви отримали локальну копію джерельного коду, Ви можете дослідити "
#~ "помилку, виправити її, та відправити своє виправлення на Launchpad, у "
#~ "вигляді Bazaar-гілки. Щойно Ви станете достатньо впевнені у своєму "
#~ "виправленні, Ви можете відправити :ref:`заявку на злиття <merge-proposal>`, "
#~ "тобто попрохати інших розробників продивитися й схвалити Вашу зміну. У "
#~ "випадку згоди з Вашими змінами вони завантажать Ваші зміни у сховище ПЗ. Від "
#~ "Вашої зміни отримають користь усі — навіть Ви, чиє ім’я буде стояти у "
#~ "переліку змін. Ви тепер відбуваєтеся як розробник Ubuntu!"

#~ msgid ""
#~ "Once you know the source package to work on, you will want to get a copy of "
#~ "the code on your system, so that you can debug it.  In Ubuntu Distributed "
#~ "Development this is done by :ref:`branching the source package <branching>` "
#~ "branch corresponding to the source package.  Launchpad maintains source "
#~ "package branches for all the packages in Ubuntu."
#~ msgstr ""
#~ "Коли Ви знаєте, над яким пакунком джерельного коду працювати, Ви можете "
#~ "завантажити копію цього пакунку, й зайнятися налагодженням. При розподіленій "
#~ "розробці Ubuntu це робиться за допомогою :ref:`клонування bzr-репозиторію "
#~ "<branching>` цього пакунку. Launchpad підтримує Bazaar-гілки для усіх "
#~ "пакунків в Ubuntu."

#~ msgid ""
#~ "You now want to create a patch which includes the fix.  The command ``edit-"
#~ "patch`` is a simple way to add a patch to a package. Run::"
#~ msgstr ""
#~ "Тепер можна створити латку, яка містить виправлення помилки. Команда ``edit-"
#~ "patch`` — найпростіший спосіб додати латку до пакунку. Виконайте::"

#~ msgid ""
#~ "We'll describe specifics on how to branch the code, push your fix, and "
#~ "request a review in the following sections."
#~ msgstr ""
#~ "Ми дамо опис специфіки завантаження коду, відправки змін, та створення "
#~ "заявки на перегляд у наступних розділах."

#~ msgid ""
#~ "Once the build succeeds, install the package from "
#~ "``~/pbuilder/<release>_result/`` (using ``sudo dpkg -i "
#~ "<package>_<version>.deb``).  Then test to see if the bug is fixed."
#~ msgstr ""
#~ "Після успішного завершення збірки встановіть пакунок з "
#~ "``~/pbuilder/<release>_result/`` (за допомогою ``sudo dpkg -i "
#~ "<пакунок>_<версія>.deb``). Потім перевірте, чи вдалося усунути помилку."

#~ msgid ""
#~ "This will create a source package from the branch contents (``-us -uc`` will "
#~ "just omit the step to sign the source package) and ``pbuilder-dist`` will "
#~ "build the package from source for whatever ``release`` you choose."
#~ msgstr ""
#~ "Це створить пакунок джерельного коду з вмісту гілки (``-us -uc`` просто "
#~ "дозволяє пропустити етап підписування пакунку джерельного коду), а "
#~ "``pbuilder-dist`` збере пакунок із джерельного коду для будь-якого вибраного "
#~ "Вами ``релізу``."

#~ msgid ""
#~ "and the change will be committed (locally) with your changelog entry as a "
#~ "commit message."
#~ msgstr ""
#~ "й зміну буде залито (локально) з Вашим записом changelog у якості "
#~ "повідомлення комміту."

#~ msgid "where the change was done"
#~ msgstr "де зроблено зміну"

#~ msgid "what was changed"
#~ msgstr "що було змінено"

#~ msgid "Committing the fix"
#~ msgstr "Закріплення зміни"

#~ msgid "With the changelog entry written and saved, you can just run::"
#~ msgstr "Написавши і зберігши запис в changelog, ми можемо просто запустити::"

#~ msgid "where the discussion of the change happened"
#~ msgstr "де відбувалося обговорення цієї зміни"

#~ msgid ""
#~ "To push it to Launchpad, as the remote branch name, you need to stick to the "
#~ "following nomenclature::"
#~ msgstr ""
#~ "Для Launchpad-сховища, у який відправляти Ваші зміни, використовуйте таке "
#~ "ім’я::"

#~ msgid "So if you just run::"
#~ msgstr "Тож, якщо Ви просто виконаєте::"

#~ msgid "This could for example be::"
#~ msgstr "Це може бути, наприклад::"

#~ msgid ""
#~ "you should be all set. The push command should push it to Launchpad and the "
#~ "second command will open the Launchpad page of the remote branch in your "
#~ "browser. There find the \"(+) Propose for merging\" link, click it to get "
#~ "the change reviewed by somebody and included in Ubuntu."
#~ msgstr ""
#~ "усе повинно бути готово. Команда push виконає відправку на Launchpad, а "
#~ "друга команда відкриє сторінку віддаленої гілки на Launchpad у Вашому "
#~ "оглядачі. Найдіть там посилання «(+) Propose for merging» й клацніть на "
#~ "ньому, щоб хтось перевірив зміну і включив її в Ubuntu."

#~ msgid "Tutorial: Fixing a bug in Ubuntu"
#~ msgstr "Демонстрація: виправлення помилки в Ubuntu"

#~ msgid ""
#~ "If your branch fixes issues in stable releases or it is a security fix, you "
#~ "might want to have a look at our :doc:`Security and stable release "
#~ "updates<./security-and-stable-release-updates>` article."
#~ msgstr ""
#~ "Якщо Ваша гілка виправляє помилку у стабільному випуску або це виправлення "
#~ "безпеки, прочитайте нашу статтю :doc:`Оновлення безпеки й стабільних "
#~ "випусків<./security-and-stable-release-updates>`."

#~ msgid ""
#~ "Our article about :doc:`seeking sponsorship<./udd-sponsorship>` goes into "
#~ "more detail about getting feedback for your proposed changes."
#~ msgstr ""
#~ "Наша стаття про :doc:`пошук поручительства<./udd-sponsorship>` надає "
#~ "додаткові подробиці про отримання зворотнього зв’язку для запропонованих "
#~ "Вами змін."

#~ msgid ""
#~ "At the time of writing this article this was not fixed yet. When you are "
#~ "reading the article this might actually be fixed. Take this as an example "
#~ "and try to adapt it to the specific problem you are facing."
#~ msgstr ""
#~ "Під час написання даної статті ця помилка ще не була виправлена. Можливо, до "
#~ "того часу, коли Ви будете читати статтю, помилку вже виправлять. Вважайте це "
#~ "просто прикладом й постарайтеся адаптувати його до конкретної проблеми, з "
#~ "якою Ви зіштовхнетеся."

#~ msgid ""
#~ "While the mechanics for :doc:`fixing a bug<./fixing-a-bug>` are the same for "
#~ "every bug, every problem you look at is likely to be different from another. "
#~ "An example of a concrete problem might help to get an idea what to consider "
#~ "generally."
#~ msgstr ""
#~ "Хоч техніка :doc:`виправлення помилки<./fixing-a-bug>` однакова для будь-"
#~ "яких помилок, кожна помилка все ж у чомусь відрізняється від інших. Даний "
#~ "приклад виправлення конкретної помилки може допомогти Вам зрозуміти, що "
#~ "зазвичай потрібно прийняти до уваги."

#~ msgid ""
#~ "and edit ``debian/control`` to add ``Homepage: http://www.linux-"
#~ "games.com/bumprace/``. At the end of the first section should be a good "
#~ "place for it. Once you have done this, save the file."
#~ msgstr ""
#~ "й відредагувати ``debian/control``, додавши ``Homepage: http://www.linux-"
#~ "games.com/bumprace/``. У кінці першої секції має бути відповідне місце для "
#~ "цього. Після внесення змін збережіть файл."

#~ msgid "So what we do next is run::"
#~ msgstr "Тож тепер ми маємо виконати команду::"

#~ msgid "If you now run::"
#~ msgstr "Якщо тепер Ви виконаєте::"

#~ msgid ""
#~ "To address the issue in the source package, we first need the source and we "
#~ "can easily get it by running::"
#~ msgstr ""
#~ "Щоб взятися за ваду у пакунку джерельного коду, нам знадобиться цей "
#~ "джерельний код, й ми легко можемо отримати його, набравши::"

#~ msgid ""
#~ "For this specific example it is enough to search the web for ``bumprace`` "
#~ "and find the homepage of it. Be sure it is a live site and not just a "
#~ "software catalogue. http://www.linux-games.com/bumprace/ looks like it is "
#~ "the proper place."
#~ msgstr ""
#~ "У даному конкретному прикладі недостатньо просто знайти веб-сайт "
#~ "``bumprace`` й визначити адресу його домашньої сторінки. Потрібно "
#~ "переконатися, що сайт працює, й він не є просто каталогом різних проґрам. "
#~ "http://www.linux-games.com/bumprace/ виглядає відповідним місцем."

#~ msgid ""
#~ "If you read :doc:`the Debian Directory Overview<./debian-dir-overview>` "
#~ "before, you might remember, that the homepage for a package is specified in "
#~ "the first part of ``debian/control``, the section which starts with "
#~ "``Source:``."
#~ msgstr ""
#~ "Якщо Ви прочитали :doc:`огляд каталогу Debian<./debian-dir-overview>`, то "
#~ "пам’ятайте, ймовірно, що домашня сторінка вказується у першій частині "
#~ "``debian/control``, у секції, що починається з ``Source:``."

#~ msgid "and you will see something like this:"
#~ msgstr "й Ви побачите щось типу цього:"

#~ msgid "A few additional considerations:"
#~ msgstr "Декілька додаткових міркувань:"

#~ msgid ""
#~ "It is important to explain to your fellow developers what exactly you did. "
#~ "If you run::"
#~ msgstr ""
#~ "Важливо пояснити своїм колегам - розробникам, що саме Ви зробили. Якщо Ви "
#~ "наберете::"

#~ msgid ""
#~ "this will start an editor with a boilerplate changelog entry which you just "
#~ "have to fill out. In our case something like ``debian/control: Added "
#~ "project's homepage.`` should do. Then save the file. To double-check this "
#~ "worked out, run::"
#~ msgstr ""
#~ "це запустить редактор, з шаблоном запису у changelog, який Вам залишається "
#~ "лише дозаповнити. У нашому випадку повинне підійти щось типу "
#~ "``debian/control: Added project's homepage.`` Потім збережіть файл. Щоб ще "
#~ "раз перевірити, що усе працює, наберіть::"

#~ msgid ""
#~ "If it is a reference to an upstream or Debian bug or a mailing list "
#~ "discussion, mention it as well."
#~ msgstr ""
#~ "Якщо це посилання на повідомлення про помилку в апстрімі або у Debian, або "
#~ "на обговорення у поштовій розсилці, також вкажіть її."

#~ msgid "Try to wrap your lines at 80 characters."
#~ msgstr "Намагайтеся робити перенесення рядків після 80 символів."

#~ msgid ""
#~ "If you want to get your fix included in Debian, for a Debian bug the syntax "
#~ "is ``(Closes: #<bug number>)``, ie: ``(Closes: #123456)``."
#~ msgstr ""
#~ "Якщо Ви бажаєте, щоб Ваше виправлення було включено у Debian, синтаксис для "
#~ "вади в Debian буде ``(Closes: #<номер помилки>)``, наприклад: ``(Closes: "
#~ "#123456)``."

#~ msgid ""
#~ "If you have a reference to a Launchpad bug which is fixed by the issue, add "
#~ "(``LP: #<bug number>``) to the changelog entry line, ie: ``(LP: #123456)``."
#~ msgstr ""
#~ "Якщо в Вас є посилання на ваду на Launchpad, яку виправляє Ваша зміна, "
#~ "додайте (``LP: #<номер помилки>``) у запис changelog, наприклад: ``(LP: "
#~ "#123456)``."

#~ msgid ""
#~ "The diff is pretty simple to understand. The ``+`` indicates a line which "
#~ "was added. In our cases it was added just before the second section, "
#~ "starting with ``Package``, which indicates a resulting binary package."
#~ msgstr ""
#~ "Синтаксис diff дуже простий для розуміння. ``+`` вказує рядок, який був "
#~ "доданий. У нашому випадку його було додано безпосередньо перед другою "
#~ "секцією, що починається з ``Package``, яка вказує на готовий двійковий "
#~ "пакунок."

#~ msgid "you should see something like this:"
#~ msgstr "Ви повинні побачити щось типу цього:"

#~ msgid ""
#~ "Try to be specific, not an essay, but enough for somebody (who did not "
#~ "deeply look into the issue) to understand."
#~ msgstr ""
#~ "Намагайтеся викладати детально: не варто писати цілий твір, але вкажіть "
#~ "достатньо інформації, щоб зрозуміти могла будь-яка людина (навіть якщо вона "
#~ "не занурювався глибоко у цю проблему)."

#~ msgid "Mention how you fixed the issue and where."
#~ msgstr "Вкажіть, як і де Ви виправили помилку."

#~ msgid ""
#~ "In our case we established that we have a problem with the packaging, both "
#~ "in Ubuntu and Debian. As Ubuntu is based on Debian, we will send the fix to "
#~ "Debian. Once it is included there, it will be picked up by Ubuntu "
#~ "eventually. The issue in our tutorial is clearly non-critical, so this "
#~ "approach makes sense. If it is important to fix the issue as soon as "
#~ "possible, you will need to send the solution to multiple bug trackers. "
#~ "Provided the issue affects all parties in question."
#~ msgstr ""
#~ "У нашому випадку ми встановили, що помилка відноситься лише до пакунків "
#~ "Ubuntu і Debian. Оскільки Ubuntu заснована на Debian, ми повинні відправити "
#~ "випралення в Debian. Після того, як в Debian з’явиться виправлений пакунок, "
#~ "він потрапляє також і в Ubuntu. Наша помилка не критична, тому можна так "
#~ "зробити. Якщо ж важливо застосувати виправлення як найшвидше, то необхідно "
#~ "відправити виправлення у декілька баг-трекерів (якщо воно зачепає відповідні "
#~ "проєкти)."

#~ msgid ""
#~ "It makes to get fix included as Upstream as possible. Doing that you can "
#~ "guarantee that everybody can take the Upstream source as-is and don't need "
#~ "to have local modifications to fix it."
#~ msgstr ""
#~ "Важливо спробувати просунути Ваше виправлення як найдалі в upstream. Це "
#~ "дозволить будь-кому взяти джерельний код у тому вигляді, у якому він наданий "
#~ "в upstream, й не застосовувати до нього ніяких додаткових модифікацій."

#~ msgid "Getting the fix included"
#~ msgstr "Застосування виправлення"

#~ msgid ""
#~ "As we verified, the problem is now solved, so the next step is sharing our "
#~ "solution with the world."
#~ msgstr ""
#~ "Після того, як ми переконалися, що проблема вирішена, наступним кроком буде "
#~ "поділитися своїм рішенням з усім світом."

#~ msgid ""
#~ "In step one we build the source package from the branch, then build it by "
#~ "using ``pbuilder``, then inspect the resulting package to check if the "
#~ "Homepage field was added properly."
#~ msgstr ""
#~ "Першою командою ми створюємо пакунок джерельного коду з гілки, потім "
#~ "збираємо його за допомогою ``pbuilder``, після чого перевіряємо, чи "
#~ "правильно додано поле домашньої сторінки у пакунку що отримали."

#~ msgid ""
#~ "To test the fix, you need to :doc:`have your development environment set "
#~ "up<./getting-set-up>`, then to build the package, install it and verify the "
#~ "problem is solved. In our case this would be::"
#~ msgstr ""
#~ "Щоб перевірити виправлення, Вам знадобиться :doc:`налаштувати своє "
#~ "середовище розробки<./getting-set-up>`, потім зібрати пакунок, встановити "
#~ "його й перевірити, що проблему усунено. У нашому випадку це будуть наступні "
#~ "дії::"

#~ msgid "To submit the patch to Debian, simply run::"
#~ msgstr "Щоб відправити латку в Debian, просто наберіть::"

#~ msgid ""
#~ "If the problem is just in Ubuntu, you might want to consider :doc:`Seeking "
#~ "Review and Sponsorship<./udd-sponsorship>` to get the fix included."
#~ msgstr ""
#~ "Якщо проблема спостерігається лише в Ubuntu, Ви можете скористатися "
#~ ":doc:`інструкцією з пошуку спонсора<./udd-sponsorship>`."

#~ msgid ""
#~ "There are a number of tools that will make your life as an Ubuntu developer "
#~ "much easier.  You will encounter these tools later in this guide.  To "
#~ "install most of the tools you will need run this command::"
#~ msgstr ""
#~ "Існує багато інструментів, які можуть значно спростити життя розробнику "
#~ "Ubuntu. Ви познайомитеся з ними далі у цьому посібнику. Щоб встановити "
#~ "більшість інструментів, потрібно виконати таку команду::"

#~ msgid ""
#~ "Note: Since Ubuntu 11.10 \"Oneiric Ocelot\" (or if you have Backports "
#~ "enabled on a currently supported release), the following command will "
#~ "install the above and other tools which are quite common in Ubuntu "
#~ "development::"
#~ msgstr ""
#~ "Нотатка: Починаючи з Ubuntu 11.10 «Oneiric Ocelot» (або якщо увімкнений "
#~ "репозиторій Backports у поточному підтримуваному випуску), наступна команда "
#~ "встановлює усе вищезгадане й інші інструменти, що часто використовуються у "
#~ "розробці Ubuntu::"

#~ msgid ""
#~ "``bzr-builddeb`` (and ``bzr``, a dependency) -- distributed version control "
#~ "with Bazaar, a new way of working with packages for Ubuntu that will make it "
#~ "easy for many developers to collaborate and work on the same code while "
#~ "keeping it trivial to merge each other's work."
#~ msgstr ""
#~ "``bzr-builddeb`` (і його залежність -- ``bzr``) -- керування розподіленими "
#~ "версіями за допомогою Bazaar (новий спосіб роботи з пакунками для Ubuntu), "
#~ "що спрощує спільну роботу багатьох людей над одним й тим самим кодом й що "
#~ "дозволяє з легкістю об’єднувати результати їх праці один з одним."

#~ msgid "Configuring Bash to work with Bazaar"
#~ msgstr "Налаштування Bash для роботи з Bazaar"

#~ msgid "Configuring Bazaar to work with Launchpad"
#~ msgstr "Налаштування Bazaar для роботи з Launchpad"

#~ msgid "Configure Bazaar"
#~ msgstr "Налаштування Bazaar"

#~ msgid "To tell Bazaar who you are, simply run::"
#~ msgstr "Щоб повідомити Bazaar про те, хто Ви, просто наберіть::"

#~ msgid ""
#~ "Bazaar is the tool we use to store code changes in a logical way, to "
#~ "exchange proposed changes and merge them, even if development is done "
#~ "concurrently.  It is used for the new Ubuntu Distributed Development method "
#~ "of working with Ubuntu packages."
#~ msgstr ""
#~ "Bazaar — це інструмент, який ми використовуємо для зберігання змін у коді, у "
#~ "логічний і передбачуваний спосіб, а також обміну пропонованими змінами й їх "
#~ "злиття, навіть у тому випадку, якщо розробка ведеться параллельно декількома "
#~ "людьми. Він використовується у новому методі роботи з пакунками Ubuntu — "
#~ "Ubuntu Distributed Development."

#~ msgid ""
#~ "`whoami` will tell Bazaar which name and email address it should use for "
#~ "your commit messages. With `launchpad-login` you set your Launchpad ID. This "
#~ "way code that you publish in Launchpad will be associated with you."
#~ msgstr ""
#~ "`whoami` повідомить Bazaar, яке ім’я й адресу електронної пошти він повинен "
#~ "використовувати для Ваших коммітів. За допомогою `launchpad-login` Ви "
#~ "вказуєте свій Launchpad ID. Це код, який ідентифікує Ваш обліковий запис на "
#~ "Launchpad."

#~ msgid ""
#~ "Similar to Bazaar, the Debian/Ubuntu packaging tools need to learn about you "
#~ "as well. Simply open your `~/.bashrc` in a text editor and add something "
#~ "like this to the bottom of it::"
#~ msgstr ""
#~ "Як і Bazaar, інструментам створення пакунків Debian/Ubuntu знадобиться деяка "
#~ "інформація про Вас. Просто відкрийте `~/.bashrc` у текстовому редакторі й "
#~ "додайте внизу щось типу цього::"

#~ msgid ""
#~ "Note: If you can not remember the ID, go to https://launchpad.net/~ and see "
#~ "where it redirects you. The part after the \"~\" in the URL is your "
#~ "Launchpad ID.)"
#~ msgstr ""
#~ "Нотатка: якщо Ви не пам’ятаєте свій ідентифікатор, перейдіть на "
#~ "https://launchpad.net/~ й подивіться, куди Вас переспрямовує ця сторінка. "
#~ "Частина URL після символу «~» — це й є Ваш Launchpad ID."

#~ msgid ""
#~ "Welcome to the Ubuntu Packaging and Development Guide! This is the official "
#~ "place for learning all about Ubuntu Development and packaging. After reading "
#~ "this guide you will have:"
#~ msgstr ""
#~ "Ласкаво просимо у посібник розробника Ubuntu! Це офіційна документація з "
#~ "усіх тем, пов’язаних з розробкою Ubuntu та збиранням пакунків для цієї "
#~ "операційної системи. Після того як прочитаєте цей посібник Ви:"

#~ msgid ""
#~ "heard about the most important players, processes and tools in Ubuntu "
#~ "development,"
#~ msgstr ""
#~ "будете знати про найважливіші засоби, процеси і команди у розробці Ubuntu,"

#~ msgid "fixed an actual Ubuntu bug as part of the tutorials."
#~ msgstr "виправите справжню помилку в Ubuntu у процесі вивчення посібника."

#~ msgid "a better idea of how to join our community,"
#~ msgstr "дізнаєтеся, як долучитися до нашої спільноти,"

#~ msgid "your development environment set up correctly,"
#~ msgstr "зможете правильно налаштувати Ваше середовище розробки,"

#~ msgid ""
#~ "This guide focuses on the Ubuntu Distributed Development packaging method. "
#~ "This is a new way of packaging which uses Distributed Revision Control "
#~ "branches.  It currently has some limitations which mean many teams in Ubuntu "
#~ "use :doc:`traditional packaging<./traditional-packaging>` methods.  See the "
#~ ":doc:`UDD Introduction<./udd-intro>` page for an introduction to the "
#~ "differences."
#~ msgstr ""
#~ "Цей посібник фокусується на методі створення пакунків Ubuntu Distributed "
#~ "Development. Це новий спосіб роботи з пакунками, який використовує гілки "
#~ "розподіленої системи керування версіями. На цей час він має деякі обмеження, "
#~ "тому багато команд Ubuntu як і раніше користуються "
#~ ":doc:`традиційними<./traditional-packaging>` методами створення пакунків. "
#~ "Щоб дізнатися про відмінності, дивіться сторінку :doc:`Вступ в UDD<./udd-"
#~ "intro>`."

#~ msgid ""
#~ "Good places to ask your questions are ``ubuntu-motu@lists.ubuntu.com`` and "
#~ "``#ubuntu-motu`` on ``irc.freenode.net``. You will easily find a lot of new "
#~ "friends and people with the same passion that you have: making the world a "
#~ "better place by making better Open Source software."
#~ msgstr ""
#~ "Відповідними місцями для отримання відповідей на Ваші питання є ``ubuntu-"
#~ "motu@lists.ubuntu.com`` і ``#ubuntu-motu`` на ``irc.freenode.net``. Там Ви "
#~ "легко знайдете багато нових друзів і людей, які поділяють вашу пристрасть: "
#~ "робити світ кращим, поліпшуючи відкрите проґрамне забезпечення."

#~ msgid "Getting the Source"
#~ msgstr "Отримання джерельного коду"

#~ msgid "Traditional Packaging"
#~ msgstr "Традиційні методи створення пакунків"

#~ msgid ""
#~ "In some cases, you may need to use these tools instead of UDD. So it is good "
#~ "to be familiar with them. Before you begin, you should already have read the "
#~ "article :doc:`Getting Set Up. <./getting-set-up>`"
#~ msgstr ""
#~ "У деяких випадках Вам може знадобитися використовувати ці інструменти "
#~ "замість UDD. Тому не завадить познайомитися з ними. Перед тим, як "
#~ "продовжити, Вам слід прочитати статтю :doc:`Підготовка. <./getting-set-up>`"

#~ msgid ""
#~ "The majority of this guide deals with :doc:`Ubuntu Distributed Development "
#~ "<./udd-intro>` (UDD) which utilizes the distributed version control system "
#~ "(DVCS) Bazaar for :ref:`retrieving package sources <branching>` and "
#~ "submitting fixes with :ref:`merge proposals. <merge-proposal>` This article "
#~ "will discuss what we will call traditional packaging methods for lack of a "
#~ "better word. Before Bazaar was adopted for Ubuntu development, these were "
#~ "the typical methods for contributing to Ubuntu."
#~ msgstr ""
#~ "Велика частина даного посібника відноситься до :doc:`Ubuntu Distributed "
#~ "Development <./udd-intro>` (UDD), яке використовує розповсюджувану версію "
#~ "системи керування (DVCS) Bazaar для :ref:`отримання джерел пакунків "
#~ "<branching>` й відправки фіксів через :ref:`пропозиції про злиття. <merge-"
#~ "proposal>` У цій статті ми обговоримо так звані \"традиційні\" методи "
#~ "створення пакунків. До того як Bazaar стали застосовувати у розробках "
#~ "Ubuntu, допомогти Ubuntu можна було стандартними способами."

#~ msgid "In order to get a source package, you can simply run::"
#~ msgstr "Щоб отримати пакунок джерельного коду, можна просто набрати::"

#~ msgid ""
#~ "To continue with our example, let's edit the ``debian/control`` and \"fix\" "
#~ "our \"bug\"::"
#~ msgstr ""
#~ "Щоб продовжити наш приклад, давайте відредагуємо ``debian/control`` й "
#~ "«виправимо» нашу «помилку»::"

#~ msgid "Creating a Debdiff"
#~ msgstr "Створення Debdiff"

#~ msgid ""
#~ "A ``debdiff`` shows the difference between two Debian packages. The name of "
#~ "the command used to generate one is also ``debdiff``. It is part of the "
#~ "``devscripts`` package. See ``man debdiff`` for all the details. To compare "
#~ "two source packages, pass the two ``dsc`` files as arguments::"
#~ msgstr ""
#~ "Файл ``debdiff`` показує відмінності між двома пакунками Debian. Ім’я "
#~ "команди, що використовується для його створення, теж ``debdiff``. Вона є "
#~ "частиною пакунку ``devscripts``. Дивіться ``man debdiff`` для детальної "
#~ "інформації про неї. Щоб порівняти два пакунки джерельного коду, передайте "
#~ "команді у якості аргументу два файли ``dsc``::"

#~ msgid "with::"
#~ msgstr "на::"

#~ msgid ""
#~ "This method has some draw backs though. It downloads the version of the "
#~ "source that is available on **your system.** You are likely running the "
#~ "current stable release, but you want to contribute your change against the "
#~ "package in the development release. Luckily, the ``ubuntu-dev-tools`` "
#~ "package provides a helper script::"
#~ msgstr ""
#~ "Але в цього методу є деякі недоліки. Він стягує версію джерельного коду, яка "
#~ "доступна у **Вашій системі.** Швидше за усе, в Вас встановлено поточний "
#~ "стабільний випуск, а Ви збираєтеся внести зміни у пакунок у розроблюваному "
#~ "випуску. На щастя, пакунок ``ubuntu-dev-tools`` надає допоміжний сценарій::"

#~ msgid ""
#~ "By default, the  latest version in the development release will be "
#~ "downloaded. You can also specify a version or Ubuntu release like::"
#~ msgstr ""
#~ "Типово буде завантажена найсвіжіша версія з розроблюваного выпуску. Можна "
#~ "також вказати версію випуску Ubuntu таким чином::"

#~ msgid ""
#~ "For our example, let's pretend we got a bug report saying that \"colour\" in "
#~ "the description of ``xicc`` should be \"color,\" and we want to fix it. "
#~ "*(Note: This is just an example of something to change and not really a "
#~ "bug.)* To get the source, run::"
#~ msgstr ""
#~ "Для прикладу, уявімо, що ми отримали звіт про ваду, у якому говориться, що "
#~ "замість \"colour\" у описі``xicc`` має бути \"color,\" й ми бажаємо це "
#~ "виправити. *(Нотатка: це просто приклад чогось, що можна змінити, а не "
#~ "реальна помилка.)* Щоб отримати джерельний код, уведіть::"

#~ msgid ""
#~ "to download version ``1.0-1ubuntu1`` of the package. For more information on "
#~ "the command, see ``man pull-lp-source``."
#~ msgstr ""
#~ "щоб стягнути версію пакунку ``1.0-1ubuntu1``. Для отримання додаткової "
#~ "інформації про команду скористайтеся ``man pull-lp-source``."

#~ msgid ""
#~ "To create a patch file that you can send to others or attach to a bug report "
#~ "for sponsorship, run::"
#~ msgstr ""
#~ "Щоб створити файл латки, який можна відправити іншим або прикласти до звіту "
#~ "про ваду для схвалення, виконайте::"

#~ msgid "Applying a Debdiff"
#~ msgstr "Застосування Debdiff"

#~ msgid ""
#~ "Remember to document your changes in ``debian/changelog`` using ``dch -i`` "
#~ "and then we can generate a new source package::"
#~ msgstr ""
#~ "Не забудьте задокументувати Ваші зміни в ``debian/changelog`` за допомогою "
#~ "``dch -i``, після чого ми можемо згенерувати новый пакунок джерельного коду::"

#~ msgid "Now we can examine our changes using ``debdiff``::"
#~ msgstr "Тепер можна перевірити наші зміни за допомогою ``debdiff``::"

#~ msgid ""
#~ "You can use the ``update-maintainer`` tool (in the ``ubuntu-dev-tools`` "
#~ "package) to do that."
#~ msgstr ""
#~ "Для цього можна скористатися інструментом ``update-maintainer`` (з пакунку "
#~ "``ubuntu-dev-tools``)."

#~ msgid "Source package URLs"
#~ msgstr "URL пакунків джерельного коду"

#~ msgid ""
#~ "Bazaar provides some very nice shortcuts for accessing Launchpad's source "
#~ "branches of packages in both Ubuntu and Debian."
#~ msgstr ""
#~ "Bazaar надає декілька дуже зручних скорочень для доступу до гілок "
#~ "джерельного коду з Launchpad для пакунків як Ubuntu, так і Debian."

#~ msgid ""
#~ "In order to apply a debdiff, first make sure you have the source code of the "
#~ "version that it was created against::"
#~ msgstr ""
#~ "Щоб застосувати debdiff, потрібно мати джерельний код версії, на основі якої "
#~ "він був створений::"

#~ msgid "A debdiff is just like a normal patch file. Apply it as usual with::"
#~ msgstr ""
#~ "Фактично, debdiff схожий на звичайний файл латки. Застосуйте його, як "
#~ "завжди, за допомогою::"

#~ msgid "Creating a shared repository"
#~ msgstr "Створення загальнодоступного сховища"

#~ msgid "To refer to source branches use::"
#~ msgstr "Щоб послатися на гілки джерельного коду, використовуйте::"

#~ msgid ""
#~ "You can use a similar scheme to access the source branches in Debian, "
#~ "although there are no shortcuts for the Debian distro-series names.  To "
#~ "access the Tomboy branch in the current development series for Debian use::"
#~ msgstr ""
#~ "Схожу схему можна використовувати для доступу до гілок джерельного коду в "
#~ "Debian, хоч тут немає скорочень для імен випусків Debian. Щоб отримати "
#~ "доступ до гілки Tomboy у поточному розроблюваному випуску Debian, "
#~ "використовуйте::"

#~ msgid ""
#~ "Since they are unique, you can also abbreviate the distro-series name::"
#~ msgstr ""
#~ "Оскільки перші літери кодових імен не повторюються, можна скоротити ім’я "
#~ "випуску::"

#~ msgid ""
#~ "where *package* refers to the package name you're interested in.  This URL "
#~ "refers to the package in the current development version of Ubuntu.  To "
#~ "refer to the branch of Tomboy in the development version, you would use::"
#~ msgstr ""
#~ "де *package* — ім’я пакунку, який Вам потрібен. Ця URL посилається на "
#~ "пакунки у поточній розроблюваній версії Ubuntu. Щоб послатися на гілку "
#~ "Tomboy у розроблюваній версії, потрібно використовувати::"

#~ msgid ""
#~ "There are a couple of things that we do first in order to make the workflow "
#~ "more efficient later.  Once you are used to the process you will learn when "
#~ "it makes sense to skip these steps."
#~ msgstr ""
#~ "Є декілька речей, які ми зробимо у першу чергу, щоб зробити робочий процес "
#~ "ефективнішим напотім. Після того, як Ви засвоїте процес, Ви взнаєте, коли є "
#~ "сенс пропускати ці етапи."

#~ msgid ""
#~ "Every source package in Ubuntu has an associated source branch on Launchpad. "
#~ "These source branches are updated automatically by Launchpad, although the "
#~ "process is not currently foolproof."
#~ msgstr ""
#~ "Кожен пакунок джерельного коду в Ubuntu пов’язаний з гілкою джерельного коду "
#~ "на Launchpad. Launchpad автоматично оновлює ці гілки джерельного коду, хоч "
#~ "процес не повністю «захищений від дурня»."

#~ msgid "Getting the source"
#~ msgstr "Отримання джерельного коду"

#~ msgid ""
#~ "Do this using the `bzr init-repo` command, passing it the directory name we "
#~ "would like to use::"
#~ msgstr ""
#~ "Скористайтеся для цього командою `bzr init-repo`, передавши їй ім’я "
#~ "каталогу, який Ви бажаєте використовувати::"

#~ msgid ""
#~ "You will see that a `tomboy` directory is created in your current working "
#~ "area.  Change to this new directory for the rest of your work::"
#~ msgstr ""
#~ "Ви побачите, що у Вашій поточній робочій області створено каталог `tomboy`. "
#~ "Перейдіть у нього для продовження роботи::"

#~ msgid "Getting the trunk branch"
#~ msgstr "Отримання гілки trunk"

#~ msgid ""
#~ "The tomboy.dev directory represents the version of Tomboy in the development "
#~ "version of Ubuntu, and you can always ``cd`` into this directory and do a "
#~ "`bzr pull` to get any future updates."
#~ msgstr ""
#~ "Каталог tomboy.dev представляє собою версію Tomboy у розроблюваній версії "
#~ "Ubuntu, й Ви завжди можете перейти у цей каталог та виконати `bzr pull` для "
#~ "отримання будь-яких майбутніх оновлень."

#~ msgid "Ensuring the version is up to date"
#~ msgstr "Перевірка актуальності версії"

#~ msgid ""
#~ "When you do your ``bzr branch`` you will get a message telling you if the "
#~ "packaging branch is up to date.  For example::"
#~ msgstr ""
#~ "Коли Ви робите свою ``bzr branch``, то отримаєте повідомлення про те чи є "
#~ "гілка пакунків актуальною. Наприклад::"

#~ msgid ""
#~ "Occasionally the importer fails and packaging branches do not match what is "
#~ "in the archive.  A message saying::"
#~ msgstr ""
#~ "Інколи імпорт не відбувається успішно й гілки пакунку не збігаються з тими, "
#~ "що знаходяться у архіві. Повідомлення::"

#~ msgid ""
#~ "Say that you want to work on the Tomboy package, and you've verified that "
#~ "the source package is named ``tomboy``.  Before actually branching the code "
#~ "for Tomboy, create a shared repository to hold the branches for this "
#~ "package.  The shared repository will make future work much more efficient."
#~ msgstr ""
#~ "Наприклад, Ви бажаєте працювати над пакунком Tomboy, й Ви вже перевірили, що "
#~ "джерельний пакунок називається ``tomboy``. Перед фактичним гілкуванням коду "
#~ "для Tomboy створіть загальноступне сховище для зберігання гілок цього "
#~ "пакунку. Загальнодоступне сховище зробить майбутню роботу ефективнішою."

#~ msgid ""
#~ "We use the `bzr branch` command to create a local branch of the package. "
#~ "We'll name the target directory `tomboy.dev` just to keep things easy to "
#~ "remember::"
#~ msgstr ""
#~ "Ми використовуємо команду `bzr branch` для створення локальної гілки "
#~ "пакунку. Каталог призначення назвемо `tomboy.dev`, просто тому, що так легше "
#~ "запам’ятати::"

#~ msgid "Upstream Tar"
#~ msgstr "Tar-файл з апстріму"

#~ msgid "Ubuntu Distributed Development — Introduction"
#~ msgstr "Розподілена розробка Ubuntu — вступ"

#~ msgid "Importing a Debian source package"
#~ msgstr "Імпорт пакунку джерельного коду Debian"

#~ msgid ""
#~ "As you can see, we just need to provide the remote location of the dsc file, "
#~ "and Bazaar will do the rest.  You've now got a Bazaar source branch."
#~ msgstr ""
#~ "Як Ви бачите - потрібно просто вказати віддалене розташування файлу dsc, а "
#~ "Bazaar зробить решту. Тепер в Вас є джерельна гілка Bazaar."

#~ msgid ""
#~ "If the package you want to work on is available in Debian but not Ubuntu, "
#~ "it's still easy to import the code to a local bzr branch for development.  "
#~ "Let's say you want to import the `newpackage` source package.  We'll start "
#~ "by creating a shared repository as normal, but we also have to create a "
#~ "working tree to which the source package will be imported (remember to cd "
#~ "out of the `tomboy` directory created above)::"
#~ msgstr ""
#~ "Якщо пакунок, над яким Ви бажаєте працювати, доступний в Debian, але не в "
#~ "Ubuntu - код легко імпортувати у локальну гілку bzr для розробки. Наприклад, "
#~ "Ви бажаєте імпортувати джерельний пакунок `newpackage`. Ми почнемо із "
#~ "створення загальнодоступного сховища у якості звичайного, але нам також "
#~ "потрібно створити робоче дерево, у яке буде імпортовано джерельний пакунок "
#~ "(не забудьте виконати cd out директорії `tomboy`, створеній вище)::"

#~ msgid ""
#~ "This will try a number of methods to get the upstream tar, firstly by "
#~ "recreating it from the ``upstream-x.y`` tag in the bzr archive, then by "
#~ "downloading from the Ubuntu archive, lastly by running ``debian/rules get-"
#~ "orig-source``. The upstream tar will also be recreated when using bzr to "
#~ "build the package::"
#~ msgstr ""
#~ "Таким чином пробуються декілька методів для потрапляння в tar апстріму, "
#~ "спочатку відтворюючи його з тегу ``upstream-x.y`` у архіві bzr, потім "
#~ "стягуючи з архіву Ubuntu, а потім запускаючи ``debian/rules get-orig-"
#~ "source``. Tar апстріму також буде відтворений при використанні bzr для "
#~ "побудови пакунку::"

#~ msgid "You can get the upstream tar by running::"
#~ msgstr "Отримати tar з апстріму можна за допомогою::"

#~ msgid "Getting a branch for a particular release"
#~ msgstr "Отримання гілки для певного випуску"

#~ msgid ""
#~ "This will download the upstream source ``kdetoys_4.6.5.orig.tar.bz2``, the "
#~ "packaging ``kdetoys_4.6.5-0ubuntu1.debian.tar.gz`` and the meta-data "
#~ "``kdetoys_4.6.5-0ubuntu1~ppa1.dsc``.  Assuming you have dpkg-dev installed "
#~ "it will extract these and give you the source package."
#~ msgstr ""
#~ "Вона завантажить джерельні коди з апстріму ``kdetoys_4.6.5.orig.tar.bz2``, "
#~ "набір вхідних файлів ``kdetoys_4.6.5-0ubuntu1.debian.tar.gz`` й метадані "
#~ "``kdetoys_4.6.5-0ubuntu1~ppa1.dsc``. Якщо в Вас встановлено dpkg-dev, вона "
#~ "витягне їх вміст і надасть Вам пакунок джерельного коду."

#~ msgid ""
#~ "*Ubuntu Distributed Development* (UDD) is a new technique for developing "
#~ "Ubuntu packages that uses tools, processes, and workflows similar to generic "
#~ "distributed version control system (DVCS) based software development.  The "
#~ "DVCS used for UDD is Bazaar_."
#~ msgstr ""
#~ "*Ubuntu Distributed Development* (UDD) — це нова технологія розробки "
#~ "пакунків Ubuntu, що використовує інструменти, процеси й послідовності дій, "
#~ "характерні для типової схеми розробки проґрам, заснованій на розподіленій "
#~ "системі керування версіями (DVCS). DVCS, що використовується в UDD — це "
#~ "Bazaar_."

#~ msgid "Traditional Packaging Limitations"
#~ msgstr "Обмеження традиційних методів створення пакунків"

#~ msgid ""
#~ "This guide focuses on packaging using the *Ubuntu Distributed Development* "
#~ "(UDD) method."
#~ msgstr ""
#~ "Цей посібник фокусується на роботі з пакунками з використанням методу "
#~ "*Ubuntu Distributed Development* (UDD)."

#~ msgid ""
#~ "Traditionally Ubuntu packages have been kept in tar archive files.  A "
#~ "traditional source package is made up of the upstream source tar, a "
#~ "\"debian\" tar (or compressed diff file for older packages) containing the "
#~ "packaging and a .dsc meta-data file.  To see a traditional package run::"
#~ msgstr ""
#~ "Традиційно пакунки Ubuntu зберігаються у архівних tar-файлах. Традиційний "
#~ "пакунок джерельного коду складається з tar-файлу з джерельним кодом із "
#~ "апстріму, \"debian\" tar-файлу (або стисненого diff-файлу для старіших "
#~ "пакунків), що містить набір вхідних файлів для ствроення пакунку, і файлу "
#~ ".dsc з метаданими. Щоб подивится на традиційний пакунок, виконайте команду::"

#~ msgid ""
#~ "The merge history includes two separate branches, one for the upstream "
#~ "source and one which adds the ``debian/`` packaging directory::"
#~ msgstr ""
#~ "Історія об’єднань включає дві окремі гілки, одну для джерела апстріму й "
#~ "іншу, яка додасть директорію пакунку ``debian/``::"

#~ msgid ""
#~ "Traditional packaging would edit these files and upload.  However this gives "
#~ "limited opportunity to collaborate with other developers, changes have to be "
#~ "passed around as diff files with no central way to track them and two "
#~ "developers can not make changes at the same time.  So most teams have moved "
#~ "to putting their packaging in a revision control system.  This makes it "
#~ "easier for several developers to work on a package together.  However there "
#~ "is no direct connection between the revision control system and the archive "
#~ "packages so the two must be manually kept in sync.  Since each team works in "
#~ "its own revision control system a prospective developer must first work out "
#~ "where that is and how to get the packaging before they can work on the "
#~ "package."
#~ msgstr ""
#~ "Традиційні методи створення пакунків відредагують та завантажать ці файли. "
#~ "Втім це дає обмежені можливості для співробітництва з іншими розробниками, "
#~ "зміни повинні передаватися через файли diff без центрального способу "
#~ "відстеження їх, на додаток два розробника не можуть вносити зміни одночасно. "
#~ "Тому більшість команд розробників перейшли від традиційного методу створення "
#~ "пакунків до системи контролю версій. Це дозволяє декільком розробникам "
#~ "працювати над пакунком разом. Втім немає прямого зв’язку між системою "
#~ "контролю версій й архівом пакунків, тому їх необхідно буде вручну "
#~ "синхронізувати. Оскільки кожна команда працює у власній системі контролю "
#~ "версій перспективний розробник повинен спочатку розібратися де, що й як "
#~ "отримати пакунок, перед тим як вони зможуть працювати з цим пакунком."

#~ msgid "Ubuntu Distributed Development"
#~ msgstr "Розподілена розробка Ubuntu"

#~ msgid ""
#~ "With Ubuntu Distributed Development all packages in the Ubuntu (and Debian) "
#~ "archive are automatically imported into Bazaar branches on our code hosting "
#~ "site Launchpad.  Changes can be made directly to these branches in "
#~ "incremental steps and by anyone with commit access.  Changes can also be "
#~ "made in forked branches and merged back in with Merge Proposals when they "
#~ "are large enough to need review or if they are by someone without direct "
#~ "commit access."
#~ msgstr ""
#~ "З Ubuntu Distributed Development усі пакунки у архіві Ubuntu (і Debian) "
#~ "автоматично імпортуються у гілки Bazaar на нашому сайті хостингу коду "
#~ "Launchpad. Зміни можна вносити напряму у ці гілки кроками збільшення будь-"
#~ "яким користувачем, в якого є доступ. Зміни також можна вносити у роздвоєні "
#~ "гілки й з’єднувати їх назад за допомогою Пропозицій та Злиттів (Merge "
#~ "Proposals), коли вони стануть достатньо великими для розгляду, або якщо "
#~ "створені кимось без прямого доступу."

#~ msgid ""
#~ "UDD branches are all in a standard location, so doing a checkout is easy::"
#~ msgstr ""
#~ "UDD гілки усі знаходяться у стандартному місцезнаходженні, тому налагодження "
#~ "буде легким::"

#~ msgid ""
#~ "(This command uses *qbzr* for a GUI, run ``log`` instead of ``qlog`` for "
#~ "console output.)"
#~ msgstr ""
#~ "(Ця команда використовує у якості графічного інтерфейсу *qbzr*. Для виводу у "
#~ "консоль, запустіть ``log`` замість ``qlog``.)"

#~ msgid ""
#~ "Many Ubuntu packages are based on the packages in Debian, UDD also imports "
#~ "the Debian package into our branches.  In the *kdetoys* branch above the "
#~ "Debian versions from *unstable* are from the merge with blue circles while "
#~ "those from *Debian experimental* are from the merge with yellow circles.  "
#~ "Debian releases are tagged with their version number, e.g., ``4:4.2.2-1``."
#~ msgstr ""
#~ "Багато пакунків Ubuntu засновані на пакунках в Debian, UDD також імпортує й "
#~ "пакунок Debian у наші гілки. У гілці *kdetoys* вище версії Debian з "
#~ "*unstable* після об’єднання позначені синіми колами, у той час як з *Debian "
#~ "experimental* після об’єднання позначені жовтими. Релізи Debian позначені "
#~ "номерами своїх версій, наприклад, ``4:4.2.2-1``."

#~ msgid "Bazaar"
#~ msgstr "Bazaar"

#~ msgid ""
#~ "From this we can clearly see what has changed in Ubuntu compared to Debian, "
#~ "very handy."
#~ msgstr ""
#~ "Тут ми можемо ясно побачити, що було змінено в Ubuntu у порівнянні з Debian-"
#~ "версією. Дуже зручно."

#~ msgid ""
#~ "(This command uses *qbzr* for a GUI, run ``diff`` instead of ``qdiff`` for "
#~ "console output.)"
#~ msgstr ""
#~ "(Ця команда використовує графічний інтерфейс *qbzr*. Запустіть ``diff`` "
#~ "замість ``qdiff`` для виводу у консоль.)"

#~ msgid ""
#~ "This UDD branch of *kdetoys* shows the full packaging for each version "
#~ "uploaded to Ubuntu with grey circles and the upstream source versions with "
#~ "green circles.  Versions are tagged with either the version in Ubuntu such "
#~ "as ``4:4.2.29-0ubuntu1`` or for the upstream branch with the upstream "
#~ "version ``upstream-4.2.96``."
#~ msgstr ""
#~ "UDD гілка *kdetoys* позначає повний пакунок для кожної версії, завантаженій "
#~ "в Ubuntu сірими колами й версії джерела апстріму - зеленими. Версії "
#~ "позначаються або версіями Ubuntu (наприклад, ``4:4.2.29-0ubuntu1``) або для "
#~ "гілок апстріму - версією апстріму (``upstream-4.2.96``)."

#~ msgid "Limitations of UDD"
#~ msgstr "Обмеження UDD"

#~ msgid ""
#~ "UDD branches use Bazaar, a distributed revision control system intended to "
#~ "be easy to use for those familiar with popular systems such as Subversion "
#~ "while offering the power of Git."
#~ msgstr ""
#~ "Гілки UDD використовують Bazaar — розподілену систему керування версіями, "
#~ "яка проста у використанні для тих, хто знайомий з такими популярними "
#~ "системами, як Subversion, й у той же час уявляє усю міць Git."

#~ msgid ""
#~ "So from a UDD branch you can see the complete history of changes to the "
#~ "package and compare any two versions.  For example, to see the changes "
#~ "between version 4.2.2 in Debian and the 4.2.2 in Ubuntu use::"
#~ msgstr ""
#~ "Таким чином з UDD-гілки Ви можете побачити повну історію змін пакунку й "
#~ "порівняти будь-які дві версії. Наприклад, щоб побачити відмінності між "
#~ "версією 4.2.2 в Debian і 4.2.2 в Ubuntu, використовуйте::"

#~ msgid ""
#~ "All of the above are being worked on and UDD is expected to become the main "
#~ "way to work on Ubuntu packages soon.  However currently most teams within "
#~ "Ubuntu do not yet work with UDD branches for their  development.  However "
#~ "because UDD branches are the same as the packages in the  archive any team "
#~ "should be able to accept merges against them."
#~ msgstr ""
#~ "Над усім вищеперерахованим наразі ведеться робота й очікується, що UDD "
#~ "незабаром стане основним способом роботи над пакунками Ubuntu. Втім, зараз "
#~ "більшість команд Ubuntu ще не працювали з гілками UDD. Але оскільки UDD "
#~ "гілки є тим самим, що й пакунки у архіві, будь-яка команда має бути у змозі  "
#~ "з ними працювати."

#~ msgid "Getting The Latest"
#~ msgstr "Отримання останніх змін"

#~ msgid "Updating your main branch"
#~ msgstr "Оновлення Вашої основної гілки"

#~ msgid ""
#~ "Doing a full branch with history can take a lot of time and network "
#~ "resources.  You may find it quicker to do a lightweight checkout ``bzr "
#~ "checkout --lightweight ubuntu:kdetoys`` but this will need a network access "
#~ "for any further bzr operations."
#~ msgstr ""
#~ "Створення повної гілки з історією може забрати багато часу та мережевих "
#~ "ресурсів. Можливо Вам швидше буде зробити легке налагодження ``bzr checkout -"
#~ "-lightweight ubuntu:kdetoys``, але тоді знадобиться мережевий доступ для "
#~ "будь-яких подальших операцій bzr."

#~ msgid ""
#~ "Working with patches is fiddly.  Patches can be seen as a branched revision "
#~ "control system, so we end up with RCS on top of RCS."
#~ msgstr ""
#~ "Робота над латками дуже клопітка. Латки можна розглядати як розгілковану "
#~ "переробку системи керування, таким чином ми отримуємо RCS поверх RCS."

#~ msgid ""
#~ "There is no way to build directly from branches.  You need to create a "
#~ "source package and upload that."
#~ msgstr ""
#~ "Немає способу створювати білди напряму з гілок. Потрібно створювати "
#~ "джерельний пакунок і завантажувати його."

#~ msgid ""
#~ "Updating your copy of a branch that corresponds to the package in a "
#~ "particular release is very simple, simply use `bzr pull` from the "
#~ "appropriate directory::"
#~ msgstr ""
#~ "Оновити Вашу копію гілки, що відповідає пакунку у певному випуску, дуже "
#~ "просто: виконайте `bzr pull` з відповідного каталогу::"

#~ msgid ""
#~ "If someone else has landed changes on a package, you will want to pull those "
#~ "changes in your own copies of the package branches."
#~ msgstr ""
#~ "Якщо хтось ще вніс зміни у пакунок, Вам може знадобитися отримати ці зміни у "
#~ "Ваші копії гілок пакунку."

#~ msgid ""
#~ "Ubuntu Distributed Development is a new method for working with Ubuntu "
#~ "packages.  It currently has some notable limitations:"
#~ msgstr ""
#~ "Ubuntu Distributed Development — новий метод роботи з пакунками Ubuntu. На "
#~ "даний час він має деякі суттєві обмеження:"

#~ msgid ""
#~ "This shows you the difference between package version 0.1-1 and 0.1-2."
#~ msgstr ""
#~ "Ця команда покаже Вам відмінності між версіями пакунку 0.1-1 і 0.1-2."

#~ msgid ""
#~ "Once you have updated your copy of a distroseries branch, then you may want "
#~ "to merge this in to your working branches as well, so that they are based on "
#~ "the latest code."
#~ msgstr ""
#~ "Як тільки Ви оновили свою копію гілки distroseries, то можливо забажаєте "
#~ "також об’єднати її зі своїми робочими гілками, щоб вони працювали на "
#~ "найостаннішому коді."

#~ msgid ""
#~ "You don't have to do this all the time though.  You can work on slightly "
#~ "older code with no problems.  The disadvantage would come if you were "
#~ "working on some code that someone else changed.  If you are not working on "
#~ "the latest version then your changes may not be correct, and may even "
#~ "produce conflicts."
#~ msgstr ""
#~ "Втім, Вам не потрібно робити це щоразу. Ви можете без проблем працювати й з "
#~ "трохи старим кодом. Недоліки можуть виявитися якщо Ви працювали над кодом, "
#~ "який змінив хтось ще. Якщо Ви працюєте не з найостаннішою версією, Ваші "
#~ "зміни можуть бути некоректними, й навіть можуть стати причиною конфлікту."

#~ msgid ""
#~ "The merge does have to be done at some point though.  The longer it is left, "
#~ "the harder may be, so doing it regularly should keep each merge simple.  "
#~ "Even if there are many merges the total effort would hopefully be less."
#~ msgstr ""
#~ "Злиття потрібно виконувати у певний момент. Чим довше Ви працюєте - тим "
#~ "складнішим може бути процес у майбутньому. Виконуйте злиття регулярно, щоб "
#~ "максимально спростити процес. Якщо навіть злиттів багато, у підсумку "
#~ "потрібно застосовувати менше загальних зусиль."

#~ msgid ""
#~ "To merge the changes you just need to use ``bzr merge``, but you must have "
#~ "committed your current work first::"
#~ msgstr ""
#~ "Щоб виконати злиття змін, Вам потрібно використовувати ``bzr merge``, але "
#~ "спочатку Ви повинні відправити свою поточну роботу::"

#~ msgid ""
#~ "Any conflicts will be reported, and you can fix them up.  To review the "
#~ "changes that you just merged use ``bzr diff``.  To undo the merge use ``bzr "
#~ "revert``.  Once you are happy with the changes then use ``bzr commit``."
#~ msgstr ""
#~ "Про будь-які конфлікти буде повідомлятися. Тож Ви зможете їх виправити у "
#~ "подальшому. Щоб розглянути зміни, використовуйте ``bzr diff``. Як тільки Ви "
#~ "закінчили роботу - використовуйте ``bzr commit``."

#~ msgid "Referring to versions of a package"
#~ msgstr "Відносно версій пакунку"

#~ msgid ""
#~ "You will often think in terms of versions of a package, rather than the "
#~ "underlying Bazaar revision numbers.  `bzr-builddeb` provides a revision "
#~ "specifier that makes this convenient.  Any command that takes a ``-r`` "
#~ "argument to specify a revision or revision range will work with this "
#~ "specifier, e.g. ``bzr log``, ``bzr diff``, and so on.  To view the versions "
#~ "of a package, use the ``package:`` specifier::"
#~ msgstr ""
#~ "Ви часто будете думати відносно версій пакунку, а не просто про цифри "
#~ "попередніх виправлень в Bazaar. `bzr-builddeb` для зручності надає "
#~ "специфікатор виправлень. Будь-яка команда, що використовує аргумент ``-r`` "
#~ "для вказувань виправлення або діапазону виправлень, буде працювати з цим "
#~ "специфікатором, наприклад, ``bzr log``, ``bzr diff``тощо. Щоб продивитися "
#~ "версії пакунку, використовуйте специфікатор ``package:``::"

#~ msgid "Getting the latest in to your working branches"
#~ msgstr "Отримання останніх змін у Ваші робочі гілки"

#~ msgid ""
#~ "If conflicts are reported then you need to edit those files to make them "
#~ "look how they should, removing the *conflict markers*.  Once you have done "
#~ "this, run::"
#~ msgstr ""
#~ "Якщо з’явиться звіт про конфлікти, Вам потрібно відредагувати відповідні "
#~ "файли, щоб привести їх до потрібного вигляду, прибравши конфліктуючі маркери "
#~ "(*conflict markers*). Як тільки Ви це зробите, виконайте::"

#~ msgid "Merging — Updating from Debian and Upstream"
#~ msgstr "Злиття — оновлення з Debian та апстріму"

#~ msgid ""
#~ "Once any conflicts are resolved, and you have made any other changes that "
#~ "you need, you will add a new changelog entry, and commit::"
#~ msgstr ""
#~ "Після того, як усі конфлікти вирішено, й Ви внесли усі інші необхідні зміни, "
#~ "потрібно додати новий запис у changelog й виконати фіксацію::"

#~ msgid "Merging from Debian"
#~ msgstr "Злиття з Debian"

#~ msgid ""
#~ "If that reports anything then you will either have to commit the changes, "
#~ "revert them, or shelve them to come back to later."
#~ msgstr ""
#~ "Якщо з’явиться звіт, то Вам потрібно або застосувати зміни, зробити відкат, "
#~ "або відкласти вирішення (й повернутися до їх вирішення пізніше)."

#~ msgid ""
#~ "While you are in any branch's working directory, you can merge in a branch "
#~ "from a different location.  First check that you have no uncommitted "
#~ "changes::"
#~ msgstr ""
#~ "Знаходячись у робочому каталозі будь-якої гілки, Ви можете виконати злиття "
#~ "змін з гілки у іншому місці. Спочатку перевірте, що в Вас немає "
#~ "незафіксованих змін::"

#~ msgid ""
#~ "Merging is one of the strengths of Bazaar, and something we do often in "
#~ "Ubuntu development.  Updates can be merged from Debian, from a new upstream "
#~ "release, and from other Ubuntu developers.  Doing it in Bazaar is pretty "
#~ "simple, and all based around the ``bzr merge`` command [#]_."
#~ msgstr ""
#~ "Злиття — це одна з найсильніших сторін Bazaar, й ми часто виконуємо його у "
#~ "процесі розробки Ubuntu. Злиття може бути виконано з оновленнями з Debian, з "
#~ "нового випуску у апстрімі й від інших розробників Ubuntu. Зробити це в "
#~ "Bazaar дуже просто, усе засновано на команді ``bzr merge`` [#]_."

#~ msgid ""
#~ "This will resolve any conflicted files that you fixed, and then tell you "
#~ "what else you have to deal with."
#~ msgstr ""
#~ "Це вирішить проблему з конфліктуючими файлами, які Ви виправляли, й "
#~ "повідомить що ще Вам потрібно зробити."

#~ msgid ""
#~ "This will merge the changes since the last merge point and leave you with "
#~ "changes to review.  This may cause some conflicts.  You can see everything "
#~ "that the ``merge`` command did by running::"
#~ msgstr ""
#~ "Це додасть зміни, внесені з миті останнього злиття й дасть Вам усі зміни для "
#~ "огляду. Це може потягнути конфлікти. Ви можете побачити усі дії, виконані "
#~ "командою ``merge``, запустивши::"

#~ msgid ""
#~ "After testing and committing the merge, you will need to seek sponsorship or "
#~ "upload to the archive in the normal way."
#~ msgstr ""
#~ "Після перевірки та фіксації злиття, Вам потрібно знайти поручителя або "
#~ "вивантажити пакунок у архів у звичний спосіб."

#~ msgid ""
#~ "If you are going to build the source package from this merged branch, you "
#~ "would use the ``-S`` option to the ``bd`` command.  One other thing you'll "
#~ "want to consider is also using the ``--package-merge`` option.  This will "
#~ "add the appropriate ``-v`` and ``-sa`` options to the source package so that "
#~ "all the changelog entries since the last Ubuntu change will be included in "
#~ "your ``_source.changes`` file.  For example::"
#~ msgstr ""
#~ "Якщо Ви збираєтеся створити джерельний пакунок з цієї об’єднаної гілки, то "
#~ "потрібно використовувати опцію ``-S`` команди ``bd``. Також Вам закортить "
#~ "розглянути використання опції ``--package-merge``. Це додасть відповідні "
#~ "опції ``-v`` і ``-sa`` до джерельного пакунку, щоб усі записи у лозі змін "
#~ "після останніх змін в Ubuntu були включені у Ваш файл ``_source.changes``. "
#~ "Наприклад::"

#~ msgid ""
#~ "However, before you commit, it is always a good thing to check all the "
#~ "Ubuntu changes by running::"
#~ msgstr ""
#~ "Втім перед фіксацією завжди бажано перевірити усі зміни, зроблені в Ubuntu, "
#~ "виконавши::"

#~ msgid ""
#~ "which will show the differences between the Debian (0.6.10-5) and Ubuntu "
#~ "versions (0.6.10-5ubuntu1).  In similar way you can compare to any other "
#~ "versions.  To see all available versions run::"
#~ msgstr ""
#~ "Ця команда покаже відмінності між версіями в Debian (0.6.10-5) і Ubuntu "
#~ "(0.6.10-5ubuntu1). Подібно Ви можете виконати порівняння з будь-якими іншими "
#~ "версіями. Щоб побачити усі доступні версії, виконайте::"

#~ msgid ""
#~ "This is done using the ``bzr merge-upstream`` command.  If your package has "
#~ "a valid ``debian/watch`` file, from inside the branch that you want to merge "
#~ "to, just type this::"
#~ msgstr ""
#~ "Це робиться командою ``bzr merge-upstream``. Якщо у Вашому пакунку є файл "
#~ "``debian/watch`` з правильним вмістом, то з каталогу гілки, у яку Ви "
#~ "збираєтеся злити зміни, просто наберіть::"

#~ msgid ""
#~ "This will download the tarball and merge it into your branch, automatically "
#~ "adding a ``debian/changelog`` entry for you.  ``bzr-builddeb`` looks at the "
#~ "``debian/watch`` file for the upstream tarball location."
#~ msgstr ""
#~ "Команда завантажить тарбол й зіллє його у Вашу гілку, автоматично додавши "
#~ "запис в ``debian/changelog``. ``bzr-builddeb`` продивляється файл "
#~ "``debian/watch``, щоб визначити місцезнаходження тарболу з апстріму."

#~ msgid ""
#~ "When upstream releases a new version (or you want to package a snapshot), "
#~ "you have to merge a tarball into your branch."
#~ msgstr ""
#~ "Коли в апстрімі випускається нова версія (або Ви бажаєте запакувати зняток), "
#~ "Вам потрібно виконати злиття tar-архіву й Вашої гілки."

#~ msgid ""
#~ "If you do *not* have a ``debian/watch`` file, you'll need to specify the "
#~ "location of the upstream tarball, and the version manually::"
#~ msgstr ""
#~ "Якщо в Вас *відсутній* файл ``debian/watch``, то Вам потрібно вручну вказати "
#~ "місцезнаходження тарболу з апстріму й версію::"

#~ msgid "as described earlier."
#~ msgstr "як був опис вище."

#~ msgid "Merging a new upstream version"
#~ msgstr "Злиття з новою версією з апстріму"

#~ msgid "Pushing to Launchpad"
#~ msgstr "Вивантаження на Launchpad"

#~ msgid ""
#~ "Once you are happy with your fix, and have a branch ready to go, the "
#~ "following steps can be used to publish your branch on Launchpad, link it to "
#~ "the bug issue, and create a *merge proposal* for others to review, and "
#~ "sponsors to upload."
#~ msgstr ""
#~ "Як тільки Ви задоволені своїм фіксом й Ваша гілка готова до роботи, потрібно "
#~ "зробити наступні кроки для оголошення своєї гілки на Launchpad, прив’язки її "
#~ "до багу, а потім створити пропозицію про злиття (*merge proposal*) для "
#~ "розгляду іншими користувачами й можливістю завантаження його поручителями."

#~ msgid ""
#~ "One of the biggest advantages to using the UDD workflow is to improve "
#~ "quality by seeking review of changes by your peers.  This is true whether or "
#~ "not you have upload rights yourself.  Of course, if you don't have upload "
#~ "rights, you will need to seek sponsorship."
#~ msgstr ""
#~ "Однією з великих переваг використання робочого процесу UDD - покращення "
#~ "якості шляхом відкликів про зміни від Ваших друзів і коллег. Це працює поза "
#~ "залежністю від того чи є в Вас права на завантаження. Звичайно, якщо в Вас "
#~ "немає прав на завантаження, то Вам потрібно знайти поручителя."

#~ msgid "Seeking Review and Sponsorship"
#~ msgstr "Пошук Оглядів та Поручительства"

#~ msgid ""
#~ "The ``--version`` option is used to specify the upstream version that is "
#~ "being merged in, as the command isn't able to infer that (yet)."
#~ msgstr ""
#~ "Опція ``--version`` використовується для вказування версії апстріму, з якої "
#~ "виконується злиття, оскільки команда не здатна (поки) дізнатися її "
#~ "самостійно."

#~ msgid ""
#~ "You will need newer versions of ``bzr`` and the ``bzr-builddeb`` for the "
#~ "``merge`` command to work.  Use the versions from Ubuntu 12.04 (Precise) or "
#~ "the development versions from the ``bzr`` PPA.  Specifically, you need "
#~ "``bzr`` version 2.5 beta 5 or newer, and ``bzr-builddeb`` version 2.8.1 or "
#~ "newer.  For older versions, use the ``bzr merge-package`` command instead."
#~ msgstr ""
#~ "Для роботи з командою ``merge`` Вам знадобляться новіші версії ``bzr`` та "
#~ "``bzr-builddeb``. Використовуйте версії з Ubuntu 12.04 (Precise) або "
#~ "розроблювані версії з PPA ``bzr``. Точніше кажучи, Вам знадобиться ``bzr`` "
#~ "версії 2.5 beta 5 або новішої, а також ``bzr-builddeb`` версії 2.8.1 або "
#~ "новішої. Для старих версій використовуйте назамін команду ``bzr merge-"
#~ "package``."

#~ msgid ""
#~ "The `merge-upstream` command will either tell you that it completed "
#~ "successfully, or that there were conflicts.  Either way you will be able to "
#~ "review the changes before committing as normal."
#~ msgstr ""
#~ "Команда ``merge-upstream`` повідомить або про своє вдале завершення, або про "
#~ "те, що є конфлікти. У будь-якому випадку в Вас буде можливість перевірити "
#~ "зміни перед їх фіксацією у звичний спосіб."

#~ msgid ""
#~ "The last parameter is the location of the tarball that you are upgrading to; "
#~ "this can either be a local filesystem path, or a http, ftp, sftp, etc. URI "
#~ "as shown.  The command will automatically download the tarball for you.  The "
#~ "tarball will be renamed appropriately and, if required, converted to ``.gz``."
#~ msgstr ""
#~ "Останній параметр — це місцезнаходження тарболу, на який виконується "
#~ "оновлення: це може бути шлях у локальній файловій системі, http, ftp, sftp "
#~ "або інша URI, як показано у прикладі. Команда автоматично завантажить тарбол "
#~ "для Вас, перейменує його відповідним чином й, якщо потрібно, перетворить у "
#~ "``.gz``."

#~ msgid ""
#~ "If you are merging an upstream release into an existing Bazaar branch that "
#~ "has not previously used the UDD layout, ``bzr merge-upstream`` will fail "
#~ "with an error that the tag for the previous upstream version is not "
#~ "available; the merge can't be completed without knowing what base version to "
#~ "merge against. To work around this, create a tag in your existing repository "
#~ "for the last upstream version present there; e.g., if the last Ubuntu "
#~ "release was *1.1-0ubuntu3*, create the tag *upstream-1.1* pointing to the "
#~ "bzr revision you want to use as the tip of the upstream branch."
#~ msgstr ""
#~ "Якщо Ви об’єднуєте реліз апстріму з існуючою гілкою Bazaar, у якій ще не "
#~ "використовуалася розмітка UDD, ``bzr merge-upstream`` пройде невдало й з "
#~ "помилкою, що тег попередніх версій апстріму недоступний. Злиття неможна "
#~ "виконати без знання базової версії для злиття. Для роботи з цим, створіть "
#~ "тег у своєму існуючому репозиторії для останньої версії апстріму що там є; "
#~ "наприклад, якщо останній реліз Ubuntu був *1.1-0ubuntu3*, створіть тег "
#~ "*upstream-1.1*, вказуючи на зміну bzr, яку Ви бажаєте використовувати як "
#~ "підказку для гілки апстріму."

#~ msgid ""
#~ "It is not critical to have a link to a bug for every change you make, but if "
#~ "you are fixing reported bugs then linking to them will be useful."
#~ msgstr ""
#~ "Створювати посилання на помилку для кожної Вашої зміни не обов’язково, але "
#~ "якщо Ви виправляєте помилки, для яких є звіт про ваду, то посилання на цей "
#~ "звіт можуть бути корисні."

#~ msgid ""
#~ "We previously showed you how to :ref:`associate your branch to the bug <link-"
#~ "via-changelog>` using ``dch`` and ``bzr commit``.  However, the branch and "
#~ "bug don't actually get linked until you push the branch to Launchpad."
#~ msgstr ""
#~ "Раніше ми показали Вам, як :ref:`пов’язати Вашу гілку з помилкою <link-via-"
#~ "changelog>`, використовуючи команди ``dch`` і ``bzr commit``. Втім гілка й "
#~ "помилка насправді не будуть пов’язані, поки Ви не вивантажите гілку на "
#~ "Launchpad командою push."

#~ msgid "The general form of the URL you should push your branch to is::"
#~ msgstr ""
#~ "Загальний формат URL, на яку Ви повинні вивантажити свою гілку, має такий "
#~ "вигляд::"

#~ msgid ""
#~ "However, this usually isn't enough to get Ubuntu developers to review and "
#~ "sponsor your change.  You should next submit a *merge proposal*."
#~ msgstr ""
#~ "Але зазвичай цього недостатньо, аби розробники Ubuntu перевірили Вашу зміну "
#~ "й взяли на себе поручительство над ним. Вам потрібно відправити *пропозицію "
#~ "злиття* (merge proposal)."

#~ msgid ""
#~ "The last component of the path is arbitrary; it's up to you to pick "
#~ "something meaningful."
#~ msgstr ""
#~ "Останній компонент шляху у цьому прикладі вибраний довільно, вкажіть замість "
#~ "нього помилку яка реально існує."

#~ msgid "If that fails, then you can use::"
#~ msgstr "Якщо зробити це не вдалося, Ви можете використовувати::"

#~ msgid "To do this open the bug page in a browser, e.g.::"
#~ msgstr "Для цього відкрийте сторінку помилки у оглядачі тенет, наприклад::"

#~ msgid ""
#~ "Merge proposals to package source branches will automatically subscribe the "
#~ "`~ubuntu-branches` team, which should be enough to reach an Ubuntu developer "
#~ "who can review and sponsor your package change."
#~ msgstr ""
#~ "Пропозиції про злиття для джерельних гілок автоматично підпишуть команду "
#~ "`~ubuntu-branches`, чого має бути достатньо для того, щоб привернути увагу "
#~ "розробника Ubuntu, який зможе дати відклик Вашим змінам й стати поручителем."

#~ msgid ""
#~ "where most of the URL matches what you used for `bzr push`.  On this page, "
#~ "you'll see a link that says *Propose for merging into another branch*.  Type "
#~ "in an explanation of your change in the *Initial Comment* box.  Lastly, "
#~ "click *Propose Merge* to complete the process."
#~ msgstr ""
#~ "де більша частина URL збігається з тією URL, яку Ви вказували у команді `bzr "
#~ "push`. На цій сторінці Ви побачите посилання *Propose for merging into "
#~ "another branch*. Наберіть опис Вашої зміни у полі *Initial Comment*. Потім "
#~ "клацніть *Propose Merge*, щоб завершити процес."

#~ msgid ""
#~ "You can then reply to the merge proposal review email explaining what you "
#~ "changed, and asking for re-review, or you can reply on the merge proposal "
#~ "page in Launchpad."
#~ msgstr ""
#~ "Ви можете відповісти на email з оглядом пропозиції про злиття поясненням "
#~ "того, які зміни Ви внесли, а також можете попрохати провести повторний "
#~ "огляд; або ж Ви можете відправити свою відповідь через Launchpad."

#~ msgid ""
#~ "As noted above, some sponsors still prefer reviewing a *debdiff* attached to "
#~ "bug reports instead of a merge proposal.  If you're requested to include a "
#~ "debdiff, you can generate one like this (from inside your `bug-12345` "
#~ "branch)::"
#~ msgstr ""
#~ "Як було вказано вище, деякі поручителі віддають перевагу перевірці "
#~ "*debdiff*, прикріпленому до звіту про ваду, замість пропозиції злиття. Якщо "
#~ "вас попрохали включити debdiff, Ви можете створити його наступним чином (з "
#~ "Вашої гілки `bug-12345`)::"

#~ msgid "Expectations"
#~ msgstr "Очікування"

#~ msgid "Generating a debdiff"
#~ msgstr "Створення debdiff"

#~ msgid ""
#~ "Now when you push your branch to Launchpad, Bazaar will remembered where you "
#~ "pushed to, and will update the branch on Launchpad with your latest commits. "
#~ "All you need to do is::"
#~ msgstr ""
#~ "Тепер коли Ви просунули свою гілку в Launchpad, Bazaar оновить гілку на "
#~ "Launchpad Вашими останніми змінами. Усе, що Вам потрібно зробити::"

#~ msgid "Dealing with feedback from sponsors"
#~ msgstr "Робота зі зворотнім зв’язком від поручителів"

#~ msgid ""
#~ "If a sponsor reviews your branch and asks you to change something, you can "
#~ "do this fairly easily.  Simply go to the branch that you were working in "
#~ "before, make the changes requested, and then commit::"
#~ msgstr ""
#~ "Якщо поручитель перевіряє Вашу гілку й прохає Вас щось змінити, то зробити "
#~ "це дуже легко. Просто перейдіть у гілку, над якою Ви працювали, зробіть "
#~ "потрібні зміни й виконайте фіксацію::"

#~ msgid ""
#~ "Another way is to is to open the merge proposal and download the diff."
#~ msgstr "Інший спосіб — відкрити пропозицію злиття й завантажити diff."

#~ msgid ""
#~ "You should ensure that diff has the changes you expect, no more and no less. "
#~ "Name the diff appropriately, e.g. ``foobar-12345.debdiff`` and attach it to "
#~ "the bug report."
#~ msgstr ""
#~ "Ви повинні переконатися, що diff-файл містить очікувані Вами зміни, не "
#~ "більше й не менше. Дайте йому відповідне ім’я, наприклад, ``foobar-"
#~ "12345.debdiff`` і прикріпіть до звіту про ваду."

#~ msgid ""
#~ "Note that if you are sponsored via a debdiff attached to a bug report you "
#~ "need to manually update by generating a new diff and attaching that to the "
#~ "bug report."
#~ msgstr ""
#~ "Зверніть увагу - Вас спонсорують через debdiff, прикріплений до звіту про "
#~ "ваду - Вам слід оновлювати його вручну, генеруючи новий diff й прикріплюючи "
#~ "його до звіту про ваду."

#~ msgid ""
#~ "The Ubuntu developers have set up a schedule of \"patch pilots\", who "
#~ "regularly review the sponsoring queue and give feedback on branches and "
#~ "patches. Even though this measure has been put in place it might still take "
#~ "several days until you hear back. This depends on how busy everybody is, if "
#~ "the development release is currently frozen, or other factors."
#~ msgstr ""
#~ "Розробники Ubuntu склали розклад людей (так званих \"patch pilots\"), які "
#~ "регулярно перевіряють чергу поручительства й надають зворотній зв’язок з "
#~ "питань роботи з гілками та латками. Але, навіть не дивлячись на це, може "
#~ "пройти декілька днів, поки Ви отримаєте відповідь. Це залежить від їх "
#~ "зайнятості, від стану заморозки поточної версії та інших факторів."

#~ msgid ""
#~ "If you haven't heard back in a while, feel free to join `#ubuntu-devel` on "
#~ "`irc.freenode.net` and find out if somebody can help you there."
#~ msgstr ""
#~ "Якщо Ви не отримуєте відповіді протягом тривалого часу, під’єднайтеся до "
#~ "каналу `#ubuntu-devel` на `irc.freenode.net` й знайдіть когось, хто може Вам "
#~ "допомогти."

#~ msgid ""
#~ "For more information on the generall sponsorship process, review the "
#~ "documentation on our wiki as well: https://wiki.ubuntu.com/SponsorshipProcess"
#~ msgstr ""
#~ "Щоб дізнатися більше про процес поручительства, прочитайте також нашу вікі-"
#~ "документацію: https://wiki.ubuntu.com/SponsorshipProcess"

#~ msgid ""
#~ "For older versions of bzr, you can use the ``merge-package`` command "
#~ "instead::"
#~ msgstr ""
#~ "Для старіших версій bzr можна використовувати назамін команду ``merge-"
#~ "package``::"

#~ msgid ""
#~ "This pulls in any changes that may have been committed while you were "
#~ "working on your fix.  From here, you have several options.  If the changes "
#~ "on the trunk are large and you feel should be tested along with your change "
#~ "you can merge them into your bug fix branch and test there.  If not, then "
#~ "you can carry on merging your bug fix branch into the development trunk "
#~ "branch.  As of bzr 2.5 and bzr-builddeb 2.8.1, this works with just the "
#~ "standard ``merge`` command::"
#~ msgstr ""
#~ "Це застосує будь-які зміни, які були внесені за час Вашої роботи над фіксом. "
#~ "Починаючи з цієї миті в Вас є декілька варіянтів. Якщо Ваші зміни великі й "
#~ "Ви відчуваєте, що їх слід протестувати разом з Вашими змінами - то можна "
#~ "об’єднати їх у гілці виправлення вад і провести тестування там. Якщо ні, то "
#~ "Ви можете продовжити процес злиття у Вашій гілці виправлення вади. Стосовно "
#~ "bzr 2.5 і bzr-builddeb 2.8.1, це працює так само як й стандартна команда "
#~ "``merge``::"

#~ msgid ""
#~ "First, you need to check that you have the latest version of the package in "
#~ "your checkout of the development package trunk::"
#~ msgstr ""
#~ "Спочатку Вам потрібно переконатися, що в Вас найостанніша версія пакунку у "
#~ "налагодженні дерева пакунку розробки::"

#~ msgid ""
#~ "When you have a branch with a change that you would like to upload you need "
#~ "to get that change back on to the main source branch, build a source "
#~ "package, and then upload it."
#~ msgstr ""
#~ "Коли в Вас є гілка із змінами, які Ви бажаєте завантажити, то потрібно "
#~ "відправити цю зміну назад на джерельну гілку, створити джерельний пакунок, а "
#~ "потім завантажити його."

#~ msgid "Uploading a change made by you"
#~ msgstr "Вивантаження змін, зроблених Вами"

#~ msgid "Uploading a package"
#~ msgstr "Завантаження пакунку"

#~ msgid ""
#~ "Once that is done you should review the change you are about to commit with "
#~ "``bzr diff``.  This should show you the same changes as a debdiff would "
#~ "before you upload the source package."
#~ msgstr ""
#~ "Як тільки це зроблено, Ви повинні ще раз переперевірити зміни, які бажаєте "
#~ "відправити, за допомогою ``bzr diff``. Це має показати ті ж зміни, як "
#~ "показав би debdiff до завантаження джерельного пакунку."

#~ msgid ""
#~ "The next step is to build and test the modified source package as you "
#~ "normally would::"
#~ msgstr ""
#~ "Наступний крок — зібрати й протестувати змінений пакунок джерельного коду, "
#~ "як Ви це зазвичай робите::"

#~ msgid ""
#~ "Next you should make sure the ``debian/changelog`` is as you would like, "
#~ "with the correct distribution, version number, etc."
#~ msgstr ""
#~ "Далі потрібно переконатися у правильності вмісту ``debian/changelog``, "
#~ "тобто, що там правильно вказаний дистрибутив, номер версії тощо."

#~ msgid ""
#~ "This will merge the two trees, possibly producing conflicts, which you'll "
#~ "need to resolve manually."
#~ msgstr ""
#~ "Ця команда зіллє два дерева й, можливо, повідомить про конфлікти, які Вам "
#~ "потрібно буде вирішити вручну."

#~ msgid ""
#~ "This tag will tell the package importer that what is in the Bazaar branch is "
#~ "the same as in the archive."
#~ msgstr ""
#~ "Цей тег повідомить імпортуючому пакунок, що вміст гілки Bazaar ідентичний "
#~ "вмісту архіву."

#~ msgid ""
#~ "When you're finally happy with your branch, make sure you've committed all "
#~ "your changes, then tag the branch with the changelog's version number.  The "
#~ "``bzr tag`` command will do this for you automatically when given no "
#~ "arguments::"
#~ msgstr ""
#~ "Коли Ви нарешті задоволені своєю гілкою, переконайтеся що відправили усі "
#~ "зміни, а потім позначте гілку номером версії логу змін. Команда ``bzr tag`` "
#~ "зробить це автоматично, якщо не вказано жодного аргументу::"

#~ msgid ""
#~ "You need one last step to get your changes uploaded into Ubuntu or your PPA; "
#~ "you need to ``dput`` the source package to the appropriate location.  For "
#~ "example, if you want to upload your changes to your PPA, you'd do::"
#~ msgstr ""
#~ "Вам потрібен один останній крок, щоб відправити свої зміни в Ubuntu або Ваш "
#~ "PPA: Вам потрібно завантажити за допомогою ``dput`` пакунок джерельного коду "
#~ "у відповідне місце. Наприклад, щоб завантажити зміни в PPA, зробіть таке::"

#~ msgid "Now you can push the changes back to Launchpad::"
#~ msgstr "Тепер Ви можете вивантажити командою push зміни назад на Launchpad::"

#~ msgid "(Change the destination if you are uploading an SRU or similar.)"
#~ msgstr ""
#~ "(Змініть місце призначення, якщо Ви вивантажуєте SRU або щось подібне.)"

#~ msgid "or, if you have permission to upload to the primary archive::"
#~ msgstr "або, якщо в Вас є права завантаження до основного архіву::"

#~ msgid ""
#~ "You can do this if you notice something needs more work, or if you would "
#~ "like to ask the contributor to fix up conflicts when sponsoring something."
#~ msgstr ""
#~ "Ви можете зробити це якщо помітите, що потрібно ще не багато роботи, або "
#~ "якщо бажаєте попрохати розробника виправити конфлікти (якщо виступаєте його "
#~ "поручителем)."

#~ msgid ""
#~ "If you are going to sponsor someone's work, but you would like to roll it up "
#~ "with some changes of your own then you can merge their work in to a separate "
#~ "branch first."
#~ msgstr ""
#~ "Якщо Ви є поручителем над чийоюсь роботою, але бажаєте доповнити її "
#~ "декількома власними змінами, то Ви можете спочатку виконати злиття їх роботи "
#~ "у окрему гілку."

#~ msgid "Sponsoring something and making your own changes"
#~ msgstr "Поручительство над чимось і внесення своїх власних змін"

#~ msgid ""
#~ "At any time before you `dput` the source package you can decide to cancel an "
#~ "upload and revert the changes::"
#~ msgstr ""
#~ "У будь-який час до виконання дії `dput` з джерельним пакунком Ви можете "
#~ "скасувати завантаження й зробити відкат усіх змін::"

#~ msgid ""
#~ "You are now free to delete your feature branch, as it is merged, and can be "
#~ "re-downloaded from Launchpad if needed."
#~ msgstr ""
#~ "Тепер Ви можете вилучити гілку, оскільки вона вже об’єднана, й за "
#~ "необхідності її можна поновій стягнути з Launchpad."

#~ msgid "Sponsoring a change"
#~ msgstr "Поручительство над зміною"

#~ msgid ""
#~ "Sponsoring someone else's change is just like the above procedure, but "
#~ "instead of merging from a branch you created, you merge from the branch in "
#~ "the merge proposal::"
#~ msgstr ""
#~ "Поручительство над чийоюсь зміною схоже на процедуру описану вище, але "
#~ "замість злиття із створеної Вами гілки Ви виконуєте злиття з гілки, що є у "
#~ "пропозиції злиття::"

#~ msgid ""
#~ "If there are lots of merge conflicts you would probably want to ask the "
#~ "contributor to fix them up.  See the next section to learn how to cancel a "
#~ "pending merge."
#~ msgstr ""
#~ "Якщо при злитті виникає багато конфліктів, можливо Ви забажаєте попрохати "
#~ "розробника їх виправити. Дивіться у наступному розділі як скасувати "
#~ "заплановане злиття."

#~ msgid ""
#~ "But if the changes look good, commit and then follow the rest of the "
#~ "uploading process::"
#~ msgstr ""
#~ "Але якщо із змінами усе добре - підтвердіть, а потім пройдіть частину "
#~ "процесу завантаження що залишилася::"

#~ msgid "Canceling an upload"
#~ msgstr "Скасування вивантаження"

#~ msgid ""
#~ "If you don't have an existing branch, but you know you would like to make "
#~ "changes based on what the contributor provides then you should start by "
#~ "grabbing their branch::"
#~ msgstr ""
#~ "Якщо в Вас немає існуючої гілки, але Ви знаєте, що бажали б внести зміни, "
#~ "основуючись на даних розробника, то Ви повинні найперш спарсити їх гілку::"

#~ msgid ""
#~ "If you already have a branch where you are working on the package and you "
#~ "would like to include their changes, then simply run the ``bzr merge`` from "
#~ "that branch, instead of the checkout of the development package.  You can "
#~ "then make the changes and commit, and then carry on with your changes to the "
#~ "package."
#~ msgstr ""
#~ "Якщо в Вас вже є гілка, у якій Ви працюєте над пакунком й Ви бажаєте "
#~ "включити усі зміни - просто запустіть ``bzr merge`` з цієї гілки, замість "
#~ "налагодження пакунку розробки. Потім Ви можете внести зміни й відправити, а "
#~ "потім продовжити роботу із змінами до пакунку."

#~ msgid "Working on a Package"
#~ msgstr "Робота з пакунком"

#~ msgid ""
#~ "Once you have the source package branch in a shared repository, you'll want "
#~ "to create additional branches for the fixes or other work you plan to do.  "
#~ "You'll want to base your branch off the package source branch for the distro "
#~ "release that you plan to upload to.  Usually this is the current development "
#~ "release, but it may be older releases if you're backporting to an SRU for "
#~ "example."
#~ msgstr ""
#~ "Як тільки в Вас є гілка з джерельним пакунком у загальнодоступному сховищі, "
#~ "Ви забажаєте створити додаткові гілки для фіксів або іншої запланованої "
#~ "роботи. Ви забажаєте, щоб Ваша гілка засновувалася на пакунку джерельної "
#~ "гілки релізу distro, куди Ви плануєте завантажувати. Зазвичай це поточний "
#~ "реліз розробки, але це можуть бути й старіші релізи, якщо Ви, наприклад, "
#~ "виконуєте зворотній порт на SRU."

#~ msgid ""
#~ "then work in this new branch, and then merge it in to the main one and "
#~ "upload as if it was your own work.  The contributor will still be mentioned "
#~ "in the changelog, and Bazaar will correctly attribute the changes they made "
#~ "to them."
#~ msgstr ""
#~ "потім працюйте у цій новій гілці, а після цього виконайте її злиття з "
#~ "головною й завантажте таким чином, як якби завантажували власну роботу. "
#~ "Розробник-участник усе ще буде згаданий у логах змін, і Bazaar належним "
#~ "чином призначить їм внесені ними зміни."

#~ msgid ""
#~ "Now you can do all my work in the ``bug-12345`` directory.  You make changes "
#~ "there as necessary, committing as you go along.  This is just like doing any "
#~ "kind of software development with Bazaar.  You can make intermediate commits "
#~ "as often as you like, and when your changes are finished, you will use the "
#~ "standard ``dch`` command (from the ``devscripts`` package)::"
#~ msgstr ""
#~ "Тепер Ви можете виконувати усю роботу в директорії ``bug-12345``. Робіть там "
#~ "усі необхідні зміни, не забуваючи заразом відправляти свою роботу. Цей "
#~ "процес схожий з розробкою будь-яких застосунків за допомогою Bazaar. Можна "
#~ "робити проміжні відправки так часто, як забажаєте, а коли Ви закінчили "
#~ "роботу над змінами, використовуйте стандартну команду ``dch`` (з пакунку "
#~ "``devscripts``)::"

#~ msgid "Branching for a change"
#~ msgstr "Гілкування для змін"

#~ msgid ""
#~ "This will drop you in an editor to add an entry to the `debian/changelog` "
#~ "file."
#~ msgstr ""
#~ "Ця команда відкриє редактор та додасть запис у файл `debian/changelog`."

#~ msgid ""
#~ "The first thing to do is to make sure your source package branch is up-to-"
#~ "date.  It will be if you just checked it out, otherwise do this::"
#~ msgstr ""
#~ "Найперш переконайтеся, що гілка джерельного пакунку актуальна. Якщо Ви її "
#~ "тільки-но перевірили, то вона буде актуальною, якщо ж ні, то зробіть таке::"

#~ msgid ""
#~ "Any updates to the package that have uploaded since your checkout will now "
#~ "be pulled in.  You do not want to make changes to this branch.  Instead, "
#~ "create a branch that will contain just the changes you're going to make.  "
#~ "Let's say you want to fix bug 12345 for the Tomboy project.  When you're in "
#~ "the shared repository you previously created for Tomboy, you can create your "
#~ "bug fix branch like this::"
#~ msgstr ""
#~ "Будуть показані будь-які оновлення стосовно пакунку, які були завантажені з "
#~ "миті налагодження. Ви не бажаєте вносити зміни у цю гілку. Замість цього "
#~ "створіть гілку, яка буде містити лише ті зміни, які Ви збираєтеся внести. "
#~ "Припустімо, Ви бажаєте виправити баг 12345 для проєкту Tomboy. Коли Ви "
#~ "знаходитеся у загальнодоступному сховищі, раніше створеному для Tomboy, Ви "
#~ "можете створити гілку для виправлення вад таким чином::"

#~ msgid ""
#~ "When you added your ``debian/changelog`` entry, you should have included a "
#~ "bug fix tag that indicated which Launchpad bug issue you're fixing.  The "
#~ "format of this textual tag is pretty strict: ``LP: #12345``.  The space "
#~ "between the ``:`` and the ``#`` is required and of course you should use the "
#~ "actual bug number that you're fixing.  Your ``debian/changelog`` entry might "
#~ "look something like::"
#~ msgstr ""
#~ "При додаванні запису в ``debian/changelog`` Ви повинні включити тег "
#~ "виправлення помилки, який вказує, для якого повідомлення про помилку на "
#~ "Launchpad Ви створили виправлення. Цей текстовий тег має цілком визначений "
#~ "формат: ``LP: #12345``. Пробіл між ``:`` і ``#`` обов’язковий й, зрозуміло, "
#~ "Ви повинні вказати номер реально існуючої помилки, яку Ви виправляєте. Ваш "
#~ "``debian/changelog`` може виглядати приблизно так::"

#~ msgid ""
#~ "This only works with bzr-builddeb 2.7.5 and bzr 2.4, for older versions use "
#~ "``debcommit``."
#~ msgstr ""
#~ "Це працює лише з bzr-builddeb 2.7.5 і bzr 2.4, для старіших версій "
#~ "використовуйте ``debcommit``."

#~ msgid ""
#~ "In order to build the package you can use the ``bzr builddeb`` command from "
#~ "the ``bzr-builddeb`` package.  You can build a source package with::"
#~ msgstr ""
#~ "Щоб створити пакунок, Ви можете використовувати команду ``bzr builddeb`` з "
#~ "пакунку ``bzr-builddeb``. Ви можете створити джерельний пакунок за "
#~ "допомогою::"

#~ msgid ""
#~ "(``bd`` is an alias for ``builddeb``.)  You can leave the package unsigned "
#~ "by appending ``-- -uc -us`` to the command."
#~ msgstr ""
#~ "(``bd`` — це псевдонім для ``builddeb``.) Ви можете залишити пакунок "
#~ "непідписаним, додавши до команди ``-- -uc -us``."

#~ msgid ""
#~ "Once you've got the source package, you can build it as normal with "
#~ "``pbuilder-dist`` (or ``pbuilder`` or `sbuild`_)."
#~ msgstr ""
#~ "Після того, як Ви отримали пакунок джерельного коду, можна зібрати його як "
#~ "звичайно, за допомогою ``pbuilder-dist`` (або ``pbuilder``, або `sbuild`_)."

#~ msgid ""
#~ "A hook in bzr-builddeb will use the debian/changelog text as the commit "
#~ "message and set the tag to mark bug #12345 as fixed."
#~ msgstr ""
#~ "Хук в bzr-builddeb буде використовувати текст debian/changelog як "
#~ "повідомлення про завершення відправки й встановить тег для позначення багу "
#~ "#12345 у якості фіксованого."

#~ msgid "Commit with the normal::"
#~ msgstr "Підтвердити з нормальним::"

#~ msgid ""
#~ "It is also possible to use your normal tools, as long as they are able to "
#~ "strip the .bzr directories from the package, e.g.::"
#~ msgstr ""
#~ "Ви можете також використовувати свої звичайні інструменти, якщо вони здатні "
#~ "прибирати каталоги ``.bzr`` з пакунку, наприклад::"

#~ msgid ""
#~ "If you ever see an error related to trying to build a native package without "
#~ "a tarball, check to see if there is a ``.bzr-builddeb/default.conf`` file "
#~ "erroneously specifying the package as native.  If the changelog version has "
#~ "a dash in it, then it's not a native package, so remove the configuration "
#~ "file. Note that while ``bzr builddeb`` has a ``--native`` switch, it does "
#~ "not have a ``--no-native`` switch."
#~ msgstr ""
#~ "Якщо Ви колись зіштовхнетеся з помилкою, пов’язаною зі спробою скласти "
#~ "рідний пакунок без tar-архіву, переконайтеся що там є файл ``.bzr-"
#~ "builddeb/default.conf``, що помилково видає пакунок за рідний. Якщо у версії "
#~ "логу змін є дефіс, то це не рідний пакунок, тому файл конфігурації слід "
#~ "прибрати. Зверніть увагу, якщо в ``bzr builddeb`` є оператор ``--native``, "
#~ "то в нього немає оператора ``--no-native``."

#~ msgid ""
#~ "Along the way, you'll want to build your branch so that you can test it to "
#~ "make sure it does actually fix the bug."
#~ msgstr ""
#~ "Напевно Ви забажаєте створити свою гілку, щоб Ви могли перевірити її і "
#~ "переконатися, що вона справді виправляє баг."
