# French translation for ubuntu-packaging-guide
# Copyright (c) 2012 Rosetta Contributors and Canonical Ltd 2012
# This file is distributed under the same license as the ubuntu-packaging-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: ubuntu-packaging-guide\n"
"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
"POT-Creation-Date: 2013-08-15 14:51+0000\n"
"PO-Revision-Date: 2013-09-08 12:41+0000\n"
"Last-Translator: Anne <anneonyme017@gmail.com>\n"
"Language-Team: French <fr@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2013-09-09 04:49+0000\n"
"X-Generator: Launchpad (build 16760)\n"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:3
msgid "autopkgtest: Automatic testing for packages"
msgstr "autopkgtest : tests automatiques pour les paquets"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:5
msgid ""
"The `DEP 8 specification`_ defines how automatic testing can very easily be "
"integrated into packages. To integrate a test into a package, all you need "
"to do is:"
msgstr ""
"La `spécification DEP 8`_ définit la façon dont les tests automatiques "
"peuvent être très facilement intégrés dans les paquets. Pour intégrer un "
"test dans un paquet, tout ce que vous devez faire est de :"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:9
msgid "add the following to the Source section in ``debian/control``::"
msgstr "ajoutez ce qui suit à la section Source dans ``debian/control``::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:13
msgid ""
"add a file called ``debian/tests/control`` which specifies the requirements "
"for the testbed,"
msgstr ""
"ajoutez un fichier appelé ``debian/tests/control`` qui spécifie les "
"exigences pour le banc d'essai,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:15
msgid "add the tests in ``debian/tests/``."
msgstr "ajoutez les tests dans ``debian/tests/``."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:19
msgid "Testbed requirements"
msgstr "Exigences du banc d'essai"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:21
msgid ""
"In ``debian/tests/control`` you specify what to expect from the testbed. So "
"for example you list all the required packages for the tests, if the testbed "
"gets broken during the build or if ``root`` permissions are required. The "
"`DEP 8 specification`_ lists all available options."
msgstr ""
"Dans ``debian/tests/control`` vous spécifiez ce que vous attendez du banc "
"d'essai. Ainsi, par exemple, vous listez tous les paquets nécessaires pour "
"les tests, si le banc d'essai se casse lors de la construction ou si les "
"autorisations ``root`` sont nécessaires. La `spécification DEP 8`_ "
"répertorie toutes les options disponibles."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:26
msgid ""
"Below we are having a look at the ``glib2.0`` source package. In a very "
"simple case the file would look like this::"
msgstr ""
"Ci-dessous, nous voyons un aperçu du paquet source ``glib2.0``. Dans un cas "
"très simple, le fichier devrait ressembler à ceci::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:32
msgid ""
"For the test in ``debian/tests/build`` this would ensure that the packages "
"``libglib2.0-dev`` and ``build-essential`` are installed."
msgstr ""
"Pour le test dans ``debian/tests/build``, cela permettrait de s'assurer que "
"les paquets ``libglib2.0-dev`` et ``build-essential``  sont installés."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:35
msgid ""
"You can use ``@`` in the ``Depends`` line to indicate that you want all the "
"packages installed which are built by the source package in question."
msgstr ""
"Vous pouvez utiliser ``@`` de la ligne ``Depends`` pour indiquer que vous "
"souhaitez tous les paquets installés construits par la paquet source en "
"question."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:41
msgid "The actual tests"
msgstr "Les tests réels"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:43
msgid "The accompanying test for the example above might be:"
msgstr "Le test accompagnant l'exemple ci-dessus pourrait être :"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:75
msgid ""
"Here a very simple piece of C code is written to a temporary directory. Then "
"this is compiled with system libraries (using flags and library paths as "
"provided by `pkg-config`). Then the compiled binary, which just exercises "
"some parts of core glib functionality, is run."
msgstr ""
"Ici, un morceau très simple de code C est écrit dans un répertoire "
"temporaire. C'est ensuite compilé avec les bibliothèques système (en "
"utilisant les drapeaux et chemins des bibliothèques fournis par `pkg-"
"config`). Ensuite, le binaire compilé, qui fait juste appel à quelques "
"fonctionnalités glib de parties du noyau, est exécuté."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:80
msgid ""
"While this test is very small and basic, it tests quite a number of core "
"components on a system. This may help to uncover critical issues early on."
msgstr ""
"Bien que ce test soit très petit et basique, il teste un grand nombre de "
"composantes du noyau d'un système. Cela peut aider à découvrir plus tôt des "
"problèmes critiques."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:84
msgid "Executing the test"
msgstr "Exécution du test"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:86
msgid ""
"The test script can be easily executed on its own, but if you want to make "
"sure that the testbed is properly set up, you might want to use ``adt-run`` "
"from the ``autopkgtest`` package to execute the test. The easiest way to do "
"this is to run this command in the source tree::"
msgstr ""
"Le script de test peut être facilement exécuté tout seul, mais si vous "
"voulez être sûr que le banc d'essai est correctement configuré, il est "
"préférable d'utiliser ``adt-run`` depuis le paquet ``autopkgtest`` pour "
"exécuter le test. La plus simple façon de le faire est de lancer cette "
"commande dans l'arbre source::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:93
msgid ""
"The downside of this approach is that you test it locally, but can't ensure "
"that this will work in a minimal environment. For example will it be hard to "
"ensure that all the required packages are installed for the tests. With "
"`lp:auto-package-testing`_ we have a more comprehensive testing tool. It "
"uses a pristine virtual machine to run the tests. To set it up, firstly "
"install the needed dependencies::"
msgstr ""
"L'inconvénient de cette approche est que vous le testez en local, mais vous "
"ne pouvez pas être sûr que cela fonctionnera dans un environnement minimal. "
"Il sera par exemple difficile de s'assurer que tous les paquets requis sont "
"installés pour les tests. Avec `lp:auto-package-testing`_ nous avons un "
"outil de test bien plus complet. Il utilise une machine virtuelle toute "
"fraîche pour exécuter les tests. Pour le paramétrer, commencez par installer "
"les dépendances nécessaires::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:102
msgid "Then, get the source code from Launchpad::"
msgstr "Ensuite, récupérez le code source sur Launchpad::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:107
msgid "And provision a Saucy AMD64 system::"
msgstr "Et provisionnez un système Saucy AMD64::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:111
msgid ""
"This command will create a pristine Saucy AMD64 VM from a cloud image. To "
"run the tests, simply run::"
msgstr ""
"Cette commande va créer une Machine Virtuelle vierge AMD 64 Saucy depuis une "
"image issue du nuage. Pour lancer les tests, exécutez simplement ::"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:117
msgid ""
"This would use the source package in ``/tmp/glib2.0-2.35.7/`` and run the "
"tests from this tree against the package ``glib2.0`` from the archive. The "
"option ``-S`` also supports schemes for bzr, git, and apt sources. If you "
"only specify a source with ``-S`` but do not specify a package name, this "
"will instead build the branch and install the binaries from that build; this "
"is useful if you want to run tests on a newer version than the one packaged "
"in Ubuntu, or the package is not in Ubuntu at all. If use the ``-k`` flag "
"you can log into the virtual machine after the tests were run. This makes it "
"very easy to debug issues."
msgstr ""
"Cela utilisera le paquet source dans ``/tmp/glib2.0-2.35.7/`` et lancera les "
"tests de cet arbre sur le paquet ``glib2.0`` de l'archive. L' option ``-S``  "
"gère aussi les schémas pour les sources bzr, git et apt. Si vous spécifiez "
"seulement une source avec ``-S`` sans spécifier le nom du paquet, à la "
"place, cela construira la branche et installera les binaires construits ; "
"C'est plus pratique si vous voulez lancer les tests sur une version plus "
"récente que celle empaquetée dans Ubuntu, ou si le paquet n'est pas du tout "
"dans Ubuntu. Si vous utilisez le drapeau ``-k`` vous pouvez vous connecter "
"dans une machine virtuelle après l'exécution des tests. Cela rend le "
"débogage des problèmes très facile."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:127
msgid ""
"The `auto-package-testing documentation`_ has a lot more valuable "
"information on other testing options."
msgstr ""
"La `documentation auto-package-testing`_  a beaucoup plus d'informations "
"utiles sur les autres options de tests."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:133
msgid "Further examples"
msgstr "Exemples complémentaires"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:135
msgid ""
"This list is not comprehensive, but might help you get a better idea of how "
"automated tests are implemented and used in Ubuntu."
msgstr ""
"Cette liste n'est pas exhaustive mais elle peut vous aider à mieux "
"comprendre comment les tests automatiques sont implémentés et utilisés dans "
"Ubuntu."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:138
msgid ""
"The `libxml2 tests`_ are very similar. They also run a test-build of a "
"simple piece of C code and execute it."
msgstr ""
"Les `tests libxml2`_ sont très similaires. Ils effectuent aussi un test de "
"compilation d'un simple morceau de code C et l'exécutent."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:140
msgid ""
"The `gtk+3.0 tests`_ also do a compile/link/run check in the \"build\" test. "
"There is an additional \"python3-gi\" test which verifies that the GTK "
"library can also be used through introspection."
msgstr ""
"Les essais `gtk +3.0` _ également faire une compilation /link/ run vérifier "
"dans le dossier \"build\" test. Il ya un supplément de \"python3-gi\" test "
"qui vérifie que la bibliothèque GTK peut également être utilisé par "
"l'introspection."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:143
msgid "In the `ubiquity tests`_ the upstream test-suite is executed."
msgstr "Dans les `tests ubiquity`_ la suite de test en amont est exécutée."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:144
msgid ""
"The `gvfs tests`_ have comprehensive testing of their functionality and are "
"very interesting because they emulate usage of CDs, Samba, DAV and other "
"bits."
msgstr ""
"Les `tests gvfs`_ ont un test complet de leur fonctionnalité et sont très "
"intéressants car ils émulent l'utilisation de CD, Samba, DAV et autres "
"bricoles."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:149
msgid "Ubuntu infrastructure"
msgstr "infrastructure Ubuntu"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:151
msgid ""
"Packages which have ``autopkgtest`` enabled will have their tests run "
"whenever they get uploaded or any of their dependencies change. The output "
"of `automatically run autopkgtest tests`_ can be viewed on the web and is "
"regularly updated."
msgstr ""

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:156
msgid ""
"While Debian does not have an automatic testing infrastructure set up yet, "
"they should still be submitted to Debian, as DEP-8 is a Debian specification "
"and Debian developers or users can still manually run the tests."
msgstr ""
"Bien que Debian n'a pas encore mis en place une infrastructure de test "
"automatique, ils doivent encore être soumis à Debian, car DEP-8 est une "
"spécification Debian et les développeurs ou les utilisateurs Debian peuvent "
"toujours exécuter manuellement les tests."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:160
msgid ""
"Packages in Debian with a testsuite header will also be automatically added "
"when they are synced to Ubuntu."
msgstr ""
"Les paquets dans Debian avec un en-tête testsuite seront également ajoutés "
"automatiquement quand ils sont synchronisés avec Ubuntu."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:164
msgid "Getting the test into Ubuntu"
msgstr "Faire passer le test dans Ubuntu"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:166
msgid ""
"The process of submitting an autopkgtest for a package is largely similar to "
":doc:`fixing a bug in Ubuntu<./fixing-a-bug>`. Essentially you simply:"
msgstr ""
"Le processus de soumission d'un autopkgtest pour un paquet est très "
"similaire à :doc: `corriger un bogue dans Ubuntu <./fixing-a-bug>`. "
"Essentiellement, il vous suffit de :"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:169
msgid "run ``bzr branch ubuntu:<packagename>``,"
msgstr "Exécutez ``bzr branch ubuntu:<nomdupaquet>``,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:170
msgid "edit ``debian/control`` to enable the tests,"
msgstr "modifiez ``debian/control`` pour activer les tests,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:171
msgid "add the ``debian/tests`` directory,"
msgstr "ajouter le répertoire ``debian/tests``,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:172
msgid ""
"write the ``debian/tests/control`` based on the `DEP 8 Specification`_,"
msgstr ""
"écrire le ``debian/tests/control`` basé sur la  `spécification DEP 8`_,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:173
msgid "add your test case(s) to ``debian/tests``,"
msgstr "ajouter votre cas de test(s) à ``debian/tests``,"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:174
msgid ""
"commit your changes, push them to Launchpad, propose a merge and get it "
"reviewed just like any other improvement in a source package."
msgstr ""
"valider vos modifications, les téléverser vers Launchpad, proposer une "
"fusion et obtenir son examen, exactement comme pour  toute autre "
"amélioration dans un paquet source."

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:179
msgid "What you can do"
msgstr "Ce que vous pouvez faire"

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:181
msgid ""
"The Ubuntu Engineering team put together a `list of required test-cases`_, "
"where packages which need tests are put into different categories. Here you "
"can find examples of these tests and easily assign them to yourself."
msgstr ""

#: ../ubuntu-packaging-guide/auto-pkg-test.rst:185
msgid ""
"If you should run into any problems, you can join the `#ubuntu-quality IRC "
"channel`_ to get in touch with developers who can help you."
msgstr ""
"Si vous rencontrez des problèmes, vous pouvez rejoindre le `canal IRC "
"#ubuntu-quality`_ pour entrer en contact avec les développeurs qui peuvent "
"vous aider."

#: ../ubuntu-packaging-guide/backports.rst:3
msgid "Backporting software updates"
msgstr "Rétroportage de mises à jour logicielles"

#: ../ubuntu-packaging-guide/backports.rst:5
msgid ""
"Sometimes you might want to make new functionality available in a stable "
"release which is not connected to a critical bug fix. For these scenarios "
"you have two options: either you `upload to a PPA "
"<https://help.launchpad.net/Packaging/PPA>`_ or prepare a backport."
msgstr ""
"Parfois, vous souhaitez ajouter une nouvelle fonctionnalité qui ne concerne "
"pas la correction de bug critique. Pour ce scénario, vous avez deux "
"options : soit vous le `soumettez à un PPA "
"<https://help.launchpad.net/Packaging/PPA>`_ soit vous préparez un rétro-"
"portage."

#: ../ubuntu-packaging-guide/backports.rst:12
msgid "Personal Package Archive (PPA)"
msgstr "Personal Package Archive (PPA)"

#: ../ubuntu-packaging-guide/backports.rst:14
msgid ""
"Using a PPA has a number of benefits. It is fairly straight-forward, you "
"don't need approval of anyone, but the downside of it is that your users "
"will have to manually enable it. It is a non-standard software source."
msgstr ""
"L'utilisation d'un PPA a un certain nombre d'avantages. C'est assez simple, "
"vous n'avez besoin d'aucune approbation, mais l'inconvénient, c'est que vos "
"utilisateurs devront l'activer manuellement. C'est une source de logiciels "
"non standard."

#: ../ubuntu-packaging-guide/backports.rst:18
msgid ""
"The `PPA documentation on Launchpad`_ is fairly comprehensive and should get "
"you up and running in no time."
msgstr ""
"La `documentation sur les PPA sur Launchpad`_ est assez complète et devrait "
"vous permettre d'être opérationnel en un rien de temps."

#: ../ubuntu-packaging-guide/backports.rst:25
msgid "Official Ubuntu Backports"
msgstr "Rétro-portages officiels de Ubuntu"

#: ../ubuntu-packaging-guide/backports.rst:27
msgid ""
"The Backports Project is a means to provide new features to users. Because "
"of the inherent stability risks in backporting packages, users do not get "
"backported packages without some explicit action on their part. This "
"generally makes backports an inappropriate avenue for fixing bugs. If a "
"package in an Ubuntu release has a bug, it should be fixed either through "
"the :doc:`Security Update or the Stable Release Update process<./security-"
"and-stable-release-updates>`, as appropriate."
msgstr ""

#: ../ubuntu-packaging-guide/backports.rst:35
msgid ""
"Once you determined you want a package to be backported to a stable release, "
"you will need to test-build and test it on the given stable release. "
"``pbuilder-dist`` (in the ``ubuntu-dev-tools`` package) is a very handy tool "
"to do this easily."
msgstr ""
"Une fois que vous avez déterminé un paquet à rétro-porter vers une version "
"stable, vous aurez besoin de le tester y compris en construction sur la "
"version stable donnée. ``Pbuilder-dist`` (dans le paquet ``ubuntu-dev-"
"tools``) est un outil très pratique pour y arriver facilement."

#: ../ubuntu-packaging-guide/backports.rst:40
msgid ""
"To report the backport request and get it processed by the Backporters team, "
"you can use the ``requestbackport`` tool (also in the ``ubuntu-dev-tools`` "
"package). It will determine the intermediate releases that package needs to "
"be backported to, list all reverse-dependencies, and file the backporting "
"request.  Also will it include a testing checklist in the bug."
msgstr ""

#: ../ubuntu-packaging-guide/chroots.rst:3
msgid "Using Chroots"
msgstr "Utilisation des environnements Chroots"

#: ../ubuntu-packaging-guide/chroots.rst:5
msgid ""
"If you are running one version of Ubuntu but working on packages for another "
"versions you can create the environment of the other version with a "
"``chroot``."
msgstr ""
"Si vous utilisez une version d'Ubuntu, mais que vous travaillez sur les "
"paquets pour une autre version, vous pouvez créer l'environnement de l'autre "
"version avec un ``chroot``."

#: ../ubuntu-packaging-guide/chroots.rst:9
msgid ""
"A ``chroot`` allows you to have a full filesystem from another distribution "
"which you can work in quite normally.  It avoids the overhead of running a "
"full virtual machine."
msgstr ""
"Un environnement ``chroot`` vous permet d'avoir un système de fichiers "
"complet d'une autre distribution avec lequel vous pouvez travailler tout à "
"fait normalement. Il évite la surcharge engendrée par l'exécution d'une "
"machine virtuelle complète."

#: ../ubuntu-packaging-guide/chroots.rst:14
msgid "Creating a Chroot"
msgstr "Créer un environnement Chroot"

#: ../ubuntu-packaging-guide/chroots.rst:16
msgid "Use the command ``debootstrap`` to create a new chroot::"
msgstr ""
"Utilisez la commande ``debootstrap`` pour créer un nouvel environnement "
"chroot::"

#: ../ubuntu-packaging-guide/chroots.rst:20
msgid ""
"This will create a directory ``oneiric`` and install a minimal oneiric "
"system into it."
msgstr ""
"Cela va créer un répertoire ``oneiric`` et y installer un système oneiric "
"minimal."

#: ../ubuntu-packaging-guide/chroots.rst:23
msgid ""
"If your version of ``debootstrap`` does not know about oneiric you can try "
"upgrading to the version in ``backports``."
msgstr ""
"Si votre version de ``debootstrap`` ne connaît pas oneiric, vous pouvez "
"essayer la mise à niveau avec la version des ``backports``."

#: ../ubuntu-packaging-guide/chroots.rst:26
msgid "You can then work inside the chroot::"
msgstr "Vous pouvez alors travailler dans l'environnement chroot::"

#: ../ubuntu-packaging-guide/chroots.rst:30
msgid ""
"Where you can install or remove any package you wish without affecting your "
"main system."
msgstr ""
"Où vous pouvez installer ou désinstaller le paquet que vous souhaitez sans "
"affecter votre système principal."

#: ../ubuntu-packaging-guide/chroots.rst:33
msgid ""
"You might want to copy your GPG/ssh keys and Bazaar configuration into the "
"chroot so you can access and sign packages directly::"
msgstr ""
"Vous devriez copier vos clés GPG/ssh et votre configuration Bazaar dans "
"l'environnement chroot de manière à accéder aux paquets et les signer "
"directement::"

#: ../ubuntu-packaging-guide/chroots.rst:39
msgid ""
"To stop apt and other programs complaining about missing locales you can "
"install your relevant language pack::"
msgstr ""
"Pour empêcher apt et d'autres programmes de se plaindre de l'absence "
"d'informations linguistiques, vous pouvez installer les paquets "
"linguistiques adéquats::"

#: ../ubuntu-packaging-guide/chroots.rst:44
msgid ""
"If you want to run X programs you will need to bind the /tmp directory into "
"the chroot, from outside the chroot run::"
msgstr ""
"Si vous voulez exécuter des programmes X, vous devez lier le répertoire /tmp "
"dans le chroot, en dehors de chroot, exécutez::"

#: ../ubuntu-packaging-guide/chroots.rst:50
msgid "Some programs may need you to bind /dev or /proc."
msgstr "Certains programmes peuvent nécessiter que vous liez /dev ou /proc."

#: ../ubuntu-packaging-guide/chroots.rst:52
msgid ""
"For more information on chroots see our `Debootstrap Chroot wiki page`_."
msgstr ""
"Pour plus d'informations sur chroot consultez notre page wiki `debootstrap "
"chroot` _."

#: ../ubuntu-packaging-guide/chroots.rst:55
msgid "Alternatives"
msgstr "Alternatives"

#: ../ubuntu-packaging-guide/chroots.rst:57
msgid ""
"SBuild is a system similar to PBuilder for creating an environment to run "
"test package builds in.  It closer matches that used by Launchpad for "
"building packages but takes some more setup compared to PBuilder.  See `the "
"Security Team Build Environment wiki page`_ for a full explanation."
msgstr ""

#: ../ubuntu-packaging-guide/chroots.rst:59
msgid ""
"Full virtual machines can be useful for packaging and testing programs.  "
"TestDrive is a program to automate syncing and running daily ISO images, see "
"`the TestDrive wiki page`_ for more information."
msgstr ""
"Les machines virtuelles complètes sont utiles pour tester et empaqueter les "
"programmes. TestDrive est un programme automatisant la synchronisation et "
"l'exécution quotidienne d'images ISO, reportez-vous à `la page wiki "
"TestDrive` _ pour de plus amples informations."

#: ../ubuntu-packaging-guide/chroots.rst:63
msgid ""
"You can also set up pbuilder to pause when it comes across a build failure.  "
"Copy C10shell from /usr/share/doc/pbuilder/examples into a directory and use "
"the ``--hookdir=`` argument to point to it."
msgstr ""
"Vous pouvez également configurer pbuilder pour marquer un arrêt lorsqu'il "
"rencontre un échec de compilation. Copiez C10shell depuis "
"/usr/share/doc/pbuilder/examples dans un répertoire et utilisez l'argument "
"``--hookdir=`` pour désigner ce dernier."

#: ../ubuntu-packaging-guide/chroots.rst:67
msgid ""
"Amazon's `EC2 cloud computers`_ allow you to hire a computer paying a few US "
"cents per hour, you can set up Ubuntu machines of any supported version and "
"package on those.  This is useful when you want to compile many packages at "
"the same time or to overcome bandwidth restraints."
msgstr ""

#: ../ubuntu-packaging-guide/communication.rst:3
msgid "Communication in Ubuntu Development"
msgstr "Communication dans Ubuntu développement"

#: ../ubuntu-packaging-guide/communication.rst:5
msgid ""
"In a project where thousands of lines of code are changed, lots of decisions "
"are made and hundreds of people interact every day, it is important to "
"communicate effectively."
msgstr ""
"Dans un projet où des milliers de lignes de code sont modifiées, de "
"nombreuses décisions sont prises et des centaines de personnes interagissent "
"chaque jour, il est important de communiquer efficacement."

#: ../ubuntu-packaging-guide/communication.rst:10
msgid "Mailing lists"
msgstr "Listes de diffusion"

#: ../ubuntu-packaging-guide/communication.rst:12
msgid ""
"Mailing lists are a very important tool if you want to communicate ideas to "
"a broader team and make sure that you reach everybody, even across timezones."
msgstr ""
"Les listes de diffusion sont un outil très important si vous voulez "
"communiquer des idées à une plus large équipe et vous assurer d'atteindre "
"tout le monde, quels que soient les fuseaux horaires."

#: ../ubuntu-packaging-guide/communication.rst:16
msgid "In terms of development, these are the most important ones:"
msgstr "En termes de développement, ce sont les plus importants :"

#: ../ubuntu-packaging-guide/communication.rst:18
msgid ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel-announce (announce-"
"only, the most important development announcements go here)"
msgstr ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel-announce (annonces "
"uniquement, les annonces de développement les plus importantes vont ici)"

#: ../ubuntu-packaging-guide/communication.rst:20
msgid ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel (general Ubuntu "
"development discussion)"
msgstr ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-devel (discussion générale "
"sur le développement Ubuntu)"

#: ../ubuntu-packaging-guide/communication.rst:22
msgid ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-motu (MOTU Team discussion, "
"get help with packaging)"
msgstr ""
"https://lists.ubuntu.com/mailman/listinfo/ubuntu-motu (discussion de "
"l'équipe MOTU, obtenir de l'aide avec l'empaquetage)"

#: ../ubuntu-packaging-guide/communication.rst:27
msgid "IRC Channels"
msgstr "Canaux IRC"

#: ../ubuntu-packaging-guide/communication.rst:29
msgid ""
"For real-time discussions, please connect to irc.freenode.net and join one "
"or any of these channels:"
msgstr ""
"Pour discuter en temps réel, connectez-vous à irc.freenode.net et rejoignez "
"un ou plusieurs de ces canaux :"

#: ../ubuntu-packaging-guide/communication.rst:32
msgid "#ubuntu-devel (for general development discussion)"
msgstr "#ubuntu-devel (pour une discussion générale sur le développement)"

#: ../ubuntu-packaging-guide/communication.rst:33
msgid "#ubuntu-motu (for MOTU team discussion and generally getting help)"
msgstr ""
"#ubuntu-motu (pour une discussion avec l'équipe MOTU et généralement obtenir "
"de l'aide)"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:2
msgid "Basic Overview of the ``debian/`` Directory"
msgstr "Aperçu élémentaire du dossier ``debian/``"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:4
msgid ""
"This article will briefly explain the different files important to the "
"packaging of Ubuntu packages which are contained in the ``debian/`` "
"directory. The most important of them are ``changelog``, ``control``, "
"``copyright``, and ``rules``. These are required for all packages. A number "
"of additional files in the ``debian/`` may be used in order to customize and "
"configure the behavior of the package. Some of these files are discussed in "
"this article, but this is not meant to be a complete list."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:13
msgid "The changelog"
msgstr "Le changelog"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:15
msgid ""
"This file is, as its name implies, a listing of the changes made in each "
"version. It has a specific format that gives the package name, version, "
"distribution, changes, and who made the changes at a given time. If you have "
"a GPG key (see: :doc:`Getting set up<./getting-set-up/>`), make sure to use "
"the same name and email address in ``changelog`` as you have in your key. "
"The following is a template ``changelog``::"
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:31
msgid ""
"The format (especially of the date) is important. The date should be in "
":rfc:`5322` format, which can be obtained by using the command ``date -R``. "
"For convenience, the command ``dch`` may be used to edit changelog. It will "
"update the date automatically."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:36
msgid ""
"Minor bullet points are indicated by a dash \"-\", while major points use an "
"asterisk \"*\"."
msgstr ""
"Bullet points mineurs sont indiquées par un tiret  \"-\", tandis que les "
"points principaux utiliser un astérisque \"*\"."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:39
msgid ""
"If you are packaging from scratch, ``dch --create`` (``dch`` is in the "
"``devscripts`` package) will create a standard ``debian/changelog`` for you."
msgstr ""
"Si vous êtes parti de zéro pour l'empaquetage, ``dch --create`` (``dch`` est "
"dans le paquet ``devscripts``) vous créera un ``debian /changelog`` standard."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:43
msgid "Here is a sample ``changelog`` file for hello::"
msgstr "Voici un exemple de fichier ``changelog`` pour bonjour::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:52
msgid ""
"Notice that the version has a ``-0ubuntu1`` appended to it, this is the "
"distro revision, used so that the packaging can be updated (to fix bugs for "
"example) with new uploads within the same source release version."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:56
msgid ""
"Ubuntu and Debian have slightly different package versioning schemes to "
"avoid conflicting packages with the same source version. If a Debian package "
"has been changed in Ubuntu, it has ``ubuntuX`` (where ``X`` is the Ubuntu "
"revision number) appended to the end of the Debian version. So if the Debian "
"hello ``2.6-1`` package was changed by Ubuntu, the version string would be "
"``2.6-1ubuntu1``. If a package for the application does not exist in Debian, "
"then the Debian revision is ``0`` (e.g. ``2.6-0ubuntu1``)."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:64
msgid ""
"For further information, see the `changelog section (Section 4.4) "
"<http://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog>`_ "
"of the Debian Policy Manual."
msgstr ""
"Pour plus d'informations, consultez la section `changelog (Section 4.4) "
"<http://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog>` _ "
"de la Charte Debian."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:70
msgid "The control file"
msgstr "Le fichier de contrôle."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:72
msgid ""
"The ``control`` file contains the information that the package manager (such "
"as ``apt-get``, ``synaptic``, and ``adept``) uses, build-time dependencies, "
"maintainer information, and much more."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:76
msgid ""
"For the Ubuntu ``hello`` package, the ``control`` file looks something like "
"this:"
msgstr ""
"Pour le paquet ``hello`` de Ubuntu, le fichier ``control`` ressemble à ceci :"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:101
msgid ""
"The first paragraph describes the source package including the list of "
"packages required to build the package from source in the ``Build-Depends`` "
"field. It also contains some meta-information such as the maintainer's name, "
"the version of Debian Policy that the package complies with, the location of "
"the packaging version control repository, and the upstream home page."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:108
msgid ""
"Note that in Ubuntu, we set the ``Maintainer`` field to a general address "
"because anyone can change any package (this differs from Debian where "
"changing packages is usually restricted to an individual or a team). "
"Packages in Ubuntu should generally have the ``Maintainer`` field set to "
"``Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>``. If the "
"Maintainer field is modified, the old value should be saved in the ``XSBC-"
"Original-Maintainer`` field. This can be done automatically with the  "
"``update-maintainer`` script available in the ``ubuntu-dev-tools`` package. "
"For further information, see the `Debian Maintainer Field spec "
"<https://wiki.ubuntu.com/DebianMaintainerField>`_ on the Ubuntu wiki."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:120
msgid "Each additional paragraph describes a binary package to be built."
msgstr ""
"Chaque paragraphe supplémentaire décrit un paquet binaire à compiler."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:122
msgid ""
"For further information, see the `control file section (Chapter 5) "
"<http://www.debian.org/doc/debian-policy/ch-controlfields.html>`_ of the "
"Debian Policy Manual."
msgstr ""
"Pour plus d'informations, consultez la `section fichier control (Chapitre 5) "
"<http://www.debian.org/doc/debian-policy/ch-controlfields.html>` _ de la "
"Charte Debian."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:128
msgid "The copyright file"
msgstr "Le fichier de copyright"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:130
msgid ""
"This file gives the copyright information for both the upstream source and "
"the packaging. Ubuntu and `Debian Policy (Section 12.5) "
"<http://www.debian.org/doc/debian-policy/ch-docs.html#s-copyrightfile>`_ "
"require that each package installs a verbatim copy of its copyright and "
"license information to ``/usr/share/doc/$(package_name)/copyright``."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:136
msgid ""
"Generally, copyright information is found in the ``COPYING`` file in the "
"program's source directory. This file should include such information as the "
"names of the author and the packager, the URL from which the source came, a "
"Copyright line with the year and copyright holder, and the text of the "
"copyright itself. An example template would be::"
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:178
msgid ""
"This example follows the `Machine-readable debian/copyright "
"<http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/>`_ "
"format. You are encouraged to use this format as well."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:184
msgid "The rules file"
msgstr "Le fichier des règles"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:186
msgid ""
"The last file we need to look at is ``rules``. This does all the work for "
"creating our package. It is a Makefile with targets to compile and install "
"the application, then create the ``.deb`` file from the installed files. It "
"also has a target to clean up all the build files so you end up with just a "
"source package again."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:194
msgid ""
"Here is a simplified version of the rules file created by ``dh_make`` (which "
"can be found in the ``dh-make`` package):"
msgstr ""
"Voici une version simplifiée du fichier de règles créé par ``dh_make`` (qui "
"peut être trouvé dans le paquet ``dh-make``):"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:208
msgid ""
"Let us go through this file in some detail. What this does is pass every "
"build target that ``debian/rules`` is called with as an argument to "
"``/usr/bin/dh``, which itself will call all the necessary ``dh_*`` commands."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:212
msgid ""
"``dh`` runs a sequence of debhelper commands. The supported sequences "
"correspond to the targets of a ``debian/rules`` file: \"build\", \"clean\", "
"\"install\", \"binary-arch\", \"binary-indep\", and \"binary\". In order to "
"see what commands are run in each target, run::"
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:221
msgid ""
"Commands in the binary-indep sequence are passed the \"-i\" option to ensure "
"they only work on binary independent packages, and commands in the binary-"
"arch sequences are passed the \"-a\" option to ensure they only work on "
"architecture dependent packages."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:226
msgid ""
"Each debhelper command will record when it's successfully run in "
"``debian/package.debhelper.log``. (Which dh_clean deletes.) So dh can tell "
"which commands have already been run, for which packages, and skip running "
"those commands again."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:231
msgid ""
"Each time ``dh`` is run, it examines the log, and finds the last logged "
"command that is in the specified sequence. It then continues with the next "
"command in the sequence. The ``--until``, ``--before``, ``--after``, and ``--"
"remaining`` options can override this behavior."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:236
msgid ""
"If ``debian/rules`` contains a target with a name like "
"``override_dh_command``, then when it gets to that command in the sequence, "
"``dh`` will run that target from the rules file, rather than running the "
"actual command. The override target can then run the command with additional "
"options, or run entirely different commands instead. (Note that to use this "
"feature, you should Build-Depend on debhelper 7.0.50 or above.)"
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:245
msgid ""
"Have a look at ``/usr/share/doc/debhelper/examples/`` and ``man dh`` for "
"more examples. Also see `the rules section (Section 4.9) "
"<http://www.debian.org/doc/debian-policy/ch-source.html#s-debianrules>`_ of "
"the Debian Policy Manual."
msgstr ""
"Jetez un œil à ``usr/share/doc/debhelper/examples/`` et ``man dh`` pour plus "
"d'exemples. Voir également `la section rules (Section 4.9) "
"<http://www.debian.org/doc/debian-policy/ch-source.html#s-debianrules>`_ de "
"la Charte Debian."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:251
msgid "Additional Files"
msgstr "Les fichiers additionnels"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:254
msgid "The install file"
msgstr "Le fichier d'installation"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:256
msgid ""
"The ``install`` file is used by ``dh_install`` to install files into the "
"binary package. It has two standard use cases:"
msgstr ""
"Le fichier ``install`` est utilisé par ``dh_install`` pour installer les "
"fichiers dans le paquet binaire. Il s'utilise classiquement dans deux cas :"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:259
msgid ""
"To install files into your package that are not handled by the upstream "
"build system."
msgstr ""
"Pour installer des fichiers dans votre paquet lorsqu'ils ne sont pas gérés "
"par le système de construction en amont."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:260
msgid ""
"Splitting a single large source package into multiple binary packages."
msgstr ""
"Fractionner un important et unique paquet source en plusieurs paquets "
"binaires."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:262
msgid ""
"In the first case, the ``install`` file should have one line per file "
"installed, specifying both the file and the installation directory. For "
"example, the following ``install`` file would install the script ``foo`` in "
"the source package's root directory to ``usr/bin`` and a desktop file in the "
"``debian`` directory to ``usr/share/applications``::"
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:273
msgid ""
"When a source package is producing multiple binary packages ``dh`` will "
"install the files into ``debian/tmp`` rather than directly into "
"``debian/<package>``. Files installed into ``debian/tmp`` can then be moved "
"into separate binary packages using multiple ``$package_name.install`` "
"files. This is often done to split large amounts of architecture independent "
"data out of architecture dependent packages and into ``Architecture: all`` "
"packages. In this case, only the name of the files (or directories) to be "
"installed are needed without the installation directory. For example, "
"``foo.install`` containing only the architecture dependent files might look "
"like::"
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:286
msgid ""
"While ``foo-common.install`` containing only the architecture independent "
"file might look like::"
msgstr ""
"Alors que le ``foo-common.install`` contenant uniquement des fichiers "
"indépendants de l'architecture pourrait ressembler à ::"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:294
msgid ""
"This would create two binary packages, ``foo`` and ``foo-common``. Both "
"would require their own paragraph in ``debian/control``."
msgstr ""
"Cela créera deux paquets binaires, `` foo`` et ``foo-common``. Les deux "
"exigeraient leur propre paragraphe dans ``debian/control``."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:297
msgid ""
"See ``man dh_install`` and the `install file section (Section 5.11) "
"<http://www.debian.org/doc/manuals/maint-guide/dother.en.html#install>`_  of "
"the Debian New Maintainers' Guide for additional details."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:302
msgid "The watch file"
msgstr "Le fichier watch"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:304
msgid ""
"The ``debian/watch`` file allows us to check automatically for new upstream "
"versions using the tool ``uscan`` found in the ``devscripts`` package. The "
"first line of the watch file must be the format version (3, at the time of "
"this writing), while the following lines contain any URLs to parse. For "
"example::"
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:313
msgid ""
"Running ``uscan`` in the root source directory will now compare the upstream "
"version number in ``debian/changelog`` with the latest available upstream "
"version. If a new upstream version is found, it will be automatically "
"downloaded. For example::"
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:326
msgid ""
"If your tarballs live on Launchpad, the ``debian/watch`` file is a little "
"more complicated (see `Question 21146`_ and `Bug 231797`_ for why this is).  "
"In that case, use something like::"
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:333
msgid ""
"For further information, see ``man uscan`` and the `watch file section "
"(Section 4.11) <http://www.debian.org/doc/debian-policy/ch-source.html#s-"
"debianwatch>`_ of the Debian Policy Manual."
msgstr ""
"Pour plus d'informations, consultez ``man uscan`` et la `section fichier "
"watch (Section 4.11) <http://www.debian.org/doc/debian-policy/ch-"
"source.html#s-debianwatch>`_ de la Charte Debian."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:337
msgid ""
"For a list of packages where the ``watch`` file reports they are not in sync "
"with upstream see `Ubuntu External Health Status "
"<http://qa.ubuntuwire.org/uehs/no_updated.html>`_."
msgstr ""
"Pour une liste de paquets où les fichiers de rapport ``watch`` ne sont pas "
"synchronisés avec l'amont, voir `Etat de santé externe Ubuntu "
"<http://qa.ubuntuwire.org/uehs/no_updated.html>`_."

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:342
msgid "The source/format file"
msgstr "Le fichier source/format"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:344
msgid ""
"This file indicates the format of the source package. It should contain a "
"single line indicating the desired format:"
msgstr ""
"Ce fichier indique le format du paquet source. Il doit contenir une seule "
"ligne indiquant le format désiré :"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:347
msgid "``3.0 (native)`` for Debian native packages (no upstream version)"
msgstr ""
"`` 3.0 (native) `` pour les paquets Debian natifs (pas de version amont)"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:349
msgid "``3.0 (quilt)`` for packages with a separate upstream tarball"
msgstr "`` 3.0 (quilt) `` pour les paquets avec une archive séparée en amont"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:351
msgid "``1.0`` for packages wishing to explicitly declare the default format"
msgstr ""
"`` 1.0 `` pour les paquets souhaitant déclarer explicitement le format par "
"défaut"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:353
msgid ""
"Currently, the package source format will default to 1.0 if this file does "
"not exist. You can make this explicit in the source/format file. If you "
"choose not to use this file to define the source format, Lintian will warn "
"about the missing file. This warning is informational only and may be safely "
"ignored."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:358
msgid ""
"You are encouraged to use the newer 3.0 source format. It provides a number "
"of new features:"
msgstr ""
"Nous vous encourageons à utiliser le nouveau format de source 3.0. Il "
"fournit un certain nombre de nouvelles fonctionnalités :"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:361
msgid "Support for additional compression formats: bzip2, lzma and xz"
msgstr ""
"Prise en charge de formats de compression supplémentaires : bzip2, lzma et xz"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:363
msgid "Support for multiple upstream tarballs"
msgstr "Prise en charge de plusieurs archives amont"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:365
msgid ""
"Not necessary to repack the upstream tarball to strip the debian directory"
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:367
msgid ""
"Debian-specific changes are no longer stored in a single .diff.gz but in "
"multiple patches compatible with quilt under ``debian/patches/``"
msgstr ""
"Les changements spécifiques à Debian ne sont plus stockés dans un seul "
"fichier .diff.gz, mais dans plusieurs correctifs compatibles avec quilt dans "
"``debian/patches/``"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:369
msgid ""
"http://wiki.debian.org/Projects/DebSrc3.0 summarizes additional information "
"concerning the switch to the 3.0 source package formats."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:372
msgid ""
"See ``man dpkg-source`` and the `source/format section (Section 5.21) "
"<http://www.debian.org/doc/manuals/maint-guide/dother.en.html#sourcef>`_  of "
"the Debian New Maintainers' Guide for additional details."
msgstr ""

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:377
msgid "Additional Resources"
msgstr "Ressources supplémentaires"

#: ../ubuntu-packaging-guide/debian-dir-overview.rst:379
msgid ""
"In addition to the links to the Debian Policy Manual in each section above, "
"the Debian New Maintainers' Guide has more detailed descriptions of each "
"file. `Chapter 4, \"Required files under the debian directory\" "
"<http://www.debian.org/doc/maint-guide/dreq.en.html>`_ further discusses the "
"control, changelog, copyright and rules files. `Chapter 5, \"Other files "
"under the debian directory\" <http://www.debian.org/doc/maint-"
"guide/dother.en.html>`_ discusses additional files that may be used."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:3
msgid "Fixing a bug in Ubuntu"
msgstr "Correction d'un bogue dans Ubuntu"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:6
#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:9
msgid "Introduction"
msgstr "Introduction"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:8
msgid ""
"If you followed the instructions to :doc:`get set up with Ubuntu "
"Development<./getting-set-up>`, you should be all set and ready to go."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:13
msgid ""
"As you can see in the image above, there is no surprises in the process of "
"fixing bugs in Ubuntu: you found a problem, you get the code, work on the "
"fix, test it, push your changes to Launchpad and ask for it to be reviewed "
"and merged. In this guide we will go through all the necessary steps one by "
"one."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:20
msgid "Finding the problem"
msgstr "Trouver le problème"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:22
msgid ""
"There are a lot of different ways to find things to work on. It might be a "
"bug report you are encountering yourself (which gives you a good opportunity "
"to test the fix), or a problem you noted elsewhere, maybe in a bug report."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:26
msgid ""
"`Harvest <http://harvest.ubuntu.com/>`_ is where we keep track of various "
"TODO lists regarding Ubuntu development. It lists bugs that were fixed "
"upstream or in Debian already, lists small bugs (we call them 'bitesize'), "
"and so on. Check it out and find your first bug to work on."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:35
msgid "Figuring out what to fix"
msgstr "Déterminer ce qu'il faut corriger"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:37
msgid ""
"If you don't know the source package containing the code that has the "
"problem, but you do know the path to the affected program on your system, "
"you can discover the source package that you'll need to work on."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:41
msgid ""
"Let's say you've found a bug in Tomboy, a note taking desktop application. "
"The Tomboy application can be started by running ``/usr/bin/tomboy`` on the "
"command line.  To find the binary package containing this application, use "
"this command::"
msgstr ""
"Admettons que vous ayez trouvé un bogue dans Tomboy, une application de "
"prise de notes sur le bureau. L'application Tomboy peut être démarrée en "
"exécutant ``/usr/bin/tomboy`` en ligne de commande. Pour trouver le paquet "
"binaire contenant cette application, utilisez la commande ::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:48
msgid "This would print out::"
msgstr "Cela affichera ::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:52
msgid ""
"Note that the part preceding the colon is the binary package name.  It's "
"often the case that the source package and binary package will have "
"different names. This is most common when a single source package is used to "
"build multiple different binary packages.  To find the source package for a "
"particular binary package, type::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:63
msgid "``apt-cache`` is part of the standard installation of Ubuntu."
msgstr "``apt-cache`` fait partie de l'installation standard d'Ubuntu."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:66
msgid "Getting the code"
msgstr "Obtenir le code"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:68
msgid ""
"Once you know the source package to work on, you will want to get a copy of "
"the code on your system, so that you can debug it.  In Ubuntu Distributed "
"Development this is done by :ref:`branching the source package <branching>` "
"branch corresponding to the source package.  Launchpad maintains source "
"package branches for all the packages in Ubuntu."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:74
msgid ""
"Once you've got a local branch of the source package, you can investigate "
"the bug, create a fix, and upload your proposed fix to Launchpad, in the "
"form of a Bazaar branch.  When you are happy with your fix, you can "
":ref:`submit a merge proposal <merge-proposal>`, which asks other Ubuntu "
"developers to review and approve your change.  If they agree with your "
"changes, an Ubuntu developer will upload the new version of the package to "
"Ubuntu so that everyone gets the benefit of your excellent fix - and you get "
"a little bit of credit.  You're now on your way to becoming an Ubuntu "
"developer!"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:83
msgid ""
"We'll describe specifics on how to branch the code, push your fix, and "
"request a review in the following sections."
msgstr ""
"Nous allons décrire en détail la façon de ramifier le code, de soumettre "
"votre solution et d'en demander un examen dans les sections suivantes."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:89
msgid "Work on a fix"
msgstr "Travailler sur un correctif"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:91
msgid ""
"There are entire books written about finding bugs, fixing them, testing "
"them, etc. If you are completely new to programming, try to fix easy bugs "
"such as obvious typos first. Try to keep changes as minimal as possible and "
"document your change and assumptions clearly."
msgstr ""
"Il existe des livres entiers sur la façon de trouver des bogues, de les "
"corriger, de les tester, etc. Si vous êtes complètement novice en "
"programmation, essayez en premier lieu de corriger les bogues simples comme "
"les fautes de frappe évidentes. Essayez de minimiser les changements autant "
"que possible et documentez clairement vos modifications et hypothèses."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:96
msgid ""
"Before working on a fix yourself, make sure to investigate if nobody else "
"has fixed it already or is currently working on a fix. Good sources to check "
"are:"
msgstr ""
"Avant de travailler sur un correctif vous-même, assurez-vous de vérifier que "
"personne d'autre ne l'a déjà corrigé ou est en train de le faire. Les bonnes "
"sources à vérifier sont :"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:99
msgid "Upstream (and Debian) bug tracker (open and closed bugs),"
msgstr ""
"Traceur de bogues en amont (et dans Debian) (bogues ouverts et fermés),"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:100
msgid ""
"Upstream revision history (or newer release) might have fixed the problem,"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:101
msgid "bugs or package uploads of Debian or other distributions."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:106
msgid ""
"You now want to create a patch which includes the fix.  The command ``edit-"
"patch`` is a simple way to add a patch to a package. Run::"
msgstr ""
"Vous souhaitez maintenant créer un correctif incluant la solution. La "
"commande ``edit-patch`` est une façon simple d'ajouter un correctif à un "
"paquet. Lancez ::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:111
msgid ""
"This will copy the packaging to a temporary directory.  You can now edit "
"files with a text editor or apply patches from upstream, for example::"
msgstr ""
"Cela va copier l'empaquetage dans un répertoire temporaire. Vous pouvez "
"maintenant éditer les fichiers avec un éditeur de texte ou appliquer des "
"correctifs en amont, par exemple::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:116
msgid ""
"After editing the file type ``exit`` or press ``control-d`` to quit the "
"temporary shell.  The new patch will have been added into ``debian/patches``."
msgstr ""
"Après avoir modifié le fichier, saisissez ``exit`` ou appuyez sur ``ctrl+d`` "
"pour quitter l'environnement temporaire. Le nouveau correctif a été ajouté "
"dans ``debian/patches``."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:121
#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:204
msgid "Testing the fix"
msgstr "Tester le correctif"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:123
msgid "To build a test package with your changes, run these commands::"
msgstr ""
"Pour construire un paquet de test avec vos modifications, exécutez ces "
"commandes::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:128
msgid ""
"This will create a source package from the branch contents (``-us -uc`` will "
"just omit the step to sign the source package) and ``pbuilder-dist`` will "
"build the package from source for whatever ``release`` you choose."
msgstr ""
"Cela créera un paquet source à partir des contenus de la ramification (``-us "
"-uc`` permettra de s'affranchir de l'étape de signature du paquet source) et "
"``pbuilder-dist`` construira le paquet à partir des sources de la "
"``version`` de votre choix."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:132
msgid ""
"Once the build succeeds, install the package from "
"``~/pbuilder/<release>_result/`` (using ``sudo dpkg -i "
"<package>_<version>.deb``).  Then test to see if the bug is fixed."
msgstr ""
"Une fois la construction réussie, installez le paquet depuis  ``~/pbuilder "
"/<release>_result/`` (en utilisant ``sudo dpkg -i <paquet>_<version>.deb``). "
"Puis testez pour vérifier si le bogue est corrigé."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:139
#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:155
msgid "Documenting the fix"
msgstr "Documenter le correctif"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:141
msgid ""
"It is very important to document your change sufficiently so developers who "
"look at the code in the future won't have to guess what your reasoning was "
"and what your assumptions were. Every Debian and Ubuntu package source "
"includes ``debian/changelog``, where changes of each uploaded package are "
"tracked."
msgstr ""
"Il est très important de documenter abondamment vos modifications afin que "
"les développeurs qui reliront votre code dans le futur n'aient pas à deviner "
"ce qu'étaient votre raisonnement et vos hypothèses. Chaque paquet source "
"Debian et Ubuntu inclut ``debian/changelog``, où les modifications de chaque "
"paquet téléchargé sont suivies."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:146
msgid "The easiest way to update this is to run::"
msgstr "Le moyen le plus simple de mettre à jour est d'exécuter ::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:150
msgid ""
"This will add a boilerplate changelog entry for you and launch an editor "
"where you can fill in the blanks. An example of this could be::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:159
msgid ""
"``dch`` should fill out the first and last line of such a changelog entry "
"for you already. Line 1 consists of the source package name, the version "
"number, which Ubuntu release it is uploaded to, the urgency (which almost "
"always is 'low'). The last line always contains the name, email address and "
"timestamp (in :rfc:`5322` format) of the change."
msgstr ""
"``dch`` doit déjà remplir pour vous la première et la dernière ligne d'une "
"telle entrée du changelog. La ligne 1 se compose du nom du paquet source, du "
"numéro de version, de la version d'Ubuntu vers laquelle le paquet est "
"transféré, du niveau d'urgence (qui est presque toujours «{nbsp]faible »). "
"La dernière ligne contient toujours le nom, l'adresse électronique et "
"l'horodatage du changement (au format :rfc:`5322`)."

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:165
msgid ""
"With that out of the way, let's focus on the actual changelog entry itself: "
"it is very important to document:"
msgstr ""
"Ces préoccupations en moins, concentrons-nous sur l'entrée effective du "
"changelog elle-même : il est très important de renseigner :"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:168
msgid "where the change was done"
msgstr "où la modification a été apportée"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:169
msgid "what was changed"
msgstr "ce qui a été modifié"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:170
msgid "where the discussion of the change happened"
msgstr "où le débat sur la modification s'est passé"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:172
msgid ""
"In our (very sparse) example the last point is covered by ``(LP: #123456)`` "
"which refers to Launchpad bug 123456. Bug reports or mailing list threads or "
"specifications are usually good information to provide as a rationale for a "
"change. As a bonus, if you use the ``LP: #<number>`` notation for Launchpad "
"bugs, the bug will be automatically closed when the package is uploaded to "
"Ubuntu."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:181
msgid "Committing the fix"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:183
msgid "With the changelog entry written and saved, you can just run::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:187
msgid ""
"and the change will be committed (locally) with your changelog entry as a "
"commit message."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:190
msgid ""
"To push it to Launchpad, as the remote branch name, you need to stick to the "
"following nomenclature::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:195
msgid "This could for example be::"
msgstr "Cela pourrait être, par exemple ::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:199
msgid "So if you just run::"
msgstr "Donc, si vous lancez simplement ::"

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:204
msgid ""
"you should be all set. The push command should push it to Launchpad and the "
"second command will open the Launchpad page of the remote branch in your "
"browser. There find the \"(+) Propose for merging\" link, click it to get "
"the change reviewed by somebody and included in Ubuntu."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:209
msgid ""
"Our article about :doc:`seeking sponsorship<./udd-sponsorship>` goes into "
"more detail about getting feedback for your proposed changes."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug.rst:212
msgid ""
"If your branch fixes issues in stable releases or it is a security fix, you "
"might want to have a look at our :doc:`Security and stable release "
"updates<./security-and-stable-release-updates>` article."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:3
msgid "Tutorial: Fixing a bug in Ubuntu"
msgstr "Tutoriel : Correction d'un bogue dans Ubuntu"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:5
msgid ""
"While the mechanics for :doc:`fixing a bug<./fixing-a-bug>` are the same for "
"every bug, every problem you look at is likely to be different from another. "
"An example of a concrete problem might help to get an idea what to consider "
"generally."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:10
msgid ""
"At the time of writing this article this was not fixed yet. When you are "
"reading the article this might actually be fixed. Take this as an example "
"and try to adapt it to the specific problem you are facing."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:15
msgid "Confirming the problem"
msgstr "Confirmer le problème"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:17
msgid ""
"Let's say the package ``bumprace`` does not have a homepage in its package "
"description. As a first step you would check if the problem is not solved "
"already. This is easy to check, either take a look at Software Center or "
"run::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:23
msgid "The output should be similar to this::"
msgstr "La sortie devrait être similaire à ceci ::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:49
msgid "A counter-example would be ``gedit``, which has a homepage set::"
msgstr ""
"Un contre-exemple serait ``gedit``, qui dispose d'une page d'accueil ::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:55
msgid ""
"Sometimes you will find that a particular problem you are looking into is "
"already fixed. To avoid wasting efforts and duplicating work it makes sense "
"to first do some detective work."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:61
msgid "Research bug situation"
msgstr "Localisation de bogue"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:63
msgid ""
"First we should check if a bug for the problem exists in Ubuntu already. "
"Maybe somebody is working on a fix already, or we can contribute to the "
"solution somehow. For Ubuntu we have a quick look at "
"https://bugs.launchpad.net/ubuntu/+source/bumprace and there is no open bug "
"with our problem there."
msgstr ""
"En premier lieu, nous devons vérifier l'existence préalable d'un bogue pour "
"ce problème dans Ubuntu. Peut-être que quelqu'un travaille déjà sur un "
"correctif, ou nous pouvons contribuer à la solution d'une manière ou d'une "
"autre. Pour Ubuntu, nous jetons un coup d’œil à "
"https://bugs.launchpad.net/ubuntu/+source/bumprace et constatons qu'aucun "
"bogue n'y est ouvert avec notre problème."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:69
msgid ""
"For Ubuntu the URL ``https://bugs.launchpad.net/ubuntu/+source/<package>`` "
"should always take to the bug page of the source package in question."
msgstr ""
"Pour Ubuntu, l'URL ``https://bugs.launchpad.net/ubuntu/+source/<paquet>`` "
"devrait toujours afficher la page concernant les bogues du paquet source en "
"question."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:73
msgid ""
"For Debian, which is the major source for Ubuntu's packages, we have a look "
"at http://bugs.debian.org/src:bumprace and can't find a bug report for our "
"problem either."
msgstr ""
"Pour Debian, qui est la principale source des paquets d'Ubuntu, nous jetons "
"un œil sur http://bugs.debian.org/src:bumprace et nous ne pouvons de nouveau "
"pas trouver de rapport de bogue pour notre problème."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:77
msgid ""
"For Debian the URL ``http://bugs.debian.org/src:<package>`` should always "
"take to the bug page of the source package in question."
msgstr ""
"Pour Debian, l'URL ``http://bugs.debian.org/src:<paquet>`` devrait toujours "
"afficher la page concernant les bogues du paquet source en question."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:80
msgid ""
"The problem we are working on is special as it only concerns the packaging-"
"related bits of ``bumprace``. If it was a problem in the source code it "
"would be helpful to also check the Upstream bug tracker. This is "
"unfortunately often different for every package you have a look at, but if "
"you search the web for it, you should in most cases find it pretty easily."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:88
msgid "Offering help"
msgstr "Offrir de l'aide"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:90
msgid ""
"If you found an open bug and it is not assigned to somebody and you are in a "
"position to fix it, you should comment on it with your solution. Be sure to "
"include as much information as you can: Under which circumstances does the "
"bug occur? How did you fix the problem? Did you test your solution?"
msgstr ""
"Si vous avez trouvé un bogue ouvert, qu'il n'est affecté à personne et que "
"vous êtes en mesure de régler le problème, vous pouvez le commenter avec "
"votre solution. N'oubliez pas d'inclure autant d'informations que possible : "
"dans quelles circonstances se produit le bogue ? Comment avez-vous résolu le "
"problème ? Avez-vous testé votre solution ?"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:95
msgid ""
"If no bug report has been filed, you can file a bug for it. What you might "
"want to bear in mind is: Is the issue so small that just asking for somebody "
"to commit it is good enough? Did you manage to only partially fix the issue "
"and you want to at least share your part of it?"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:100
msgid "It is great if you can offer help and will surely be appreciated."
msgstr ""
"C'est très bien si vous pouvez offrir votre aide, et elle sera assurément "
"appréciée."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:104
msgid "Fixing the issue"
msgstr "Résoudre le problème"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:106
msgid ""
"For this specific example it is enough to search the web for ``bumprace`` "
"and find the homepage of it. Be sure it is a live site and not just a "
"software catalogue. http://www.linux-games.com/bumprace/ looks like it is "
"the proper place."
msgstr ""
"Pour cet exemple spécifique, il suffit de chercher ``bumprace`` sur internet "
"et de trouver sa page d'accueil. Assurez-vous qu'il s'agisse du vrai site et "
"non d'un simple catalogue de logiciels. http://www.linux-games.com/bumprace/ "
"semble être sa bonne localisation."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:111
msgid ""
"To address the issue in the source package, we first need the source and we "
"can easily get it by running::"
msgstr ""
"Pour résoudre le problème dans le paquet source, nous avons d'abord besoin "
"de la source et nous pouvons facilement l'obtenir en exécutant ::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:117
msgid ""
"If you read :doc:`the Debian Directory Overview<./debian-dir-overview>` "
"before, you might remember, that the homepage for a package is specified in "
"the first part of ``debian/control``, the section which starts with "
"``Source:``."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:121
msgid "So what we do next is run::"
msgstr "Ainsi, nous lançons ensuite ::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:125
msgid ""
"and edit ``debian/control`` to add ``Homepage: http://www.linux-"
"games.com/bumprace/``. At the end of the first section should be a good "
"place for it. Once you have done this, save the file."
msgstr ""
"et modifions ``debian/control`` pour y ajouter ``Homepage: http://www.linux-"
"games.com/bumprace/``. La fin de la première section est un bon endroit pour "
"cela. Une fois que vous avez réalisé cela, enregistrez le fichier."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:129
msgid "If you now run::"
msgstr "Si désormais vous exécutez ::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:133
msgid "you should see something like this:"
msgstr "vous devriez voir quelque chose comme ceci :"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:149
msgid ""
"The diff is pretty simple to understand. The ``+`` indicates a line which "
"was added. In our cases it was added just before the second section, "
"starting with ``Package``, which indicates a resulting binary package."
msgstr ""
"La différence est assez simple à comprendre. Le ``+`` indique une ligne "
"rajoutée. Dans notre cas, elle a été ajoutée juste avant la seconde section, "
"débutant par ``Package``, qui indique le paquet binaire résultant."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:157
msgid ""
"It is important to explain to your fellow developers what exactly you did. "
"If you run::"
msgstr ""
"Il est important d'expliquer à vos collègues développeurs ce que vous avez "
"fait exactement. Si vous exécutez ::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:163
msgid ""
"this will start an editor with a boilerplate changelog entry which you just "
"have to fill out. In our case something like ``debian/control: Added "
"project's homepage.`` should do. Then save the file. To double-check this "
"worked out, run::"
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:170
msgid "and you will see something like this:"
msgstr "et vous verrez quelque chose comme ceci :"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:189
msgid "A few additional considerations:"
msgstr "Quelques remarques complémentaires :"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:191
msgid ""
"If you have a reference to a Launchpad bug which is fixed by the issue, add "
"(``LP: #<bug number>``) to the changelog entry line, ie: ``(LP: #123456)``."
msgstr ""
"Si vous faites référence à un numéro Launchpad du bogue résolu par votre "
"publication, ajoutez (``LP: #<numéro de bogue>``) sur la ligne d'entrée du "
"changelog, c'est à dire : ``(LP: #123456)``."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:193
msgid ""
"If you want to get your fix included in Debian, for a Debian bug the syntax "
"is ``(Closes: #<bug number>)``, ie: ``(Closes: #123456)``."
msgstr ""
"Si vous souhaitez que votre correctif soit inclus dans Debian, la syntaxe "
"pour un bogue Debian est ``(Closes: #<numéro de bogue>)``, c'est à dire : "
"``(Closes: #123456)``."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:195
msgid ""
"If it is a reference to an upstream or Debian bug or a mailing list "
"discussion, mention it as well."
msgstr ""
"S'il s'agit d'une référence à un bogue amont ou un bogue Debian ou encore "
"une discussion par liste de diffusion email, vous pouvez le mentionner "
"également."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:197
msgid "Try to wrap your lines at 80 characters."
msgstr "Essayez de limiter vos lignes à 80 caractères."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:198
msgid ""
"Try to be specific, not an essay, but enough for somebody (who did not "
"deeply look into the issue) to understand."
msgstr ""
"Essayez d'être concis, pas de roman, mais suffisamment pour que quelqu'un "
"(qui ne s'est pas profondément penché sur la question) puisse comprendre."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:200
msgid "Mention how you fixed the issue and where."
msgstr "Indiquez comment vous avez résolu le problème et où."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:206
msgid ""
"To test the fix, you need to :doc:`have your development environment set "
"up<./getting-set-up>`, then to build the package, install it and verify the "
"problem is solved. In our case this would be::"
msgstr ""
"Pour tester le correctif, vous devez :doc:`avoir configuré votre "
"environnement de développement<./getting-set-up>`, puis pour construire le "
"paquet, l'installer et vérifier que le problème est résolu. Dans notre cas, "
"ce serait ::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:214
msgid ""
"In step one we build the source package from the branch, then build it by "
"using ``pbuilder``, then inspect the resulting package to check if the "
"Homepage field was added properly."
msgstr ""
"Dans la première étape nous construisons le paquet source depuis la "
"ramification, puis le construisons en utilisant ``pbuilder``, et inspectons "
"ensuite le paquet résultant pour vérifier si le champ « Page d'accueil » a "
"été correctement ajouté."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:218
msgid ""
"In a lot of cases you will have to actually install the package to make sure "
"it works as expected. Our case is a lot easier. If the build succeeded, you "
"will find the binary packages in ``~/pbuilder/<release>_result``. Install "
"them via ``sudo dpkg -i <package>.deb`` or by double-clicking on them in "
"your file manager."
msgstr ""
"Dans de nombreux cas vous devrez réellement installer le paquet pour vous "
"assurer qu'il fonctionne comme prévu. Notre cas est largement plus simple. "
"Si la construction réussit, vous trouverez les paquets binaires dans "
"``~/pbuilder/<release>_result``. Installez-les à l'aide de la commande "
"``sudo dpkg -i <package>.deb`` ou en double-cliquant dessus dans votre "
"gestionnaire de fichiers."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:225
msgid ""
"As we verified, the problem is now solved, so the next step is sharing our "
"solution with the world."
msgstr ""
"Puisque nous l'avons vérifié, le problème est désormais résolu. La prochaine "
"étape est de partager notre solution avec tout le monde."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:229
msgid "Getting the fix included"
msgstr "Obtenir l'inclusion du correctif"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:231
msgid ""
"It makes to get fix included as Upstream as possible. Doing that you can "
"guarantee that everybody can take the Upstream source as-is and don't need "
"to have local modifications to fix it."
msgstr ""
"Cela permet d'inclure le correctif le plus en amont possible. Procéder ainsi "
"garantit que chacun puisse prendre la source en amont telle quelle et n'ait "
"pas besoin d'effectuer des modifications en local pour la corriger."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:235
msgid ""
"In our case we established that we have a problem with the packaging, both "
"in Ubuntu and Debian. As Ubuntu is based on Debian, we will send the fix to "
"Debian. Once it is included there, it will be picked up by Ubuntu "
"eventually. The issue in our tutorial is clearly non-critical, so this "
"approach makes sense. If it is important to fix the issue as soon as "
"possible, you will need to send the solution to multiple bug trackers. "
"Provided the issue affects all parties in question."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:243
msgid "To submit the patch to Debian, simply run::"
msgstr "Pour soumettre le patch à Debian, lancez simplement::"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:247
msgid ""
"This will take you through a series of steps to make sure the bug ends up in "
"the correct place. Be sure to review the diff again to make sure it does not "
"include random changes you made earlier."
msgstr ""
"Cela vous mènera à travers une série de mesures pour vous assurer que le "
"bogue se retrouve au bon endroit. Assurez-vous de contrôler de nouveau la "
"différence pour être certain qu'elle ne comprenne aucune modification "
"antérieure non désirée."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:251
msgid ""
"Communication is important, so when you add some more description to it to "
"the inclusion request, be friendly, explain it well."
msgstr ""
"La communication est importante, lorsque vous ajoutez une description à "
"votre demande d'inclusion, soyez gentil de bien l'expliquer."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:254
msgid ""
"If everything went well you should get a mail from Debian's bug tracking "
"system with more information. This might sometimes take a few minutes."
msgstr ""
"Si tout s'est bien déroulé, vous obtenez un message du système de suivi des "
"bogues Debian avec plus d'informations. Cela peut parfois prendre quelques "
"minutes."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:257
msgid ""
"If the problem is just in Ubuntu, you might want to consider :doc:`Seeking "
"Review and Sponsorship<./udd-sponsorship>` to get the fix included."
msgstr ""

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:263
msgid "Additional considerations"
msgstr "Considérations supplémentaires"

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:265
msgid ""
"If you find a package and find that there are a couple of trivial things you "
"can fix at the same time, do it. This will speed up review and inclusion."
msgstr ""
"Si vous trouvez qu'il y a un certain nombre de choses triviales possibles à "
"corriger en même temps dans un paquet, faites-le. Cela permettra d'accélérer "
"l'examen et l'inclusion."

#: ../ubuntu-packaging-guide/fixing-a-bug-example.rst:268
msgid ""
"If there are multiple big things you want to fix, it might be advisable to "
"send individual patches or merge proposals instead. If there are individual "
"bugs filed for the issues already, this makes it even easier."
msgstr ""
"S'il y a plusieurs choses importantes que vous souhaitez corriger, il "
"pourrait être plus judicieux d'envoyer des correctifs individuels ou de "
"fusionner des propositions. S'il y a déjà des bogues individuels déposés sur "
"le sujet, cela rend la chose encore plus aisée."

#: ../ubuntu-packaging-guide/getting-set-up.rst:3
msgid "Getting Set Up"
msgstr "Mise en route"

#: ../ubuntu-packaging-guide/getting-set-up.rst:5
msgid ""
"There are a number of things you need to do to get started developing for "
"Ubuntu. This article is designed to get your computer set up so that you can "
"start working with packages, and upload your packages to Ubuntu's hosting "
"platform, Launchpad. Here's what we'll cover:"
msgstr ""
"Un certain nombre de choses doivent être accomplies pour commencer à "
"développer pour Ubuntu. Cet article est conçu pour configurer votre "
"ordinateur de sorte que vous puissiez commencer à travailler avec des "
"paquets, puis télécharger vos paquets vers la plate-forme d'hébergement "
"d'Ubuntu, Launchpad. Voici ce que nous allons aborder :"

#: ../ubuntu-packaging-guide/getting-set-up.rst:10
msgid "Installing packaging-related software. This includes:"
msgstr "Installation des logiciels relatifs à l'empaquetage. Cela comprend :"

#: ../ubuntu-packaging-guide/getting-set-up.rst:12
msgid "Ubuntu-specific packaging utilities"
msgstr "Les utilitaires d'empaquetage spécifiques à Ubuntu"

#: ../ubuntu-packaging-guide/getting-set-up.rst:13
msgid "Encryption software so your work can be verified as being done by you"
msgstr ""
"Logiciel de chiffrement afin que votre travail soit reconnu comme étant bien "
"réalisé par vous"

#: ../ubuntu-packaging-guide/getting-set-up.rst:14
msgid "Additional encryption software so you can securely transfer files"
msgstr ""
"Logiciel de chiffrement supplémentaire afin de transférer des fichiers en "
"toute sécurité"

#: ../ubuntu-packaging-guide/getting-set-up.rst:16
msgid "Creating and configuring your account on Launchpad"
msgstr "Création et configuration de votre compte sur Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:17
msgid ""
"Setting up your development environment to help you do local builds of "
"packages, interact with other developers, and propose your changes on "
"Launchpad."
msgstr ""
"Configuration de votre environnement de développement pour vous aider à "
"construire des paquets localement, à interagir avec d'autres développeurs, "
"et à proposer vos modifications sur Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:22
msgid ""
"It is advisable to do packaging work using the current development version "
"of Ubuntu. Doing so will allow you to test changes in the same environment "
"where those changes will actually be applied and used."
msgstr ""
"Il est conseillé de travailler sur l'empaquetage en utilisant la version de "
"développement actuelle d'Ubuntu. Procéder ainsi vous permettra de tester les "
"modifications dans le même environnement où elles seront effectivement "
"appliquées et utilisées."

#: ../ubuntu-packaging-guide/getting-set-up.rst:26
msgid ""
"Don't worry though, the `Ubuntu development release wiki page "
"<https://wiki.ubuntu.com/UsingDevelopmentReleases>`_ shows a variety of ways "
"to safely use the development release."
msgstr ""
"Ne vous inquiétez pas, la `page wiki de la version de développement d'Ubuntu "
"<https://wiki.ubuntu.com/UsingDevelopmentReleases>`_ indique de multiples "
"façons d'utiliser la version de développement en toute sécurité."

#: ../ubuntu-packaging-guide/getting-set-up.rst:32
msgid "Install basic packaging software"
msgstr "Installer les logiciels d'empaquetage de base"

#: ../ubuntu-packaging-guide/getting-set-up.rst:34
msgid ""
"There are a number of tools that will make your life as an Ubuntu developer "
"much easier.  You will encounter these tools later in this guide.  To "
"install most of the tools you will need run this command::"
msgstr ""
"Il existe de nombreux outils qui simplifieront votre vie de développeur "
"d'Ubuntu. Vous croiserez ces outils plus loin dans ce guide. Pour installer "
"la plupart des outils dont vous aurez besoin, exécutez cette commande ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:41
msgid ""
"Note: Since Ubuntu 11.10 \"Oneiric Ocelot\" (or if you have Backports "
"enabled on a currently supported release), the following command will "
"install the above and other tools which are quite common in Ubuntu "
"development::"
msgstr ""
"Remarque : Depuis Ubuntu 11.10 \"Ocelot Onirique\" (ou si vous avez des "
"rétroportages activés sur une version actuellement prise en charge), la "
"commande suivante installe les outils ci-dessus et quelques autres, assez "
"communs dans le développement d'Ubuntu ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:49
msgid "This command will install the following software:"
msgstr "Cette commande va installer les logiciels suivants :"

#: ../ubuntu-packaging-guide/getting-set-up.rst:51
msgid ""
"``gnupg`` -- `GNU Privacy Guard`_ contains tools you will need to create a "
"cryptographic key with which you will sign files you want to upload to "
"Launchpad."
msgstr ""
"``gnupg`` -- `GNU Privacy Guard`_ contient les outils dont vous aurez besoin "
"pour créer une clé de chiffrement avec laquelle vous signerez les fichiers "
"que vous souhaiterez télécharger vers Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:54
msgid ""
"``pbuilder`` -- a tool to do reproducible builds of a package in a clean and "
"isolated environment."
msgstr ""
"``pbuilder`` -- un outil pour réaliser des constructions reproductibles d'un "
"paquet dans un environnement propre et isolé."

#: ../ubuntu-packaging-guide/getting-set-up.rst:56
msgid ""
"``ubuntu-dev-tools`` (and ``devscripts``, a direct dependency) -- a "
"collection of tools that make many packaging tasks easier."
msgstr ""
"``ubuntu-dev-tools`` (et ``devscripts``, sa dépendance directe) -- une "
"collection d'outils simplifiant les nombreuses tâches d'empaquetage."

#: ../ubuntu-packaging-guide/getting-set-up.rst:58
msgid ""
"``bzr-builddeb`` (and ``bzr``, a dependency) -- distributed version control "
"with Bazaar, a new way of working with packages for Ubuntu that will make it "
"easy for many developers to collaborate and work on the same code while "
"keeping it trivial to merge each other's work."
msgstr ""
"``bzr-builddeb`` (et ``bzr``, une dépendance) -- contrôle de la version "
"distribuée avec Bazaar, une nouvelle façon de travailler avec les paquets "
"pour Ubuntu facilitant la collaboration de nombreux développeurs sur le même "
"code, tout en gardant la simplicité de fusionner le travail de chacun."

#: ../ubuntu-packaging-guide/getting-set-up.rst:62
msgid ""
"``apt-file`` provides an easy way to find the binary package that contains a "
"given file."
msgstr ""
"``apt-file`` donne un moyen facile de trouver le paquet binaire contenant un "
"fichier donné."

#: ../ubuntu-packaging-guide/getting-set-up.rst:67
msgid "Create your GPG key"
msgstr "Créez votre clé GPG"

#: ../ubuntu-packaging-guide/getting-set-up.rst:69
msgid ""
"GPG stands for `GNU Privacy Guard`_ and it implements the OpenPGP standard "
"which allows you to sign and encrypt messages and files. This is useful for "
"a number of purposes. In our case it is important that you can sign files "
"with your key so they can be identified as something that you worked on. If "
"you upload a source package to Launchpad, it will only accept the package if "
"it can absolutely determine who uploaded the package."
msgstr ""
"GPG signifie `GNU Privacy Guard`_ et implémente le standard OpenPGP vous "
"permettant de signer et de crypter des messages et des fichiers. Ceci est "
"utile pour plusieurs raisons. Dans notre cas, il est important que vous "
"puissiez signer des fichiers avec votre clé afin qu'ils puissent être "
"identifiés comme quelque chose sur laquelle vous avez travaillé. Si vous "
"téléchargez un paquet source vers Launchpad, ce dernier n'acceptera le "
"paquet que s'il peut formellement déterminer qui l'a envoyé."

#: ../ubuntu-packaging-guide/getting-set-up.rst:76
msgid "To generate a new GPG key, run::"
msgstr "Pour générer une nouvelle clé GPG, exécutez ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:80
msgid ""
"GPG will first ask you which kind of key you want to generate. Choosing the "
"default (RSA and DSA) is fine. Next it will ask you about the keysize. The "
"default (currently 2048) is fine, but 4096 is more secure. Afterwards, it "
"will ask you if you want it to expire the key at some stage. It is safe to "
"say \"0\", which means the key will never expire. The last questions will be "
"about your name and email address. Just pick the ones you are going to use "
"for Ubuntu development here, you can add additional email addresses later "
"on. Adding a comment is not necessary. Then you will have to set a "
"passphrase, choose a safe one (a passphrase is just a password which is "
"allowed to include spaces)."
msgstr ""
"GPG vous demandera d'abord le type de clé que vous souhaitez générer. Le "
"choix par défaut (RSA et DSA) convient. Ensuite, il vous demandera la taille "
"de clé. La valeur par défaut (actuellement 2048) est correcte, mais 4096 est "
"plus sécurisé. Par la suite, il vous sera demandé si vous souhaitez faire "
"expirer la clé à un certain stade. Vous pouvez sans danger indiquer \"0\", "
"ce qui signifie que la clé n'expirera jamais. Les dernières questions seront "
"à propos de votre nom et de votre adresse de courriel. Il suffit ici de "
"choisir ceux que vous allez utiliser pour le développement d'Ubuntu, vous "
"pourrez ajouter des adresses de courriel supplémentaires plus tard. Ajouter "
"un commentaire n'est pas nécessaire. Ensuite, vous devrez définir une phrase "
"secrète, choisissez-en une sûre (une phrase secrète est juste un mot de "
"passe qui autorise les espaces)."

#: ../ubuntu-packaging-guide/getting-set-up.rst:90
msgid ""
"Now GPG will create a key for you, which can take a little bit of time; it "
"needs random bytes, so if you give the system some work to do it will be "
"just fine.  Move the cursor around, type some paragraphs of random text, "
"load some web page."
msgstr ""
"GPG va maintenant vous créer une clé, ce qui peut prendre un peu de temps ; "
"comme GPG a besoin d'octets aléatoires, il serait souhaitable que vous "
"donniez quelques tâches à réaliser au système. Déplacez le curseur, tapez "
"quelques paragraphes de texte aléatoire, chargez quelques pages dans votre "
"navigateur internet, etc."

#: ../ubuntu-packaging-guide/getting-set-up.rst:95
msgid "Once this is done, you will get a message similar to this one::"
msgstr ""
"Une fois cela fait, vous obtiendrez un message similaire à celui-ci ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:102
msgid "In this case ``43CDE61D`` is the *key ID*."
msgstr "Dans ce cas ``43CDE61D`` est l'*identifiant clé*."

#: ../ubuntu-packaging-guide/getting-set-up.rst:104
msgid ""
"Next, you need to upload the public part of your key to a keyserver so the "
"world can identify messages and files as yours. To do so, enter::"
msgstr ""
"Ensuite, vous devez envoyer la partie publique de votre clé à un serveur de "
"sorte que tout le monde puisse identifier vos messages et fichiers. Pour ce "
"faire, entrez ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:109
msgid ""
"This will send your key to the Ubuntu keyserver, but a network of keyservers "
"will automatically sync the key between themselves. Once this syncing is "
"complete, your signed public key will be ready to verify your contributions "
"around the world."
msgstr ""
"Cela enverra votre clé au serveur de trousseau d'Ubuntu, inclus dans un "
"réseau d'autres serveurs de trousseaux qui se synchroniseront entre eux. Une "
"fois cette synchronisation terminée, votre clé publique signée sera prête à "
"vérifier vos contributions partout dans le monde."

#: ../ubuntu-packaging-guide/getting-set-up.rst:116
msgid "Create your SSH key"
msgstr "Créez votre clé SSH"

#: ../ubuntu-packaging-guide/getting-set-up.rst:118
msgid ""
"SSH_ stands for *Secure Shell*, and it is a protocol that allows you to "
"exchange data in a secure way over a network. It is common to use SSH to "
"access and open a shell on another computer, and to use it to securely "
"transfer files. For our purposes, we will mainly be using SSH to securely "
"upload source packages to Launchpad."
msgstr ""
"SSH_ signifie *Secure Shell* , le protocole permettant d'échanger des "
"données de façon sécurisée sur un réseau. Il est courant d'utiliser SSH pour "
"accéder à un environnement, l'ouvrir sur un autre ordinateur et l'utiliser "
"pour transférer des fichiers en toute sécurité. Dans notre cas, nous allons "
"principalement utiliser SSH pour télécharger en toute sécurité nos paquets "
"source vers Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:124
msgid "To generate an SSH key, enter::"
msgstr "Pour générer une clé SSH, saisissez ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:128
msgid ""
"The default file name usually makes sense, so you can just leave it as it "
"is. For security purposes, it is highly recommended that you use a "
"passphrase."
msgstr ""
"Le nom de fichier par défaut est généralement logique, vous pouvez donc "
"simplement le laisser tel quel. Pour des raisons de sécurité, il est "
"fortement recommandé d'utiliser une phrase secrète."

#: ../ubuntu-packaging-guide/getting-set-up.rst:133
msgid "Set up pbuilder"
msgstr "Configurer pbuilder"

#: ../ubuntu-packaging-guide/getting-set-up.rst:135
msgid ""
"``pbuilder`` allows you to build packages locally on your machine. It serves "
"a couple of purposes:"
msgstr ""
"``pbuilder`` vous permet de construire des paquets en local sur votre "
"machine. Il dispose de différentes fonctions :"

#: ../ubuntu-packaging-guide/getting-set-up.rst:138
msgid ""
"The build will be done in a minimal and clean environment. This helps you "
"make sure your builds succeed in a reproducible way, but without modifying "
"your local system"
msgstr ""
"La construction se fera dans un environnement minimal et propre. Cela vous "
"aide à vous assurer que vos constructions réussiront de façon reproductible, "
"mais sans modifier votre système local"

#: ../ubuntu-packaging-guide/getting-set-up.rst:141
msgid ""
"There is no need to install all necessary *build dependencies* locally"
msgstr ""
"Il est inutile d'installer toutes les *dépendances de construction* "
"nécessaires en local"

#: ../ubuntu-packaging-guide/getting-set-up.rst:142
msgid ""
"You can set up multiple instances for various Ubuntu and Debian releases"
msgstr ""
"Vous pouvez configurer plusieurs instances pour différentes versions "
"d'Ubuntu et de Debian"

#: ../ubuntu-packaging-guide/getting-set-up.rst:144
msgid "Setting ``pbuilder`` up is very easy, run::"
msgstr "Configurer ``pbuilder`` est très simple, lancez ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:148
msgid ""
"where <release> is for example `natty`, `maverick`, `lucid` or in the case "
"of Debian maybe `sid`. This will take a while as it will download all the "
"necessary packages for a \"minimal installation\". These will be cached "
"though."
msgstr ""
"où <release> est par exemple `natty`, `maverick`, `lucid` ou, dans le cas de "
"Debian, peut-être `sid`. Cela va prendre un certain temps, car il faut "
"télécharger tous les paquets nécessaires à une \"installation minimale\". "
"Cependant, ceux-ci seront mis en cache."

#: ../ubuntu-packaging-guide/getting-set-up.rst:154
msgid "Get set up to work with Launchpad"
msgstr "Mettez vous en place pour travailler avec Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:156
msgid ""
"With a basic local configuration in place, your next step will be to "
"configure your system to work with Launchpad. This section will focus on the "
"following topics:"
msgstr ""
"Avec l'installation d'une configuration de base en local, la prochaine étape "
"sera de configurer votre système pour travailler avec Launchpad. Cette "
"section portera sur les sujets suivants :"

#: ../ubuntu-packaging-guide/getting-set-up.rst:160
msgid "What Launchpad is and creating a Launchpad account"
msgstr "Description de Launchpad et création d'un compte Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:161
msgid "Uploading your GPG and SSH keys to Launchpad"
msgstr "Téléversement de vos clés GPG et SSH vers Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:162
msgid "Configuring Bazaar to work with Launchpad"
msgstr "Configurer Bazaar pour travailler avec Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:163
msgid "Configuring Bash to work with Bazaar"
msgstr "Configurer Bash pour travailler avec Bazaar"

#: ../ubuntu-packaging-guide/getting-set-up.rst:167
msgid "About Launchpad"
msgstr "À propos de Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:169
msgid ""
"Launchpad is the central piece of infrastructure we use in Ubuntu. It not "
"only stores our packages and our code, but also things like translations, "
"bug reports, and information about the people who work on Ubuntu and their "
"team memberships.  You will also use Launchpad to publish your proposed "
"fixes, and get other Ubuntu developers to review and sponsor them."
msgstr ""
"Launchpad est la pièce maîtresse de l'infrastructure que nous utilisons dans "
"Ubuntu. Il stocke non seulement nos paquets et notre code, mais également "
"d'autres choses comme les traductions, les rapports de bogues et les "
"informations sur les personnes qui travaillent sur Ubuntu et leurs "
"équipiers. Vous pourrez également utiliser Launchpad pour publier vos "
"propositions de corrections et obtenir leur examen et leur parrainage par "
"d'autres développeurs d'Ubuntu."

#: ../ubuntu-packaging-guide/getting-set-up.rst:175
msgid ""
"You will need to register with Launchpad and provide a minimal amount of "
"information. This will allow you to download and upload code, submit bug "
"reports, and more."
msgstr ""
"Vous devez vous inscrire à Launchpad et fournir un minimum d'informations. "
"Cela vous permettra de télécharger du code depuis et vers Launchpad, de "
"soumettre des rapports de bogues et plus encore."

#: ../ubuntu-packaging-guide/getting-set-up.rst:179
msgid ""
"Besides hosting Ubuntu, Launchpad can host any Free Software project. For "
"more information see the `Launchpad Help wiki "
"<https://help.launchpad.net/>`_."
msgstr ""
"Outre l'hébergement d'Ubuntu, Launchpad peut accueillir tout projet de "
"logiciel libre. Pour plus d'informations, voir le wiki `Aide de Launchpad "
"<https://help.launchpad.net/>`_."

#: ../ubuntu-packaging-guide/getting-set-up.rst:184
msgid "Get a Launchpad account"
msgstr "Créer un compte Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:186
msgid ""
"If you don't already have a Launchpad account, you can easily `create one`_. "
"If you have a Launchpad account but cannot remember your Launchpad id, you "
"can find this out by going to https://launchpad.net/~ and looking for the "
"part after the `~` in the URL."
msgstr ""
"Si vous ne possédez pas encore de compte Launchpad, vous pouvez facilement "
"`en créer un`_. Si vous avez un compte Launchpad, dont vous ne vous rappelez "
"plus l'identifiant, vous pouvez le retrouver en allant sur "
"https://launchpad.net/~ et rechercher la partie après le `~` de l'URL."

#: ../ubuntu-packaging-guide/getting-set-up.rst:191
msgid ""
"Launchpad's registration process will ask you to choose a display name. It "
"is encouraged for you to use your real name here so that your Ubuntu "
"developer colleagues will be able to get to know you better."
msgstr ""
"Le processus d'inscription à Launchpad vous demandera de choisir un nom à "
"afficher. Il vous est recommandé d'utiliser votre vrai nom, afin que vos "
"collègues développeurs sur Ubuntu soient en mesure de mieux vous connaître."

#: ../ubuntu-packaging-guide/getting-set-up.rst:195
msgid ""
"When you register a new account, Launchpad will send you an email with a "
"link you need to open in your browser in order to verify your email address. "
"If you don't receive it, check in your spam folder."
msgstr ""
"Lorsque vous enregistrez un nouveau compte, Launchpad envoie un courriel "
"avec un lien que vous devez ouvrir dans votre navigateur afin de faire "
"vérifier votre adresse de courriel. Si vous ne le recevez pas, vérifiez dans "
"votre dossier de pourriel."

#: ../ubuntu-packaging-guide/getting-set-up.rst:199
msgid ""
"`The new account help page "
"<https://help.launchpad.net/YourAccount/NewAccount>`_ on Launchpad has more "
"information about the process and additional settings you can change."
msgstr ""
"`La page d'aide pour un nouveau compte "
"<https://help.launchpad.net/YourAccount/NewAccount>`_ sur Launchpad donne "
"plus d'informations sur le processus et les paramètres supplémentaires "
"modifiables."

#: ../ubuntu-packaging-guide/getting-set-up.rst:205
msgid "Upload your GPG key to Launchpad"
msgstr "Téléversez votre clé GPG sur Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:207
msgid "To find about your GPG fingerprint, run::"
msgstr "Pour connaître votre empreinte GPG, exécutez ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:211
msgid "and it will print out something like::"
msgstr "et cela affichera quelque chose comme ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:219
msgid ""
"Head to https://launchpad.net/~/+editpgpkeys and copy the \"Key "
"fingerprint\" into the text box. In the case above this would be ``5C28 0144 "
"FB08 91C0 2CF3  37AC 6F0B F90F 43CD E61D``. Now click on \"Import Key\"."
msgstr ""
"Dirigez-vous vers https://launchpad.net/~/+editpgpkeys et copiez le fichier "
"\"Key fingerprint\" dans la zone de texte. Dans le cas ci-dessus ce serait "
"``5C28 0144 FB08 91C0 2CF3 37AC 6F0B F90F 43CD E61D``. Ensuite, cliquez sur "
"\"Importer la clé\"."

#: ../ubuntu-packaging-guide/getting-set-up.rst:224
msgid ""
"Launchpad will use the fingerprint to check the Ubuntu key server for your "
"key and, if successful, send you an encrypted email asking you to confirm "
"the key import. Check your email account and read the email that Launchpad "
"sent you. `If your email client supports OpenPGP encryption, it will prompt "
"you for the password you chose for the key when GPG generated it. Enter the "
"password, then click the link to confirm that the key is yours.`"
msgstr ""
"Launchpad utilise l'empreinte pour vérifier votre clé sur le serveur de "
"trousseau d'Ubuntu et, en cas de succès, vous envoie un courriel crypté vous "
"demandant de confirmer l'import de la clé. Vérifiez votre compte de "
"messagerie et lisez le courriel envoyé par Launchpad. `Si votre client de "
"messagerie prend en charge le chiffrement OpenPGP, il vous demandera "
"d'entrer le mot de passe choisi pour la clé lors de la génération GPG. "
"Entrez le mot de passe, puis cliquez sur le lien pour confirmer que la clé "
"est la vôtre.`"

#: ../ubuntu-packaging-guide/getting-set-up.rst:231
msgid ""
"Launchpad encrypts the email, using your public key, so that it can be sure "
"that the key is yours. If you are using Thunderbird, the default Ubuntu "
"email client, you can install the `Enigmail plugin "
"<https://apps.ubuntu.com/cat/applications/enigmail/>`_ to easily decrypt the "
"message. If your email software does not support OpenPGP encryption, copy "
"the encrypted email's contents, type ``gpg`` in your terminal, then paste "
"the email contents into your terminal window."
msgstr ""
"Launchpad chiffre le courriel en utilisant votre clé publique, ce qui assure "
"que votre clé vous est propre. Si vous utilisez Thunderbird, le client de "
"messagerie par défaut d'Ubuntu, vous pouvez installer le  `greffon Enigmail "
"<https://apps.ubuntu.com/cat/applications/enigmail/>`_ pour déchiffrer "
"aisément le message. Si votre logiciel de messagerie ne prend pas OpenPGP en "
"charge, copiez le contenu du courriel chiffré, tapez ``gpg`` dans une "
"fenêtre de terminal, puis collez-y le contenu du courriel."

#: ../ubuntu-packaging-guide/getting-set-up.rst:240
msgid ""
"Back on the Launchpad website, use the Confirm button and Launchpad will "
"complete the import of your OpenPGP key."
msgstr ""
"De retour sur le site Launchpad, utilisez le bouton \"Confirmer\" et "
"Launchpad terminera l'import de votre clé OpenPGP."

#: ../ubuntu-packaging-guide/getting-set-up.rst:243
msgid ""
"Find more information at "
"https://help.launchpad.net/YourAccount/ImportingYourPGPKey"
msgstr ""
"Vous trouverez plus d'informations sur "
"https://help.launchpad.net/YourAccount/ImportingYourPGPKey"

#: ../ubuntu-packaging-guide/getting-set-up.rst:247
msgid "Upload your SSH key to Launchpad"
msgstr "Téléchargez votre clé SSH vers Launchpad"

#: ../ubuntu-packaging-guide/getting-set-up.rst:249
msgid ""
"Open https://launchpad.net/~/+editsshkeys in a web browser, also open "
"``~/.ssh/id_rsa.pub`` in a text editor. This is the public part of your SSH "
"key, so it is safe to share it with Launchpad. Copy the contents of the file "
"and paste them into the text box on the web page that says \"Add an SSH "
"key\". Now click \"Import Public Key\"."
msgstr ""
"Ouvrez https://launchpad.net/~/+editsshkeys dans un navigateur internet, "
"ainsi que ``~/.ssh/id_rsa.pub`` dans un éditeur de texte. Il s'agit de la "
"partie publique de votre clé SSH, il est donc sûr de la partager avec "
"Launchpad. Copiez le contenu du fichier et collez-le dans la zone de texte "
"sur la page Web affichant \"Ajouter une clé SSH\". Ensuite, cliquez sur "
"\"Importer la clé publique\"."

#: ../ubuntu-packaging-guide/getting-set-up.rst:255
msgid ""
"For more information on this process, visit the `creating an SSH keypair "
"<https://help.launchpad.net/YourAccount/CreatingAnSSHKeyPair>`_ page on "
"Launchpad."
msgstr ""
"Pour plus d'informations sur ce processus, veuillez consulter la page `créer "
"un appariement de clés SSH "
"<https://help.launchpad.net/YourAccount/CreatingAnSSHKeyPair>`_ sur "
"Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:261
msgid "Configure Bazaar"
msgstr "Configurer Bazaar"

#: ../ubuntu-packaging-guide/getting-set-up.rst:263
msgid ""
"Bazaar is the tool we use to store code changes in a logical way, to "
"exchange proposed changes and merge them, even if development is done "
"concurrently.  It is used for the new Ubuntu Distributed Development method "
"of working with Ubuntu packages."
msgstr ""
"Bazaar est l'outil que nous utilisons pour stocker de manière logique les "
"modifications de code, échanger des propositions de modifications et les "
"fusionner, même si le développement est en cours. Il est utilisé dans la "
"nouvelle méthode de Développement des Distributions Ubuntu pour travailler "
"avec les paquets Ubuntu."

#: ../ubuntu-packaging-guide/getting-set-up.rst:268
msgid "To tell Bazaar who you are, simply run::"
msgstr "Pour dire à Bazaar qui vous êtes, il suffit de lancer ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:273
msgid ""
"`whoami` will tell Bazaar which name and email address it should use for "
"your commit messages. With `launchpad-login` you set your Launchpad ID. This "
"way code that you publish in Launchpad will be associated with you."
msgstr ""

#: ../ubuntu-packaging-guide/getting-set-up.rst:277
msgid ""
"Note: If you can not remember the ID, go to https://launchpad.net/~ and see "
"where it redirects you. The part after the \"~\" in the URL is your "
"Launchpad ID.)"
msgstr ""
"Remarque : Si vous ne vous souvenez plus de l'identifiant, allez à "
"https://launchpad.net/~ et regardez où cela vous redirige. La partie après "
"le \"~\" de l'URL est votre identifiant Launchpad."

#: ../ubuntu-packaging-guide/getting-set-up.rst:283
msgid "Configure your shell"
msgstr "Configurez votre shell"

#: ../ubuntu-packaging-guide/getting-set-up.rst:284
msgid ""
"Similar to Bazaar, the Debian/Ubuntu packaging tools need to learn about you "
"as well. Simply open your `~/.bashrc` in a text editor and add something "
"like this to the bottom of it::"
msgstr ""
"De manière similaire à Bazaar, les outils de gestion des paquets de "
"Debian/Ubuntu ont également besoin de vous connaître. Il suffit d'ouvrir "
"votre fichier `~/.bashrc` dans un éditeur de texte et d'y rajouter à la fin "
"quelques lignes comme ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:291
msgid "Now save the file and either restart your terminal or run::"
msgstr ""
"Maintenant, sauvegardez le fichier et redémarrez votre terminal ou "
"exécutez ::"

#: ../ubuntu-packaging-guide/getting-set-up.rst:295
msgid ""
"(If you do not use the default shell, which is `bash`, please edit the "
"configuration file for that shell accordingly.)"
msgstr ""
"(Si vous n'utilisez pas l'environnement par défaut, `bash`, veuillez "
"modifier en conséquence le fichier de configuration pour cet environnement.)"

#: ../ubuntu-packaging-guide/index.rst:9
msgid "Ubuntu Packaging Guide"
msgstr "Guide d'empaquetage pour Ubuntu"

#: ../ubuntu-packaging-guide/index.rst:11
msgid ""
"Welcome to the Ubuntu Packaging and Development Guide! This is the official "
"place for learning all about Ubuntu Development and packaging. After reading "
"this guide you will have:"
msgstr ""
"Bienvenue dans le Guide d'empaquetage et de développement dans Ubunutu ! Il "
"s'agit de l'endroit officiel  pour tout apprendre sur le développement et "
"l'empaquetage dans Ubuntu. Après avoir lu ce guide, vous aurez :"

#: ../ubuntu-packaging-guide/index.rst:15
msgid ""
"heard about the most important players, processes and tools in Ubuntu "
"development,"
msgstr ""
"entendu parlé des plus importants lecteurs, processus et outils dans le "
"développement d'Ubuntu,"

#: ../ubuntu-packaging-guide/index.rst:17
msgid "your development environment set up correctly,"
msgstr "configuré correctement votre environnement de développement,"

#: ../ubuntu-packaging-guide/index.rst:18
msgid "a better idea of how to join our community,"
msgstr "une meilleure idée de la façon de rejoindre notre communauté,"

#: ../ubuntu-packaging-guide/index.rst:19
msgid "fixed an actual Ubuntu bug as part of the tutorials."
msgstr "corrigé un vrai bogue Ubuntu dans une partie des tutoriels."

#: ../ubuntu-packaging-guide/index.rst:21
msgid ""
"Ubuntu is not only a free and open source operating system, its platform is "
"also open and developed in a transparent fashion. The source code for every "
"single component can be obtained easily and every single change to the "
"Ubuntu platform can be reviewed."
msgstr ""
"Ubuntu n'est pas seulement un système d'exploitation libre et open source, "
"sa plate-forme est également ouverte et développée de manière transparente. "
"Le code source de chaque composant s'obtient aisément et chaque modification "
"de la plate-forme Ubuntu peut être examinée."

#: ../ubuntu-packaging-guide/index.rst:26
msgid ""
"This means you can actively get involved in improving it and the community "
"of Ubuntu platform developers is always interested in helping peers getting "
"started."
msgstr ""
"Cela signifie que vous pouvez activement participer à son amélioration et "
"que la communauté des développeurs de la plate-forme Ubuntu se sent toujours "
"concernée pour aider ses pairs à démarrer."

#: ../ubuntu-packaging-guide/index.rst:30
msgid ""
"Ubuntu is also a community of great people who believe in free software and "
"that it should be accessible for everyone. Its members are welcoming and "
"want you to be involved as well. We want you to get involved, to ask "
"questions, to make Ubuntu better together with us."
msgstr ""
"Ubuntu est également une communauté de personnes formidables qui croient au "
"logiciel libre afin qu'il reste accessible au plus grand nombre. Ses membres "
"sont accueillants et souhaitent également votre participation. Nous "
"souhaitons que vous vous impliquiez, posiez des questions, rendiez Ubuntu "
"meilleur avec nous."

#: ../ubuntu-packaging-guide/index.rst:35
msgid ""
"If you run into problems: don't panic! Check out the :doc:`communication "
"article<./communication>` and you will find out how to most easily get in "
"touch with other developers."
msgstr ""
"Si vous rencontrez des problèmes : pas de panique ! Vérifiez l':doc:`article "
"decommunication<./communication>` et vous découvrirez comment rentrer plus "
"facilement en contact avec d'autres développeurs."

#: ../ubuntu-packaging-guide/index.rst:39
msgid "The guide is split up into two sections:"
msgstr "Le guide est divisé en deux sections :"

#: ../ubuntu-packaging-guide/index.rst:41
msgid "A list of articles based on tasks, things you want to get done."
msgstr ""
"Une liste d'articles basés sur les tâches ou les choses que vous "
"souhaiteriez voir traitées."

#: ../ubuntu-packaging-guide/index.rst:42
msgid ""
"A set of knowledge-base articles that dig deeper into specific bits of our "
"tools and workflows."
msgstr ""
"Un ensemble d'articles composant une base de connaissances plus approfondies "
"sur des parties spécifiques de nos outils et nos flux de travail."

#: ../ubuntu-packaging-guide/index.rst:45
msgid ""
"This guide focuses on the Ubuntu Distributed Development packaging method. "
"This is a new way of packaging which uses Distributed Revision Control "
"branches.  It currently has some limitations which mean many teams in Ubuntu "
"use :doc:`traditional packaging<./traditional-packaging>` methods.  See the "
":doc:`UDD Introduction<./udd-intro>` page for an introduction to the "
"differences."
msgstr ""

#: ../ubuntu-packaging-guide/index.rst:52
msgid "Articles"
msgstr "Articles"

#: ../ubuntu-packaging-guide/index.rst:69
msgid "Knowledge Base"
msgstr "Base de connaissances"

#: ../ubuntu-packaging-guide/index.rst:89
#: ../ubuntu-packaging-guide/libraries.rst:150
msgid "Further Reading"
msgstr "Lectures complémentaires"

#: ../ubuntu-packaging-guide/index.rst:91
msgid ""
"You can read this guide offline in different formats, if you install one of "
"the `binary packages <https://launchpad.net/ubuntu/+source/ubuntu-packaging-"
"guide>`_."
msgstr ""
"Vous pouvez consulter ce guide hors-ligne dans différents formats, si vous "
"installez un des `paquets binaires "
"<https://launchpad.net/ubuntu/+source/ubuntu-packaging-guide>`_."

#: ../ubuntu-packaging-guide/index.rst:94
msgid ""
"If you want to learn more about building Debian packages, here are some "
"Debian resources you may find useful:"
msgstr ""
"Si vous souhaitez en savoir plus à propos de la construction de paquets "
"Debian, voici quelques ressources Debian que vous trouverez utiles :"

#: ../ubuntu-packaging-guide/index.rst:97
msgid ""
"`How to package for Debian <https://wiki.debian.org/HowToPackageForDebian>`_;"
msgstr ""
"`Comment empaqueter pour Debian "
"<https://wiki.debian.org/HowToPackageForDebian>`_;"

#: ../ubuntu-packaging-guide/index.rst:98
msgid "`Debian Policy Manual <http://www.debian.org/doc/debian-policy/>`_;"
msgstr "`Charte Debian <http://www.debian.org/doc/debian-policy/>`_;"

#: ../ubuntu-packaging-guide/index.rst:99
msgid ""
"`Debian New Maintainers' Guide <http://www.debian.org/doc/manuals/maint-"
"guide/>`_ — available in many languages;"
msgstr ""
"`Le Guide des Nouveaux Mainteneurs Debian "
"<http://www.debian.org/doc/manuals/maint-guide/>`_ — disponible en plusieurs "
"langues ;"

#: ../ubuntu-packaging-guide/index.rst:101
msgid ""
"`Packaging tutorial <http://www.debian.org/doc/manuals/packaging-"
"tutorial/>`_ (also available as a `package "
"<https://launchpad.net/ubuntu/+source/packaging-tutorial>`_)."
msgstr ""
"`Tutoriel d'empaquetage <http://www.debian.org/doc/manuals/packaging-"
"tutorial/>`_ (également disponible comme `paquet "
"<https://launchpad.net/ubuntu/+source/packaging-tutorial>`_)."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:3
msgid "Introduction to Ubuntu Development"
msgstr "Introduction au Développement d'Ubuntu"

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:5
msgid ""
"Ubuntu is made up of thousands of different components, written in many "
"different programming languages. Every component -  be it a software "
"library, a tool or a graphical application - is available as a source "
"package. Source packages in most cases consist of two parts: the actual "
"source code and metadata. Metadata includes the dependencies of the package, "
"copyright and licensing information, and instructions on how to build the "
"package. Once this source package is compiled, the build process provides "
"binary packages, which are the .deb files users can install."
msgstr ""
"Ubuntu est constitué de milliers de composants différents, écrits dans de "
"multiples langages de programmation. Chaque composant - pouvant être une "
"bibliothèque logicielle, un outil ou une application graphique - est "
"disponible sous forme d'un paquet source. Dans la plupart des cas, les "
"paquets sources se composent de deux parties : le code source réel et les "
"métadonnées. Ces dernières comprennent les dépendances du paquet, les droits "
"d'auteur et les informations de licence, ainsi que des instructions sur la "
"façon de construire le paquet. Une fois ce paquet source compilé, le "
"processus de construction fournit les paquets binaires, en d'autres termes, "
"les fichiers .deb que les utilisateurs peuvent installer."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:14
msgid ""
"Every time a new version of an application is released, or when someone "
"makes a change to the source code that goes into Ubuntu, the source package "
"must be uploaded to Launchpad's build machines to be compiled. The resulting "
"binary packages then are distributed to the archive and its mirrors in "
"different countries. The URLs in ``/etc/apt/sources.list`` point to an "
"archive or mirror. Every day images are built for a selection of different "
"Ubuntu flavours. They can be used in various circumstances. There are images "
"you can put on a USB key, you can burn them on DVDs, you can use netboot "
"images and there are images suitable for your phone and table. Ubuntu "
"Desktop, Ubuntu Server, Kubuntu and others specify a list of required "
"packages that get on the image. These images are then used for installation "
"tests and provide the feedback for further release planning."
msgstr ""
"A chaque sortie d'une nouvelle version, ou lorsqu'une personne applique des "
"modifications au code source à destination d'Ubuntu, le paquet source doit "
"être téléchargé vers les machines de construction de Launchpad en vue d'être "
"compilé. Les paquets binaires en résultant sont alors distribués vers une "
"archive et ses miroirs dans différents pays. Les adresses dans "
"``/etc/apt/sources.list`` pointent vers une archive ou un miroir. Chaque "
"jour, des images sont construites pour une sélection des différentes "
"versions d'Ubuntu. Elles peuvent être utilisées dans des circonstances "
"diverses. Ces images peuvent être placées sur une clé USB, gravées sur des "
"DVD, vous pouvez utiliser des images pour un miniportable ou même adaptées à "
"votre téléphone ou à votre tablette. Ubuntu Desktop, Ubuntu Server, Kubuntu "
"et les autres versions précisent la liste des paquets requis pour leur "
"image. Ces images sont utilisées pour les tests d'installation et "
"fournissent le retour d'information sur la planification des livraisons "
"ultérieures."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:27
msgid ""
"Ubuntu's development is very much dependent on the current stage of the "
"release cycle. We release a new version of Ubuntu every six months, which is "
"only possible because we have established strict freeze dates. With every "
"freeze date that is reached developers are expected to make fewer, less "
"intrusive changes. Feature Freeze is the first big freeze date after the "
"first half of the cycle has passed. At this stage features must be largely "
"implemented. The rest of the cycle is supposed to be focused on fixing bugs. "
"After that the user interface, then the documentation, the kernel, etc. are "
"frozen, then the beta release is put out which receives a lot of testing. "
"From the beta release onwards, only critical bugs get fixed and a release "
"candidate release is made and if it does not contain any serious problems, "
"it becomes the final release."
msgstr ""
"Le développement d'Ubuntu est très dépendant de la phase actuelle du cycle "
"de sortie. Nous publions une nouvelle version d'Ubuntu tous les six mois, ce "
"qui est rendu possible par l'établissement dates strictement figées. À "
"chaque échéance atteinte, les développeurs doivent faire moins de "
"modifications, ou les moins intrusives possibles. Le gel des fonctionnalités "
"est la première grosse échéance après la première moitié du cycle. À ce "
"stade, les nouvelles fonctionnalités doivent être largement appliquées. Le "
"reste du cycle est censé se concentrer sur la correction des bogues. "
"Ensuite, l'interface utilisateur, puis la documentation, le noyau, etc. sont "
"gelés, puis la version bêta est mise en ligne pour recevoir un maximum de "
"tests. À partir de la version bêta, seuls les bogues critiques sont "
"corrigés, une version `candidate` est créée et lorsqu'elle ne contient pas "
"de problèmes graves, elle devient la version finale."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:42
msgid ""
"Thousands of source packages, billions of lines of code, hundreds of "
"contributors require a lot of communication and planning to maintain high "
"standards of quality. At the beginning and in the middle of each release "
"cycle we have the Ubuntu Developer Summit where developers and contributors "
"come together to plan the features of the next releases. Every feature is "
"discussed by its stakeholders and a specification is written that contains "
"detailed information about its assumptions, implementation, the necessary "
"changes in other places, how to test it and so on. This is all done in an "
"open and transparent fashion, so you can participate remotely and listen to "
"a videocast, chat with attendants and subscribe to changes of "
"specifications, so you are always up to date."
msgstr ""
"Des milliers de paquets sources, des milliards de lignes de code, des "
"centaines de contributeurs exigent beaucoup de communication et de "
"planification pour maintenir des normes élevées de qualité. Au début et au "
"milieu de chaque cycle de version, nous avons le Sommet des Développeurs "
"Ubuntu, où les développeurs et les contributeurs sont réunis pour planifier "
"les fonctionnalités des prochaines versions. Chaque fonctionnalité est "
"décrite par ses intervenants et un cahier des charges est écrit, contenant "
"des informations détaillées sur ses hypothèses, sa mise en œuvre, les "
"modifications nécessaires à d'autres endroits, la façon de la tester, etc. "
"Tout cela est fait de manière ouverte et transparente, afin que vous "
"puissiez participer à distance et regarder un flux vidéo, discuter avec les "
"participants et adhérer aux modifications de spécifications, de sorte que "
"vous soyez toujours informé."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:54
msgid ""
"Not every single change can be discussed in a meeting though, particularly "
"because Ubuntu relies on changes that are done in other projects. That is "
"why contributors to Ubuntu constantly stay in touch. Most teams or projects "
"use dedicated mailing lists to avoid too much unrelated noise. For more "
"immediate coordination, developers and contributors use Internet Relay Chat "
"(IRC). All discussions are open and public."
msgstr ""
"Chaque modification ne peut malgré tout pas être abordée lors d'une réunion, "
"en particulier parce qu'Ubuntu repose sur des modifications effectuées dans "
"d'autres projets. C'est pourquoi les contributeurs à Ubuntu restent "
"constamment en contact. La plupart des équipes ou des projets utilisent des "
"listes de diffusion dédiées en vue d'éviter trop de perturbations inutiles. "
"Pour la coordination plus immédiate, les développeurs et les contributeurs "
"utilisent Internet Relay Chat (IRC). Toutes les discussions y sont ouvertes "
"et publiques."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:61
msgid ""
"Another important tool regarding communication is bug reports. Whenever a "
"defect is found in a package or piece of infrastructure, a bug report is "
"filed in Launchpad. All information is collected in that report and its "
"importance, status and assignee updated when necessary. This makes it an "
"effective tool to stay on top of bugs in a package or project and organise "
"the workload."
msgstr ""
"Un autre outil important en matière de communication est le rapport de "
"bogue. Chaque fois qu'un défaut est décelé dans un paquet ou une partie de "
"l'infrastructure, un rapport de bogue est déposé dans Launchpad. Toutes les "
"informations sont recueillies dans ce rapport et l'importance, le statut et "
"l'affectation du bogue sont mis à jour si nécessaire. Cela en fait un outil "
"efficace pour surmonter les bogues dans un paquet ou un projet et pour "
"organiser la charge de travail."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:68
msgid ""
"Most of the software available through Ubuntu is not written by Ubuntu "
"developers themselves. Most of it is written by developers of other Open "
"Source projects and then integrated into Ubuntu. These projects are called "
"\"Upstreams\", because their source code flows into Ubuntu, where we "
"\"just\" integrate it. The relationship to Upstreams is critically important "
"to Ubuntu. It is not just code that Ubuntu gets from Upstreams, but it is "
"also that Upstreams get users, bug reports and patches from Ubuntu (and "
"other distributions)."
msgstr ""
"La plupart des logiciels disponibles dans Ubuntu ne sont pas écrits par les "
"développeurs d'Ubuntu eux-mêmes. Une grande partie est écrite par les "
"développeurs d'autres projets Open Source et ensuite intégrés dans Ubuntu. "
"Ces projets sont appelés \"amonts\", parce que leurs codes sources se "
"déversent dans Ubuntu, où nous faisons \"juste\" leur intégration. La "
"relation avec les projets en amonts est extrêmement importante pour Ubuntu. "
"Ce n'est pas uniquement le code qu'Ubuntu reçoit des projets en amont, ceux-"
"ci profitent également des utilisateurs, des rapports de bogues et des "
"correctifs de la part d'Ubuntu (et des autres distributions)."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:77
msgid ""
"The most important Upstream for Ubuntu is Debian. Debian is the distribution "
"that Ubuntu is based on and many of the design decisions regarding the "
"packaging infrastructure are made there. Traditionally, Debian has always "
"had dedicated maintainers for every single package or dedicated maintenance "
"teams. In Ubuntu there are teams that have an interest in a subset of "
"packages too, and naturally every developer has a special area of expertise, "
"but participation (and upload rights) generally is open to everyone who "
"demonstrates ability and willingness."
msgstr ""
"L'amont le plus important pour Ubuntu est Debian. Debian est la distribution "
"sur laquelle Ubuntu est basée et la plupart des décisions de conception "
"relatives à l'infrastructure d'empaquetage sont prises là. "
"Traditionnellement, Debian a toujours eu des responsables dédiés pour chaque "
"paquet ou des équipes de maintenance dédiées. Dans Ubuntu, ce sont également "
"des équipes qui s'intéressent à un sous-ensemble de paquets et, "
"naturellement, chaque développeur possède un domaine d'expertise, mais la "
"participation (et les droits de téléchargement) est généralement ouverte à "
"tous ceux qui prouvent leur talent et leur volonté."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:86
msgid ""
"Getting a change into Ubuntu as a new contributor is not as daunting as it "
"seems and can be a very rewarding experience. It is not only about learning "
"something new and exciting, but also about sharing the solution and solving "
"a problem for millions of users out there."
msgstr ""
"Obtenir une modification dans Ubuntu en tant que nouveau collaborateur n'est "
"pas aussi intimidant qu'il n'y paraît et peut même s'avérer une expérience "
"très enrichissante. Il ne s'agit pas seulement d'apprendre quelque chose de "
"nouveau et d'excitant, mais également de partager une solution et de "
"résoudre un problème pour des millions d'utilisateurs."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:91
msgid ""
"Open Source Development happens in a distributed world with different goals "
"and different areas of focus. For example there might be the case that a "
"particular Upstream is interested in working on a new big feature while "
"Ubuntu, because of the tight release schedule, is interested in shipping a "
"solid version with just an additional bug fix. That is why we make use of "
"\"Distributed Development\", where code is being worked on in various "
"branches that are merged with each other after code reviews and sufficient "
"discussion."
msgstr ""
"Le développement Open Source intervient dans un monde partagé selon "
"différents objectifs et différents domaines d'intérêt. Par exemple, cela "
"pourrait être le cas d'un Amont particulier intéressé par le travail sur une "
"nouvelle fonctionnalité importante, alors qu'Ubuntu, en raison de son "
"échéancier serré de sortie, est intéressé par la fourniture d'une version "
"robuste avec juste quelques corrections supplémentaires de bogues. C'est "
"pourquoi nous utilisons le \"Développement Distribué\", où le code est en "
"cours d'élaboration dans différentes branches qui sont fusionnées les unes "
"avec les autres, après des révisions du code et des discussions adéquates."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:101
msgid ""
"In the example mentioned above it would make sense to ship Ubuntu with the "
"existing version of the project, add the bugfix, get it into Upstream for "
"their next release and ship that (if suitable) in the next Ubuntu release. "
"It would be the best possible compromise and a situation where everybody "
"wins."
msgstr ""
"Dans l'exemple mentionné ci-dessus, il serait logique de fournir Ubuntu avec "
"la version existante du projet, d'ajouter le correctif, de l'inclure à "
"l'amont pour leur prochaine version et de fournir de nouveau le projet (s'il "
"est convenable) avec la prochaine version d'Ubuntu. Ce serait le meilleur "
"compromis possible et une situation gagnant-gagnant."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:106
msgid ""
"To fix a bug in Ubuntu, you would first get the source code for the package, "
"then work on the fix, document it so it is easy to understand for other "
"developers and users, then build the package to test it. After you have "
"tested it, you can easily propose the change to be included in the current "
"Ubuntu development release. A developer with upload rights will review it "
"for you and then get it integrated into Ubuntu."
msgstr ""
"Pour corriger un bogue dans Ubuntu, vous devrez d'abord obtenir le code "
"source pour le paquet, puis travailler sur le correctif, le documenter pour "
"qu'il soit simple à comprendre pour les autres développeurs et utilisateurs, "
"puis construire le paquet pour le tester. Après l'avoir testé, vous pouvez "
"aisément proposer que la modification soit incluse dans la version d'Ubuntu "
"actuellement en développement. Un développeur ayant les droits de "
"téléchargement l'examinera pour vous puis l'intégrera dans Ubuntu."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:115
msgid ""
"When trying to find a solution it is usually a good idea to check with "
"Upstream and see if the problem (or a possible solution) is known already "
"and, if not, do your best to make the solution a concerted effort."
msgstr ""
"En cherchant une solution, il est généralement intelligent de vérifier avec "
"l'amont et de voir si le problème (ou une solution possible) est connu et, "
"dans le cas contraire, de faire de votre mieux pour que la solution soit un "
"effort concerté."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:119
msgid ""
"Additional steps might involve getting the change backported to an older, "
"still supported version of Ubuntu and forwarding it to Upstream."
msgstr ""
"Des étapes supplémentaires pourraient induire le rétroportage des "
"modifications vers une ancienne version d'Ubuntu encore prise en charge et "
"leur transmission vers l'amont."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:122
msgid ""
"The most important requirements for success in Ubuntu development are: "
"having a knack for \"making things work again,\" not being afraid to read "
"documentation and ask questions, being a team player and enjoying some "
"detective work."
msgstr ""
"Les pré-requis les plus importants pour réussir dans le développement "
"d'Ubuntu sont les suivants : avoir un talent pour \"faire que les choses "
"fonctionnent de nouveau\", ne pas avoir peur de lire la documentation et de "
"poser des questions, jouer collectif et apprécier le travail de détective."

#: ../ubuntu-packaging-guide/introduction-to-ubuntu-development.rst:126
msgid ""
"Good places to ask your questions are ``ubuntu-motu@lists.ubuntu.com`` and "
"``#ubuntu-motu`` on ``irc.freenode.net``. You will easily find a lot of new "
"friends and people with the same passion that you have: making the world a "
"better place by making better Open Source software."
msgstr ""
"Deux bons endroits pour poser vos questions sont ``ubuntu-"
"motu@lists.ubuntu.com`` et ``#ubuntu-motu`` sur ``irc.freenode.net``. Vous "
"trouverez facilement beaucoup de nouveaux amis et des personnes ayant la "
"même passion que vous : rendre le monde meilleur en produisant de meilleurs "
"logiciels Open Source."

#: ../ubuntu-packaging-guide/kde.rst:3
msgid "KDE Packaging"
msgstr "Empaquetage pour KDE"

#: ../ubuntu-packaging-guide/kde.rst:5
msgid ""
"Packaging of KDE programs in Ubuntu is managed by the Kubuntu and MOTU "
"teams.  You can contact the Kubuntu team on the `Kubuntu mailing list`_ and "
"``#kubuntu-devel`` Freenode IRC channel.  More information about Kubuntu "
"development is on the `Kubuntu wiki page`_."
msgstr ""

#: ../ubuntu-packaging-guide/kde.rst:10
msgid ""
"Our packaging follows the practices of the `Debian Qt/KDE Team`_ and Debian "
"KDE Extras Team.  Most of our packages are derived from the packaging of "
"these Debian teams."
msgstr ""
"Notre empaquetage est conforme aux pratiques de l'`Équipe Debian Qt/KDE`_ et "
"de l'équipe Debian KDE Extras. La plupart de nos paquets sont dérivés de "
"l'empaquetage de ces équipes Debian."

#: ../ubuntu-packaging-guide/kde.rst:15
msgid "Patching Policy"
msgstr "Politique de correction"

#: ../ubuntu-packaging-guide/kde.rst:17
msgid ""
"Kubuntu does not add patches to KDE programs unless they come from the "
"upstream authors or submitted upstream with the expectation they will be "
"merged soon or we have consulted the issue with the upstream authors."
msgstr ""
"Kubuntu n'ajoute aucun correctif aux programmes KDE, sauf s'ils proviennent "
"des auteurs de l'amont ou soumis à l'amont dans l'espoir qu'ils soient "
"fusionnés au plus tôt, ou si nous avons consulté le problème avec les "
"auteurs de l'amont."

#: ../ubuntu-packaging-guide/kde.rst:22
msgid ""
"Kubuntu does not change the branding of packages except where upstream "
"expects this (such as the top left logo of the Kickoff menu) or to simplify "
"(such as removing splash screens)."
msgstr ""

#: ../ubuntu-packaging-guide/kde.rst:27
#: ../ubuntu-packaging-guide/python-packaging.rst:31
msgid "debian/rules"
msgstr ""

#: ../ubuntu-packaging-guide/kde.rst:29
msgid ""
"Debian packages include some additions to the basic Debhelper usage. These "
"are kept in the ``pkg-kde-tools`` package."
msgstr ""
"Les paquets Debian comprennent des ajouts à l'utilisation basique de "
"Debhelper. Ceux-ci sont conservés dans le paquet ``pkg-kde-tools``."

#: ../ubuntu-packaging-guide/kde.rst:32
msgid ""
"Packages which use Debhelper 7 should add the ``--with=kde`` option. This "
"will ensure the correct build flags are used and add options such as "
"handling kdeinit stubs and translations::"
msgstr ""

#: ../ubuntu-packaging-guide/kde.rst:39
msgid ""
"Some newer KDE packages use the ``dhmk`` system, an alternative to ``dh`` "
"made by the Debian Qt/KDE team.  You can read about it in /usr/share/pkg-kde-"
"tools/qt-kde-team/2/README.  Packages using this will ``include "
"/usr/share/pkg-kde-tools/qt-kde-team/2/debian-qt-kde.mk`` instead of running "
"``dh``."
msgstr ""
"Quelques récents paquets KDE utilisent le système ``dhmk``, une alternative "
"à ``dh`` créé par l'équipe Debian Qt /KDE. Vous pouvez lire à ce sujet "
"/usr/share/pkg-kde-tools/qt-kde-team/2/README. Les paquets utilisant ce "
"système ``inclueront /usr/share/pkg-kde-tools/qt-kde-team/2/debian-qt-"
"kde.mk`` au lieu d'éxecuter ``dh``."

#: ../ubuntu-packaging-guide/kde.rst:47
msgid "Translations"
msgstr "Traductions"

#: ../ubuntu-packaging-guide/kde.rst:49
msgid ""
"Packages in main have their translations imported into Launchpad and "
"exported from Launchpad into Ubuntu's language-packs."
msgstr ""
"Les traductions des paquets principaux sont importées dans Launchpad et "
"exportés de Launchpad vers Ubuntu dans les paquets de langues."

#: ../ubuntu-packaging-guide/kde.rst:52
msgid ""
"So any KDE package in main must generate translation templates, include or "
"make available upstream translations and handle ``.desktop`` file "
"translations."
msgstr ""
"Ainsi, tout paquet KDE principal doit générer des modèles de traduction, "
"inclure ou mettre à disposition les traductions de l'amont et gérer les "
"traductions du fichier ``.desktop``."

#: ../ubuntu-packaging-guide/kde.rst:56
msgid ""
"To generate translation templates the package must include a ``Messages.sh`` "
"file; complain to the upstream if it does not.  You can check it works by "
"running ``extract-messages.sh`` which should produce one or more ``.pot`` "
"files in ``po/``.  This will be done automatically during build if you use "
"the ``--with=kde`` option to ``dh``."
msgstr ""
"Pour générer des modèles de traduction le paquet doit comprendre un fichier "
"``Messages.sh`` ; demandez à l'amont, s'il n'existe pas. Vous pouvez "
"vérifier qu'il fonctionne en exécutant ``extract-messages.sh`` qui devrait "
"produire un ou plusieurs fichiers ``.pot``dans le dossier ``po/``. Cela se "
"fera automatiquement lors de la compilation si vous utilisez l'option ``--"
"with=kde`` de ``dh``."

#: ../ubuntu-packaging-guide/kde.rst:63
msgid ""
"Upstream will usually have also put the translation ``.po`` files into the "
"``po/`` directory.  If they do not, check if they are in separate upstream "
"language packs such as the KDE SC language packs.  If they are in separate "
"language packs Launchpad will need to associate these together manually, "
"contact `dpm`_ to do this."
msgstr ""
"L'amont met généralement les fichiers ``.po`` de traduction dans le "
"répertoire ``po/``. S'ils n'y sont pas, vérifiez s'ils sont dans des paquets "
"de langue séparés de l'amont tels que les paquets de langue KDE SC. S'ils "
"sont dans des paquets de langue séparés, Launchpad devra les associer "
"manuellement, contactez `dpm`_ pour cela."

#: ../ubuntu-packaging-guide/kde.rst:69
msgid ""
"If a package is moved from universe to main it will need to be re-uploaded "
"before the translations get imported into Launchpad."
msgstr ""

#: ../ubuntu-packaging-guide/kde.rst:72
msgid ""
"``.desktop`` files also need translations.  We patch KDELibs to read "
"translations out of ``.po`` files which are pointed to by a line ``X-Ubuntu-"
"Gettext-Domain=`` added to ``.desktop`` files at package build time.  A .pot "
"file for each package is be generated at build time and .po files need to be "
"downloaded from upstream and included in the package or in our language "
"packs.  The list of .po files to be downloaded from KDE's repositories is in "
"``/usr/lib/kubuntu-desktop-i18n/desktop-template-list``."
msgstr ""
"Les fichiers ``.desktop`` ont également besoin de traductions. Nous "
"corrigeons KDElibs pour lire les traductions depuis les fichiers ``.po`` "
"désignés par une ligne ``X-Ubuntu-Gettext-Domain=`` ajoutée aux fichiers "
"``.desktop`` au moment de la compilation du paquet. Un fichier .pot est "
"généré pour chaque paquet lors de la compilation et les fichiers .po sont "
"téléchargés depuis l'amont et inclus dans le paquet ou dans nos paquets de "
"langue. La liste des fichiers .po à télécharger depuis les dépôts KDE se "
"trouve dans ``/usr/lib/kubuntu-desktop-i18n/desktop-template-list``."

#: ../ubuntu-packaging-guide/kde.rst:82
msgid "Library Symbols"
msgstr "Bibliothèque de symboles"

#: ../ubuntu-packaging-guide/kde.rst:84
msgid ""
"Library symbols are tracked in ``.symbols`` files to ensure none go missing "
"for new releases.  KDE uses C++ libraries which act a little differently "
"compared to C libraries.  Debian's Qt/KDE Team have scripts to handle this. "
"See `Working with symbols files`_ for how to create and keep these files up "
"to date."
msgstr ""
"La bibliothèque de symboles est suivie par les fichiers ``.symbols`` pour "
"vous assurer qu'aucun ne sera porté disparu pour les nouvelles versions. KDE "
"utilise des bibliothèques C++ qui agissent un peu différemment des "
"bibliothèques C. L'équipe Debian Qt/KDE possède des scripts pour gérer cela. "
"Voir `Travailler avec les fichiers de symboles`_ pour savoir comment créer "
"et maintenir ces fichiers à jour."

#: ../ubuntu-packaging-guide/libraries.rst:3
msgid "Shared Libraries"
msgstr "Bibliothèques partagées"

#: ../ubuntu-packaging-guide/libraries.rst:5
msgid ""
"Shared libraries are compiled code which is intended to be shared among "
"several different programs.  They are distributed as ``.so`` files in "
"``/usr/lib/``."
msgstr ""
"Les bibliothèques partagées sont du code compilé destiné à être partagé "
"entre plusieurs différents programmes. Ils sont distribués en tant que "
"fichiers ``.so`` dans ``/usr/lib/``."

#: ../ubuntu-packaging-guide/libraries.rst:9
msgid ""
"A library exports symbols which are the compiled versions of functions, "
"classes and variables.  A library has a name called an SONAME which includes "
"a version number.  This SONAME version does not necessarily match the public "
"release version number.  A program gets compiled against a given SONAME "
"version of the library.  If any of the symbols is removed or changes then "
"the version number needs to be changed which forces any packages using that "
"library to be recompiled against the new version.  Version numbers are "
"usually set by upstream and we follow them in our binary package names "
"called an ABI number, but sometimes upstreams do not use sensible version "
"numbers and packagers have to keep separate version numbers."
msgstr ""
"Une bibliothèque exporte des symboles qui sont les versions compilées de "
"fonctions, de classes et de variables. Une bibliothèque possède ce qui "
"s'appelle un SONAME comprenant un numéro de version. Cette version de SONAME "
"ne correspond pas nécessairement au numéro de version publique. Un programme "
"est compilé avec une version SONAME donnée de la bibliothèque. Si l'un des "
"symboles est retiré ou modifié, alors le numéro de version doit être changé, "
"ce qui oblige la recompilation de tous les paquets utilisant cette "
"bibliothèque avec la nouvelle version. Les numéros de version sont "
"généralement fixés par l'amont et nous les suivons dans nos noms de paquets "
"binaires à l'aide d'un nombre ABI, mais parfois les amonts n'utilisent pas "
"de numéros logiques de version et les empaqueteurs doivent conserver des "
"numéros de version séparés."

#: ../ubuntu-packaging-guide/libraries.rst:21
msgid ""
"Libraries are usually distributed by upstream as standalone releases. "
"Sometimes they are distributed as part of a program.  In this case they can "
"be included in the binary package along with the program (this is called "
"bundling) if you do not expect any other programs to use the library, more "
"often they should be split out into separate binary packages."
msgstr ""
"Les bibliothèques sont généralement distribuées par l'amont sous forme de "
"versions autonomes. Parfois, elles sont distribuées comme partie d'un "
"programme. Dans ce cas, elles peuvent être incluses dans le paquet binaire "
"avec le programme (c'est ce qu'on appelle le regroupement) lorsqu'il n'est "
"pas prévu que d'autres programmes utilisent la bibliothèque. Le plus "
"souvent, elles sont divisées en plusieurs paquets binaires séparés."

#: ../ubuntu-packaging-guide/libraries.rst:27
msgid ""
"The libraries themselves are put into a binary package named ``libfoo1`` "
"where ``foo`` is the name of the library and ``1`` is the version from the "
"SONAME. Development files from the package, such as header files, needed to "
"compile programs against the library are put into a package called ``libfoo-"
"dev``."
msgstr ""
"Les bibliothèques elles-mêmes sont mises dans un paquet binaire nommé "
"``libfoo1`` où ``foo`` est le nom de la bibliothèque et ``1`` la version de "
"SONAME. Les fichiers de développement issus du paquet, tels que les fichiers "
"d'en-tête, nécessaires pour compiler des programmes avec la bibliothèque "
"sont placés dans un paquet appelé ``libfoo-dev``."

#: ../ubuntu-packaging-guide/libraries.rst:34
msgid "An Example"
msgstr "Un exemple"

#: ../ubuntu-packaging-guide/libraries.rst:36
msgid "We will use libnova as an example::"
msgstr "Nous allons utiliser libnova comme exemple ::"

#: ../ubuntu-packaging-guide/libraries.rst:41
msgid "To find the SONAME of the library run::"
msgstr "Pour trouver le SONAME de la bibliothèque, lancez ::"

#: ../ubuntu-packaging-guide/libraries.rst:45
msgid ""
"The SONAME is ``libnova-0.12.so.2``, which matches the file name (usually "
"the case but not always). Here upstream has put the upstream version number "
"as part of the SONAME and given it an ABI version of ``2``.  Library package "
"names should follow the SONAME of the library they contain. The library "
"binary package is called ``libnova-0.12-2`` where ``libnova-0.12`` is the "
"name of the library and ``2`` is our ABI number."
msgstr ""
"Le SONAME est ``libnova-0.12.so.2``, qui correspond au nom du fichier "
"(généralement c'est le cas, mais pas toujours). Ici, l'amont a mis le numéro "
"de version comme partie du SONAME et lui a donné ``2`` comme version d'ABI. "
"Les noms de paquets de bibliothèque devraient suivre le SONAME de la "
"bibliothèque les contenant. Le paquet binaire de bibliothèque s'appelle "
"``libnova-0.12-2``, où ``libnova-0.12`` est le nom de la bibliothèque et "
"``2`` est notre ABI."

#: ../ubuntu-packaging-guide/libraries.rst:52
msgid ""
"If upstream makes incompatible changes to their library they will have to "
"reversion their SONAME and we will have to rename our library.  Any other "
"packages using our library package will need to recompiled against the new "
"version, this is called a transition and can take some effort. Hopefully our "
"ABI number will continue to match upstream's SONAME but sometimes they "
"introduce incompatibilities without changing their version number and we "
"will need to change ours."
msgstr ""
"Si l'amont apporte des modifications incompatibles avec leur bibliothèque, "
"il devra revoir la version de SONAME et nous devrons renommer notre "
"bibliothèque. Tous les autres paquets utilisant notre paquet de  "
"bibliothèque devront être recompilés à la nouvelle version, c'est ce qu'on "
"appelle une transition et peut demander un certain travail. Heureusement, "
"notre nombre ABI continuera à correspondre au SONAME des amonts, mais "
"parfois ils introduisent des incompatibilités sans changer leurs numéros de "
"version et nous devrons changer les nôtres."

#: ../ubuntu-packaging-guide/libraries.rst:60
msgid ""
"Looking in debian/libnova-0.12-2.install we see it includes two files::"
msgstr ""
"En regardant dans debian/libnova-0.12-2.install, nous voyons qu'il comprend "
"deux fichiers ::"

#: ../ubuntu-packaging-guide/libraries.rst:65
msgid ""
"The last one is the actual library, complete with minor and point version "
"number.  The first one is a symlink which points to the actual library.  The "
"symlink is what programs using the library will look for, the running "
"programs do not care about the minor version number."
msgstr ""
"Le dernier est la bibliothèque réelle, se terminant par un numéro de version "
"mineur et un point. Le premier est un lien symbolique pointant vers la "
"bibliothèque réelle. Le lien symbolique est ce que les programmes utilisant "
"la bibliothèque rechercheront, les programmes en cours d'exécution ne se "
"souciant pas du numéro de version mineur."

#: ../ubuntu-packaging-guide/libraries.rst:70
msgid ""
"``libnova-dev.install`` includes all the files needed to compile a program "
"with this library.  Header files, a config binary, the ``.la`` libtool file "
"and ``libnova.so`` which is another symlink pointing at the library, "
"programs compiling against the library do not care about the major version "
"number (although the binary they compile into will)."
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:76
msgid ""
"``.la`` libtool files are needed on some non-Linux systems with poor library "
"support but usually cause more problems than they solve on Debian systems.  "
"It is a current `Debian goal to remove .la files`_ and we should help with "
"this."
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:82
msgid "Static Libraries"
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:84
msgid ""
"The -dev package also ships ``usr/lib/libnova.a``.  This is a static "
"library, an alternative to the shared library.  Any program compiled against "
"the static library will include the code directory into itself.  This gets "
"round worrying about binary compatibility of the library.  However it also "
"means that any bugs, including security issues, will not be updated along "
"with the library until the program is recompiled.  For this reason programs "
"using static libraries are discouraged."
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:94
msgid "Symbol Files"
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:96
msgid ""
"When a package builds against a library the ``shlibs`` mechanism will add a "
"package dependency on that library.  This is why most programs will have "
"``Depends: ${shlibs:Depends}`` in ``debian/control``.  That gets replaced "
"with the library dependencies at build time.  However shlibs can only make "
"it depend on the major ABI version number, ``2`` in our libnova example, so "
"if new symbols get added in libnova 2.1 a program using these symbols could "
"still be installed against libnova ABI 2.0 which would then crash."
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:104
msgid ""
"To make the library dependencies more precise we keep ``.symbols`` files "
"that list all the symbols in a library and the version they appeared in."
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:107
msgid ""
"libnova has no symbols file so we can create one.  Start by compiling the "
"package::"
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:112
msgid ""
"The ``-nc`` will cause it to finish at the end of compilation without "
"removing the built files.  Change to the build and run ``dpkg-gensymbols`` "
"for the library package::"
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:119
msgid "This makes a diff file which you can self apply::"
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:123
msgid ""
"Which will create a file named similar to ``dpkg-gensymbolsnY_WWI`` that "
"lists all the symbols.  It also lists the current package version.  We can "
"remove the packaging version from that listed in the symbols file because "
"new symbols are not generally added by new packaging versions, but by the "
"upstream developers::"
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:130
msgid "Now move the file into its location, commit and do a test build::"
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:138
msgid ""
"If it successfully compiles the symbols file is correct.  With the next "
"upstream version of libnova you would run dpkg-gensymbols again and it will "
"give a diff to update the symbols file."
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:143
msgid "C++ Library Symbols Files"
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:145
msgid ""
"C++ has even more exacting standards of binary compatibility than C.  The "
"Debian Qt/KDE Team maintain some scripts to handle this, see their `Working "
"with symbols files`_ page for how to use them."
msgstr ""

#: ../ubuntu-packaging-guide/libraries.rst:152
msgid ""
"Junichi Uekawa's `Debian Library Packaging Guide`_ goes into this topic in "
"more detail."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:3
msgid "Packaging New Software"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:5
msgid ""
"While there are thousands of packages in the Ubuntu archive, there are still "
"a lot nobody has gotten to yet. If there is an exciting new piece of "
"software that you feel needs wider exposure, maybe you want to try your hand "
"at creating a package for Ubuntu or a PPA_. This guide will take you through "
"the steps of packaging new software."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:11
msgid ""
"You will want to read the :doc:`Getting Set Up<./getting-set-up>` article "
"first in order to prepare your development environment."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:15
msgid "Checking the Program"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:17
msgid ""
"The first stage in packaging is to get the released tar from upstream (we "
"call the authors of applications \"upstream\") and check that it compiles "
"and runs."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:20
msgid ""
"This guide will take you through packaging a simple application called GNU "
"Hello which has been posted on GNU.org_."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:23
msgid ""
"If you don't have the build tools lets make sure we have them first.  Also "
"if you don't have the required dependencies lets install those as well."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:26
msgid "Install build tools::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:30
msgid "Download main package::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:34
msgid "Now uncompress main package::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:39
msgid ""
"This application uses the autoconf build system so we want to run "
"``./configure`` to prepare for compilation."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:42
msgid ""
"This will check for the required build dependencies. As ``hello`` is a "
"simple example, ``build-essential`` should provide everything we need. For "
"more complex programs, the command will fail if you do not have the needed "
"libraries and development files. Install the needed packages and repeat "
"until the command runs successfully.::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:50
msgid "Now you can compile the source::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:54
msgid ""
"If compilation completes successfully you can install and run the program::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:60
msgid "Starting a Package"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:62
msgid ""
"``bzr-builddeb`` includes a plugin to create a new package from a template. "
"The plugin is a wrapper around the ``dh_make`` command. You should already "
"have these if you installed ``packaging-dev``. Run the command providing the "
"package name, version number, and path to the upstream tarball::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:71
msgid ""
"When it asks what type of package type ``s`` for single binary. This will "
"import the code into a branch and add the ``debian/`` packaging directory.  "
"Have a look at the contents.  Most of the files it adds are only needed for "
"specialist packages (such as Emacs modules) so you can start by removing the "
"optional example files::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:80
msgid "You should now customise each of the files."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:82
msgid ""
"In ``debian/changelog`` change the version number to an Ubuntu version: "
"``2.7-0ubuntu1`` (upstream version 2.7, Debian version 0, Ubuntu version 1). "
" Also change ``unstable`` to the current development Ubuntu release such as "
"``precise``."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:87
msgid ""
"Much of the package building work is done by a series of scripts called "
"``debhelper``.  The exact behaviour of ``debhelper`` changes with new major "
"versions, the compat file instructs ``debhelper`` which version to act as.  "
"You will generally want to set this to the most recent version which is "
"``8``."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:93
msgid ""
"``control`` contains all the metadata of the package.  The first paragraph "
"describes the source package. The second and following paragraphs describe "
"the binary packages to be built.  We will need to add the packages needed to "
"compile the application to ``Build-Depends:``. For ``hello``, make sure that "
"it includes at least::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:101
msgid ""
"You will also need to fill in a description of the program in the "
"``Description:`` field."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:104
msgid ""
"``copyright`` needs to be filled in to follow the licence of the upstream "
"source.  According to the hello/COPYING file this is GNU GPL 3 or later."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:107
msgid ""
"``docs`` contains any upstream documentation files you think should be "
"included in the final package."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:110
msgid ""
"``README.source`` and ``README.Debian`` are only needed if your package has "
"any non-standard features, we don't so you can delete them."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:113
msgid ""
"``source/format`` can be left as is, this describes the version format of "
"the source package and should be ``3.0 (quilt)``."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:116
msgid ""
"``rules`` is the most complex file.  This is a Makefile which compiles the "
"code and turns it into a binary package.  Fortunately most of the work is "
"automatically done these days by ``debhelper 7`` so the universal ``%`` "
"Makefile target just runs the ``dh`` script which will run everything needed."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:121
msgid ""
"All of these file are explained in more detail in the :doc:`overview of the "
"debian directory<./debian-dir-overview>` article."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:124
msgid "Finally commit the code to your packaging branch::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:129
#: ../ubuntu-packaging-guide/udd-working.rst:69
msgid "Building the package"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:131
msgid ""
"Now we need to check that our packaging successfully compiles the package "
"and builds the .deb binary package::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:137
msgid ""
"``bzr builddeb`` is a command to build the package in its current location. "
"The ``-us -uc`` tell it there is no need to GPG sign the package.  The "
"result will be placed in ``..``."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:141
msgid "You can view the contents of the package with::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:145
msgid "Install the package and check it works::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:150
msgid "Next Steps"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:152
msgid ""
"Even if it builds the .deb binary package, your packaging may have bugs.  "
"Many errors can be automatically detected by our tool ``lintian`` which can "
"be run on both the source .dsc metadata file and the .deb binary package::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:160
msgid ""
"A description of each of the problems it reports can be found on the "
"`lintian website`_."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:163
msgid ""
"After making a fix to the packaging you can rebuild using ``-nc`` \"no "
"clean\" without having to build from scratch::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:168
msgid ""
"Having checked that the package builds locally you should ensure it builds "
"on a clean system using ``pbuilder``. Since we are going to upload to a PPA "
"(Personal Package Archive) shortly, this upload will need to be *signed* to "
"allow Launchpad to verify that the upload comes from you (you can tell the "
"upload will be signed because the ``-us`` and ``-uc`` flags are not passed "
"to ``bzr builddeb`` like they were before). For signing to work you need to "
"have set up GPG. If you haven't set up ``pbuilder-dist`` or GPG yet, "
":doc:`do so now<./getting-set-up>`::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:181
msgid ""
"When you are happy with your package you will want others to review it.  You "
"can upload the branch to Launchpad for review::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:186
msgid ""
"Uploading it to a PPA will ensure it builds and give an easy way for you and "
"others to test the binary packages.  You will need to set up a PPA in "
"Launchpad and then upload with ``dput``::"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:192
msgid "See :doc:`uploading<./udd-uploading>` for more information."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:194
msgid ""
"You can ask for reviews in ``#ubuntu-motu`` IRC channel, or on the `MOTU "
"mailing list`_.  There might also be a more specific team you could ask such "
"as the GNU team for more specific questions."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:199
msgid "Submitting for inclusion"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:201
msgid ""
"There are a number of paths that a package can take to enter Ubuntu. In most "
"cases, going through Debian first can be the best path. This way ensures "
"that your package will reach the largest number of users as it will be "
"available in not just Debian and Ubuntu but all of their derivatives as "
"well. Here are some useful links for submitting new packages to Debian:"
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:208
msgid ""
"`Debian Mentors FAQ`_ - debian-mentors is for the mentoring of new and "
"prospective Debian Developers. It is where you can find a sponsor to upload "
"your package to the archive."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:212
msgid ""
"`Work-Needing and Prospective Packages`_ - Information on how to file "
"\"Intent to Package\" and \"Request for Package\" bugs as well as list of "
"open ITPs and RFPs."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:216
msgid ""
"`Debian Developer's Reference, 5.1. New packages`_ - The entire document is "
"invaluable for both Ubuntu and Debian packagers. This section documents "
"processes for submitting new packages."
msgstr ""

#: ../ubuntu-packaging-guide/packaging-new-software.rst:220
msgid ""
"In some cases, it might make sense to go directly into Ubuntu first. For "
"instance, Debian might be in a freeze making it unlikely that your package "
"will make it into Ubuntu in time for the next release. This process is "
"documented on the `\"New Packages\"`_ section of the Ubuntu wiki."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:3
msgid "Patches to Packages"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:5
msgid ""
"Sometimes, Ubuntu package maintainers have to change the upstream source "
"code in order to make it work properly on Ubuntu.  Examples include, patches "
"to upstream that haven't yet made it into a released version, or changes to "
"the upstream's build system needed only for building it on Ubuntu.  We could "
"change the upstream source code directly, but doing this makes it more "
"difficult to remove the patches later when upstream has incorporated them, "
"or extract the change to submit to the upstream project.  Instead, we keep "
"these changes as separate patches, in the form of diff files."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:14
msgid ""
"There are a number of different ways of handling patches in Debian packages, "
"fortunately we are standardizing on one system, `Quilt`_, which is now used "
"by most packages."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:18
msgid "Let's look at an example package, ``kamoso`` in Natty::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:22
msgid ""
"The patches are kept in ``debian/patches``.  This package has one patch "
"``kubuntu_01_fix_qmax_on_armel.diff`` to fix a compile failure on ARM.  The "
"patch has been given a name to describe what it does, a number to keep the "
"patches in order (two patches can overlap if they change the same file) and "
"in this case the Kubuntu team adds their own prefix to show the patch comes "
"from them rather than from Debian."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:29
msgid "The order of patches to apply is kept in ``debian/patches/series``."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:32
msgid "Patches with Quilt"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:34
msgid ""
"Before working with Quilt you need to tell it where to find the patches.  "
"Add this to your ``~/.bashrc``::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:39
msgid "And source the file to apply the new export::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:43
msgid ""
"By default all patches are applied already to UDD checkouts or downloaded "
"packages.  You can check this with::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:49
msgid "If you wanted to remove the patch you would run ``pop``::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:57
msgid "And to apply a patch you use ``push``::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:67
msgid "Adding a New Patch"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:69
msgid ""
"To add a new patch you need to tell Quilt to create a new patch, tell it "
"which files that patch should change, edit the files then refresh the patch::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:81
msgid ""
"The ``quilt add`` step is important, if you forget it the files will not end "
"up in the patch."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:84
msgid ""
"The change will now be in "
"``debian/patches/kubuntu_02_program_description.diff`` and the ``series`` "
"file will have had the new patch added to it.  You should add the new file "
"to the packaging::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:94
msgid ""
"Quilt keeps its metadata in the ``.pc/`` directory, so currently you need to "
"add that to the packaging too.  This should be improved in future."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:97
msgid ""
"As a general rule you should be careful adding patches to programs unless "
"they come from upstream, there is often a good reason why that change has "
"not already been made.  The above example changes a user interface string "
"for example, so it would break all translations.  If in doubt, do ask the "
"upstream author before adding a patch."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:105
msgid "Patch Headers"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:107
msgid ""
"We recommend that you tag every patch with DEP-3_ headers by putting them at "
"the top of patch file. Here are some headers that you can use:"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:110
msgid "Description of what the patch does."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:111
msgid "Who wrote the patch (i.e. \"Jane Doe <packager@example.com>\")."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:112
msgid ""
"Where this patch comes from (i.e. \"upstream\"), when *Author* is not "
"present."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:114
msgid ""
"A link to Launchpad bug, a short form is preferred (like "
"*https://bugs.launchpad.net/bugs/XXXXXXX*). If there are also bugs in "
"upstream or Debian bugtrackers, add *Bug* or *Bug-Debian* headers."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:118
msgid ""
"Whether the patch was forwarded upstream. Either \"yes\", \"no\" or \"not-"
"needed\"."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:120
msgid "Date of the last revision (in form \"YYYY-MM-DD\")."
msgstr "Date de la dernière révision (au format \\\"AAAA-MM-JJ\\\")."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:124
msgid "Upgrading to New Upstream Versions"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:126
msgid ""
"To upgrade to the new version, you can use ``bzr merge-upstream`` command::"
msgstr ""
"Pour mettre à niveau vers la nouvelle version, vous pouvez utiliser la "
"commande ``bzr merge-upstream`` ::"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:130
msgid ""
"When you run this command, all patches will be unapplied, because they can "
"become out of date. They might need to be refreshed to match the new "
"upstream source or they might need to be removed altogether. To check for "
"problems, apply the patches one at a time::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:142
msgid ""
"If it can be reverse-applied this means the patch has been applied already "
"by upstream, so we can delete the patch::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:148
msgid "Then carry on::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:153
msgid ""
"It is a good idea to run refresh, this will update the patch relative to the "
"changed upstream source::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:159
msgid "Then commit as usual::"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:165
msgid "Making A Package Use Quilt"
msgstr "Réaliser un Paquet avec Quilt"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:167
msgid ""
"Modern packages use Quilt by default, it is built into the packaging format. "
" Check in ``debian/source/format`` to ensure it says ``3.0 (quilt)``."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:171
msgid ""
"Older packages using source format 1.0 will need to explicitly use Quilt, "
"usually by including a makefile into ``debian/rules``."
msgstr ""
"Les paquets plus anciens utilisant le format source 1.0 vous obligent à "
"utiliser Quilt explicitement, généralement en incluant un fichier makefile "
"dans ``debian/rules``."

#: ../ubuntu-packaging-guide/patches-to-packages.rst:176
msgid "Configuring Quilt"
msgstr "Configurer Quilt"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:178
msgid ""
"You can use ``~/.quiltrc`` file to configure quilt. Here are some options "
"that can be useful for using quilt with debian/packages:"
msgstr ""
"Vous pouvez utiliser le fichier ``~/.quiltrc`` pour configurer quilt. Voici "
"quelques options pouvant s'avérer utiles pour l'utilisation de quilt avec "
"debian/packages :"

#: ../ubuntu-packaging-guide/patches-to-packages.rst:192
msgid "Other Patch Systems"
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:194
msgid ""
"Other patch systems used by packages include ``dpatch`` and ``cdbs simple-"
"patchsys``, these work similarly to Quilt by keeping patches in "
"``debian/patches`` but have different commands to apply, un-apply or create "
"patches. You can find out which patch system is used by a package by using "
"the ``what-patch`` command (from the ``ubuntu-dev-tools`` package). You can "
"use ``edit-patch``, shown in :ref:`previous chapters <working-on-a-fix>`, as "
"a reliable way to work with all systems."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:202
msgid ""
"In even older packages changes will be included directly to sources and kept "
"in the ``diff.gz`` source file.  This makes it hard to upgrade to new "
"upstream versions or differentiate between patches and is best avoided."
msgstr ""

#: ../ubuntu-packaging-guide/patches-to-packages.rst:206
msgid ""
"Do not change a package's patch system without discussing it with the Debian "
"maintainer or relevant Ubuntu team.  If there is no existing patch system "
"then feel free to add Quilt."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:3
msgid "Packaging Python modules and applications"
msgstr "Empaquetage de modules et d'applications Python"

#: ../ubuntu-packaging-guide/python-packaging.rst:5
msgid ""
"Our packaging follows Debian’s `Python policy`_. We will use the `python-"
"markdown`_ package as an example, which can be downloaded from `PyPI`_. You "
"can look at its packaging at its `Subversion repository`_."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:7
msgid "There are two types of Python packages — *modules* and *apps*."
msgstr "Il existe deux types de paquets Python — *modules* et *apps*."

#: ../ubuntu-packaging-guide/python-packaging.rst:9
msgid ""
"At the time of writing, Ubuntu has two incompatible versions of Python — "
"*2.x* and *3.x*. ``/usr/bin/python`` is a symbolic link to a default Python "
"2.x version, and ``/usr/bin/python3`` — to a default Python 3.x version. "
"Python modules should be built against all supported Python versions."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:11
msgid ""
"If you are going to package a new Python module, you might find the "
"``py2dsc`` tool useful (available in `python-stdeb`_ package)."
msgstr ""
"Si vous vous apprêtez à empaqueter un nouveau module Python, vous pourriez "
"trouver l'outil ``py2dsc`` très utile (disponible dans le paquet `python-"
"stdeb`_)."

#: ../ubuntu-packaging-guide/python-packaging.rst:14
msgid "debian/control"
msgstr "debian/control"

#: ../ubuntu-packaging-guide/python-packaging.rst:16
msgid ""
"Python 2.x and 3.x versions of the package should be in separate binary "
"packages. Names should have ``python{,3}-modulename`` format (like: "
"``python3-dbus.mainloop.qt``). Here, we will use ``python-markdown`` and "
"``python3-markdown`` for module packages and ``python-markdown-doc`` for the "
"documentation package."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:18
msgid "Things in ``debian/control`` that are specific for a Python package:"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:20
msgid ""
"The section of module packages should be ``python``, and ``doc`` for the "
"documentation package. For an application, a single binary package will be "
"enough."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:21
msgid ""
"We should add build dependencies on ``python-all (>= 2.6.6-3~)`` and "
"``python3-all (>= 3.1.2-7~)`` to make sure Python helpers are available (see "
"the next section for details)."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:22
msgid ""
"It’s recommended to add ``X-Python-Version`` and ``X-Python3-Version`` "
"fields — see “`Specifying Supported Versions`_” section of the Policy for "
"details. For example::"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:27
msgid ""
"If your package works only with Python 2.x or 3.x, build depend only on one "
"``-all`` package and use only one ``-Version`` field."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:28
msgid ""
"Module packages should have ``{python:Depends}`` and ``{python3:Depends}`` "
"substitution variables (respectively) in their dependency lists."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:33
msgid ""
"The recommended helpers for python modules are ``dh_python2`` and "
"``dh_python3``. Unfortunately, ``debhelper`` doesn’t yet build Python 3.x "
"packages automatically (see `bug 597105`_ in Debian BTS), so we’ll need to "
"do that manually in override sections (skip this if your package doesn’t "
"support Python 3.x)."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:35
msgid "Here’s our ``debian/rules`` file (with annotations):"
msgstr "Voici notre fichier ``debian/rules`` (avec annotations) :"

#: ../ubuntu-packaging-guide/python-packaging.rst:70
msgid ""
"It is also a good practice to run tests during the build, if they are "
"shipped by upstream. Usually tests can be invoked using ``setup.py test`` or "
"``setup.py check``."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:73
msgid "debian/\\*.install"
msgstr "debian/\\*.install"

#: ../ubuntu-packaging-guide/python-packaging.rst:75
msgid ""
"Python 2.x modules are installed into ``/usr/share/pyshared/`` directory, "
"and symbolic links are created in ``/usr/lib/python2.x/dist-packages/`` for "
"every interpreter version, while Python 3.x ones are all installed into "
"``/usr/lib/python3/dist-packages/``."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:77
msgid ""
"If your package is an application and has private Python modules, they "
"should be installed in ``/usr/share/module``, or ``/usr/lib/module`` if the "
"modules are architecture-dependent (e.g. extensions) (see “`Programs "
"Shipping Private Modules`_” section of the Policy)."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:79
msgid ""
"So, our ``python-markdown.install`` file will look like this (we’ll also "
"want to install a ``markdown_py`` executable)::"
msgstr ""
"Ainsi, notre fichier ``python-markdown.install`` devrait ressembler à ceci "
"(nous voulons aussi installer un ``markdown_py`` exécutable) ::"

#: ../ubuntu-packaging-guide/python-packaging.rst:84
msgid "and ``python3-markdown.install`` will only have one line::"
msgstr "et ``python3-markdown.install`` comportera une seule ligne ::"

#: ../ubuntu-packaging-guide/python-packaging.rst:89
msgid "The ``-doc`` package"
msgstr "Le paquet ``-doc``"

#: ../ubuntu-packaging-guide/python-packaging.rst:91
msgid ""
"The tool most commonly used for building Python docs is `Sphinx`_. To add "
"Sphinx documentation to your package (using ``dh_sphinxdoc`` helper), you "
"should:"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:93
msgid ""
"Add a build-dependency on ``python-sphinx`` or ``python3-sphinx`` (depending "
"on what Python version do you want to use);"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:94
msgid "Append ``sphinxdoc`` to the ``dh --with`` line;"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:95
msgid ""
"Run ``setup.py build_sphinx`` in ``override_dh_auto_build`` (sometimes not "
"needed);"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:96
msgid ""
"Add ``{sphinxdoc:Depends}`` to the dependency list of your ``-doc`` package;"
msgstr ""
"Ajouter ``{sphinxdoc:Depends}`` à la liste des dépendances de votre paquet "
"``-doc``;"

#: ../ubuntu-packaging-guide/python-packaging.rst:97
msgid ""
"Add the path of the built docs directory (usually ``build/sphinx/html``) to "
"your ``.docs`` file."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:99
msgid ""
"In our case, the docs are automatically built in ``build/docs/`` directory "
"when we run ``setup.py build``, so we can simply put this in the ``python-"
"markdown-doc.docs`` file::"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:103
msgid ""
"Because docs also contain source ``.txt`` files, we’ll also tell "
"``dh_compress`` to not compress them — by adding this to ``debian/rules``:"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:111
msgid "Checking for packaging mistakes"
msgstr "Vérification des erreurs d'empaquetage"

#: ../ubuntu-packaging-guide/python-packaging.rst:113
msgid ""
"Along with ``lintian``, there is a special tool for checking Python packages "
"— ``lintian4py``. It is available in the `lintian4python`_ package. For "
"example, these two commands invoke both versions of ``lintian`` and check "
"source and binary packages::"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:118
msgid ""
"Here, ``-EI`` option is used to enable experimental and informational tags."
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:121
msgid "See also"
msgstr "Voir aussi"

#: ../ubuntu-packaging-guide/python-packaging.rst:123
msgid "The `Python policy`_;"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:124
msgid "`Python/Packaging`_ article on Debian wiki;"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:125
msgid ""
"`Python/LibraryStyleGuide`_ and `Python/AppStyleGuide`_ articles on Debian "
"wiki;"
msgstr ""

#: ../ubuntu-packaging-guide/python-packaging.rst:126
msgid "Debian `python-modules`_ and `python-apps`_ teams."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:3
msgid "Security and Stable Release Updates"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:6
msgid "Fixing a Security Bug in Ubuntu"
msgstr "Correction d'un bogue de sécurité dans Ubuntu"

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:11
msgid ""
"Fixing security bugs in Ubuntu is not really any different than :doc:`fixing "
"a regular bug in Ubuntu<./fixing-a-bug>`, and it is assumed that you are "
"familiar with patching normal bugs. To demonstrate where things are "
"different, we will be updating the dbus package in Ubuntu 10.04 LTS (Lucid "
"Lynx) for a security update."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:19
msgid "Obtaining the source"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:21
msgid ""
"In this example, we already know we want to fix the dbus package in Ubuntu "
"10.04 LTS (Lucid Lynx). So first you need to determine the version of the "
"package you want to download. We can use the ``rmadison`` to help with this::"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:30
msgid ""
"Typically you will want to choose the highest version for the release you "
"want to patch that is not in -proposed or -backports. Since we are updating "
"Lucid's dbus, you'll download 1.2.16-2ubuntu4.2 from lucid-updates::"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:38
msgid "Patching the source"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:39
msgid ""
"Now that we have the source package, we need to patch it to fix the "
"vulnerability. You may use whatever patch method that is appropriate for the "
"package, including :doc:`UDD techniques<./udd-intro>`, but this example will "
"use ``edit-patch`` (from the ubuntu-dev-tools package). ``edit-patch`` is "
"the easiest way to patch packages and it is basically a wrapper around every "
"other patch system you can imagine."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:46
msgid "To create your patch using ``edit-patch``::"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:51
msgid ""
"This will apply the existing patches and put the packaging in a temporary "
"directory. Now edit the files needed to fix the vulnerability.  Often "
"upstream will have provided a patch so you can apply that patch::"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:57
msgid ""
"After making the necessary changes, you just hit Ctrl-D or type exit to "
"leave the temporary shell."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:61
msgid "Formatting the changelog and patches"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:63
msgid ""
"After applying your patches you will want to update the changelog. The "
"``dch`` command is used to edit the ``debian/changelog`` file and ``edit-"
"patch`` will launch ``dch`` automatically after un-applying all the patches. "
"If you are not using ``edit-patch``, you can launch ``dch -i`` manually. "
"Unlike with regular patches, you should use the following format (note the "
"distribution name uses lucid-security since this is a security update for "
"Lucid) for security updates::"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:80
msgid ""
"Update your patch to use the appropriate patch tags. Your patch should have "
"at a minimum the Origin, Description and Bug-Ubuntu tags. For example, edit "
"debian/patches/99-fix-a-vulnerability.patch to have something like::"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:91
msgid ""
"Multiple vulnerabilities can be fixed in the same security upload; just be "
"sure to use different patches for different vulnerabilities."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:95
msgid "Test and Submit your work"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:97
msgid ""
"At this point the process is the same as for :doc:`fixing a regular bug in "
"Ubuntu<./fixing-a-bug>`. Specifically, you will want to:"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:100
msgid ""
"Build your package and verify that it compiles without error and without any "
"added compiler warnings"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:102
msgid "Upgrade to the new version of the package from the previous version"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:103
msgid ""
"Test that the new package fixes the vulnerability and does not introduce any "
"regressions"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:105
msgid ""
"Submit your work via a Launchpad merge proposal and file a Launchpad bug "
"being sure to mark the bug as a security bug and to subscribe ``ubuntu-"
"security-sponsors``"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:109
msgid ""
"If the security vulnerability is not yet public then do not file a merge "
"proposal and ensure you mark the bug as private."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:112
msgid ""
"The filed bug should include a Test Case, i.e. a comment which clearly shows "
"how to recreate the bug by running the old version then how to ensure the "
"bug no longer exists in the new version."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:116
msgid ""
"The bug report should also confirm that the issue is fixed in Ubuntu "
"versions newer than the one with the proposed fix (in the above example "
"newer than Lucid).  If the issue is not fixed in newer Ubuntu versions you "
"should prepare updates for those versions too."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:123
msgid "Stable Release Updates"
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:125
msgid ""
"We also allow updates to releases where a package has a high impact bug such "
"as a severe regression from a previous release or a bug which could cause "
"data loss.  Due to the potential for such updates to themselves introduce "
"bugs we only allow this where the change can be easily understood and "
"verified."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:130
msgid ""
"The process for Stable Release Updates is just the same as the process for "
"security bugs except you should subscribe ``ubuntu-sru`` to the bug."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:133
msgid ""
"The update will go into the ``proposed`` archive (for example ``lucid-"
"proposed``) where it will need to be checked that it fixes the problem and "
"does not introduce new problems.  After a week without reported problems it "
"can be moved to ``updates``."
msgstr ""

#: ../ubuntu-packaging-guide/security-and-stable-release-updates.rst:138
msgid "See the `Stable Release Updates wiki page`_ for more information."
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:3
msgid "Traditional Packaging"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:5
msgid ""
"The majority of this guide deals with :doc:`Ubuntu Distributed Development "
"<./udd-intro>` (UDD) which utilizes the distributed version control system "
"(DVCS) Bazaar for :ref:`retrieving package sources <branching>` and "
"submitting fixes with :ref:`merge proposals. <merge-proposal>` This article "
"will discuss what we will call traditional packaging methods for lack of a "
"better word. Before Bazaar was adopted for Ubuntu development, these were "
"the typical methods for contributing to Ubuntu."
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:13
msgid ""
"In some cases, you may need to use these tools instead of UDD. So it is good "
"to be familiar with them. Before you begin, you should already have read the "
"article :doc:`Getting Set Up. <./getting-set-up>`"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:18
#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:3
msgid "Getting the Source"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:20
msgid "In order to get a source package, you can simply run::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:24
msgid ""
"This method has some draw backs though. It downloads the version of the "
"source that is available on **your system.** You are likely running the "
"current stable release, but you want to contribute your change against the "
"package in the development release. Luckily, the ``ubuntu-dev-tools`` "
"package provides a helper script::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:32
msgid ""
"By default, the  latest version in the development release will be "
"downloaded. You can also specify a version or Ubuntu release like::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:37
msgid "to pull the source from the ``precise`` release, or::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:41
msgid ""
"to download version ``1.0-1ubuntu1`` of the package. For more information on "
"the command, see ``man pull-lp-source``."
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:44
msgid ""
"For our example, let's pretend we got a bug report saying that \"colour\" in "
"the description of ``xicc`` should be \"color,\" and we want to fix it. "
"*(Note: This is just an example of something to change and not really a "
"bug.)* To get the source, run::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:52
msgid "Creating a Debdiff"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:54
msgid ""
"A ``debdiff`` shows the difference between two Debian packages. The name of "
"the command used to generate one is also ``debdiff``. It is part of the "
"``devscripts`` package. See ``man debdiff`` for all the details. To compare "
"two source packages, pass the two ``dsc`` files as arguments::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:61
msgid ""
"To continue with our example, let's edit the ``debian/control`` and \"fix\" "
"our \"bug\"::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:67
msgid ""
"We also must adhere to the `Debian Maintainer Field Spec "
"<https://wiki.ubuntu.com/DebianMaintainerField>`_ and edit "
"``debian/control`` to replace::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:73
msgid "with::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:78
msgid ""
"You can use the ``update-maintainer`` tool (in the ``ubuntu-dev-tools`` "
"package) to do that."
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:81
msgid ""
"Remember to document your changes in ``debian/changelog`` using ``dch -i`` "
"and then we can generate a new source package::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:86
msgid "Now we can examine our changes using ``debdiff``::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:91
msgid ""
"To create a patch file that you can send to others or attach to a bug report "
"for sponsorship, run::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:98
msgid "Applying a Debdiff"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:100
msgid ""
"In order to apply a debdiff, first make sure you have the source code of the "
"version that it was created against::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:105
msgid ""
"Then in a terminal, change to the directory where the source was "
"uncompressed::"
msgstr ""

#: ../ubuntu-packaging-guide/traditional-packaging.rst:110
msgid "A debdiff is just like a normal patch file. Apply it as usual with::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:6
msgid "Source package URLs"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:8
msgid ""
"Bazaar provides some very nice shortcuts for accessing Launchpad's source "
"branches of packages in both Ubuntu and Debian."
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:11
msgid "To refer to source branches use::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:15
msgid ""
"where *package* refers to the package name you're interested in.  This URL "
"refers to the package in the current development version of Ubuntu.  To "
"refer to the branch of Tomboy in the development version, you would use::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:21
msgid ""
"To refer to the version of a source package in an older release of Ubuntu, "
"just prefix the package name with the release's code name.  E.g. to refer to "
"Tomboy's source package in Maverick_ use::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:27
msgid ""
"Since they are unique, you can also abbreviate the distro-series name::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:31
msgid ""
"You can use a similar scheme to access the source branches in Debian, "
"although there are no shortcuts for the Debian distro-series names.  To "
"access the Tomboy branch in the current development series for Debian use::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:37
msgid "and to access Tomboy in Debian Lenny_ use::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:48
msgid "Getting the source"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:50
msgid ""
"Every source package in Ubuntu has an associated source branch on Launchpad. "
"These source branches are updated automatically by Launchpad, although the "
"process is not currently foolproof."
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:54
msgid ""
"There are a couple of things that we do first in order to make the workflow "
"more efficient later.  Once you are used to the process you will learn when "
"it makes sense to skip these steps."
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:62
msgid "Creating a shared repository"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:64
msgid ""
"Say that you want to work on the Tomboy package, and you've verified that "
"the source package is named ``tomboy``.  Before actually branching the code "
"for Tomboy, create a shared repository to hold the branches for this "
"package.  The shared repository will make future work much more efficient."
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:70
msgid ""
"Do this using the `bzr init-repo` command, passing it the directory name we "
"would like to use::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:75
msgid ""
"You will see that a `tomboy` directory is created in your current working "
"area.  Change to this new directory for the rest of your work::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:82
msgid "Getting the trunk branch"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:84
msgid ""
"We use the `bzr branch` command to create a local branch of the package. "
"We'll name the target directory `tomboy.dev` just to keep things easy to "
"remember::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:90
msgid ""
"The tomboy.dev directory represents the version of Tomboy in the development "
"version of Ubuntu, and you can always ``cd`` into this directory and do a "
"`bzr pull` to get any future updates."
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:97
msgid "Ensuring the version is up to date"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:99
msgid ""
"When you do your ``bzr branch`` you will get a message telling you if the "
"packaging branch is up to date.  For example::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:107
msgid ""
"Occasionally the importer fails and packaging branches do not match what is "
"in the archive.  A message saying::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:112
msgid ""
"means the importer has failed.  You can find out why on http://package-"
"import.ubuntu.com/status/ and `file a bug on the UDD project`_ to get the "
"issue resolved."
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:118
msgid "Upstream Tar"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:120
msgid "You can get the upstream tar by running::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:124
msgid ""
"This will try a number of methods to get the upstream tar, firstly by "
"recreating it from the ``upstream-x.y`` tag in the bzr archive, then by "
"downloading from the Ubuntu archive, lastly by running ``debian/rules get-"
"orig-source``. The upstream tar will also be recreated when using bzr to "
"build the package::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:132
msgid "The `builddeb` plugin has several `configuration options`_."
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:136
msgid "Getting a branch for a particular release"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:138
msgid ""
"When you want to do something like a `stable release update`_ (SRU), or you "
"just want to examine the code in an old release, you'll want to grab the "
"branch corresponding to a particular Ubuntu release.  For example, to get "
"the Tomboy package for Maverick do::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:147
msgid "Importing a Debian source package"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:149
msgid ""
"If the package you want to work on is available in Debian but not Ubuntu, "
"it's still easy to import the code to a local bzr branch for development.  "
"Let's say you want to import the `newpackage` source package.  We'll start "
"by creating a shared repository as normal, but we also have to create a "
"working tree to which the source package will be imported (remember to cd "
"out of the `tomboy` directory created above)::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-getting-the-source.rst:162
msgid ""
"As you can see, we just need to provide the remote location of the dsc file, "
"and Bazaar will do the rest.  You've now got a Bazaar source branch."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:3
msgid "Ubuntu Distributed Development — Introduction"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:5
msgid ""
"This guide focuses on packaging using the *Ubuntu Distributed Development* "
"(UDD) method."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:8
msgid ""
"*Ubuntu Distributed Development* (UDD) is a new technique for developing "
"Ubuntu packages that uses tools, processes, and workflows similar to generic "
"distributed version control system (DVCS) based software development.  The "
"DVCS used for UDD is Bazaar_."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:14
msgid "Traditional Packaging Limitations"
msgstr "Limites de l'empaquetage traditionnel"

#: ../ubuntu-packaging-guide/udd-intro.rst:16
msgid ""
"Traditionally Ubuntu packages have been kept in tar archive files.  A "
"traditional source package is made up of the upstream source tar, a "
"\"debian\" tar (or compressed diff file for older packages) containing the "
"packaging and a .dsc meta-data file.  To see a traditional package run::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:23
msgid ""
"This will download the upstream source ``kdetoys_4.6.5.orig.tar.bz2``, the "
"packaging ``kdetoys_4.6.5-0ubuntu1.debian.tar.gz`` and the meta-data "
"``kdetoys_4.6.5-0ubuntu1~ppa1.dsc``.  Assuming you have dpkg-dev installed "
"it will extract these and give you the source package."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:28
msgid ""
"Traditional packaging would edit these files and upload.  However this gives "
"limited opportunity to collaborate with other developers, changes have to be "
"passed around as diff files with no central way to track them and two "
"developers can not make changes at the same time.  So most teams have moved "
"to putting their packaging in a revision control system.  This makes it "
"easier for several developers to work on a package together.  However there "
"is no direct connection between the revision control system and the archive "
"packages so the two must be manually kept in sync.  Since each team works in "
"its own revision control system a prospective developer must first work out "
"where that is and how to get the packaging before they can work on the "
"package."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:40
msgid "Ubuntu Distributed Development"
msgstr "Développement Distribué Ubuntu"

#: ../ubuntu-packaging-guide/udd-intro.rst:42
msgid ""
"With Ubuntu Distributed Development all packages in the Ubuntu (and Debian) "
"archive are automatically imported into Bazaar branches on our code hosting "
"site Launchpad.  Changes can be made directly to these branches in "
"incremental steps and by anyone with commit access.  Changes can also be "
"made in forked branches and merged back in with Merge Proposals when they "
"are large enough to need review or if they are by someone without direct "
"commit access."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:49
msgid ""
"UDD branches are all in a standard location, so doing a checkout is easy::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:53
msgid ""
"The merge history includes two separate branches, one for the upstream "
"source and one which adds the ``debian/`` packaging directory::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:59
msgid ""
"(This command uses *qbzr* for a GUI, run ``log`` instead of ``qlog`` for "
"console output.)"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:64
msgid ""
"This UDD branch of *kdetoys* shows the full packaging for each version "
"uploaded to Ubuntu with grey circles and the upstream source versions with "
"green circles.  Versions are tagged with either the version in Ubuntu such "
"as ``4:4.2.29-0ubuntu1`` or for the upstream branch with the upstream "
"version ``upstream-4.2.96``."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:70
msgid ""
"Many Ubuntu packages are based on the packages in Debian, UDD also imports "
"the Debian package into our branches.  In the *kdetoys* branch above the "
"Debian versions from *unstable* are from the merge with blue circles while "
"those from *Debian experimental* are from the merge with yellow circles.  "
"Debian releases are tagged with their version number, e.g., ``4:4.2.2-1``."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:76
msgid ""
"So from a UDD branch you can see the complete history of changes to the "
"package and compare any two versions.  For example, to see the changes "
"between version 4.2.2 in Debian and the 4.2.2 in Ubuntu use::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:82
msgid ""
"(This command uses *qbzr* for a GUI, run ``diff`` instead of ``qdiff`` for "
"console output.)"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:87
msgid ""
"From this we can clearly see what has changed in Ubuntu compared to Debian, "
"very handy."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:91
msgid "Bazaar"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:93
msgid ""
"UDD branches use Bazaar, a distributed revision control system intended to "
"be easy to use for those familiar with popular systems such as Subversion "
"while offering the power of Git."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:97
msgid ""
"To do packaging with UDD you will need to know the basics of how to use "
"Bazaar to manage files.  For an introduction to Bazaar see the `Bazaar Five "
"Minute Tutorial <http://doc.bazaar.canonical.com/bzr.dev/en/mini-"
"tutorial/index.html>`_ and the `Bazaar Users Guide "
"<http://doc.bazaar.canonical.com/bzr.dev/en/user-guide/index.html>`_."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:105
msgid "Limitations of UDD"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:107
msgid ""
"Ubuntu Distributed Development is a new method for working with Ubuntu "
"packages.  It currently has some notable limitations:"
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:110
msgid ""
"Doing a full branch with history can take a lot of time and network "
"resources.  You may find it quicker to do a lightweight checkout ``bzr "
"checkout --lightweight ubuntu:kdetoys`` but this will need a network access "
"for any further bzr operations."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:115
msgid ""
"Working with patches is fiddly.  Patches can be seen as a branched revision "
"control system, so we end up with RCS on top of RCS."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:118
msgid ""
"There is no way to build directly from branches.  You need to create a "
"source package and upload that."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:121
msgid ""
"Some packages have not been successfully imported into UDD branches.  Recent "
"versions of Bazaar will automatically notify you when this is the case. You "
"can also check the `status of the package importer`_ manually before working "
"on a branch."
msgstr ""

#: ../ubuntu-packaging-guide/udd-intro.rst:126
msgid ""
"All of the above are being worked on and UDD is expected to become the main "
"way to work on Ubuntu packages soon.  However currently most teams within "
"Ubuntu do not yet work with UDD branches for their  development.  However "
"because UDD branches are the same as the packages in the  archive any team "
"should be able to accept merges against them."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:3
msgid "Getting The Latest"
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:5
msgid ""
"If someone else has landed changes on a package, you will want to pull those "
"changes in your own copies of the package branches."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:10
msgid "Updating your main branch"
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:12
msgid ""
"Updating your copy of a branch that corresponds to the package in a "
"particular release is very simple, simply use `bzr pull` from the "
"appropriate directory::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:18
msgid ""
"This works wherever you have a checkout of a branch, so it will work for "
"things like branches of `maverick`, `hardy-proposed`, etc."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:23
msgid "Getting the latest in to your working branches"
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:25
msgid ""
"Once you have updated your copy of a distroseries branch, then you may want "
"to merge this in to your working branches as well, so that they are based on "
"the latest code."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:29
msgid ""
"You don't have to do this all the time though.  You can work on slightly "
"older code with no problems.  The disadvantage would come if you were "
"working on some code that someone else changed.  If you are not working on "
"the latest version then your changes may not be correct, and may even "
"produce conflicts."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:34
msgid ""
"The merge does have to be done at some point though.  The longer it is left, "
"the harder may be, so doing it regularly should keep each merge simple.  "
"Even if there are many merges the total effort would hopefully be less."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:38
msgid ""
"To merge the changes you just need to use ``bzr merge``, but you must have "
"committed your current work first::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:44
msgid ""
"Any conflicts will be reported, and you can fix them up.  To review the "
"changes that you just merged use ``bzr diff``.  To undo the merge use ``bzr "
"revert``.  Once you are happy with the changes then use ``bzr commit``."
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:50
msgid "Referring to versions of a package"
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:52
msgid ""
"You will often think in terms of versions of a package, rather than the "
"underlying Bazaar revision numbers.  `bzr-builddeb` provides a revision "
"specifier that makes this convenient.  Any command that takes a ``-r`` "
"argument to specify a revision or revision range will work with this "
"specifier, e.g. ``bzr log``, ``bzr diff``, and so on.  To view the versions "
"of a package, use the ``package:`` specifier::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-latest.rst:61
msgid ""
"This shows you the difference between package version 0.1-1 and 0.1-2."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:3
msgid "Merging — Updating from Debian and Upstream"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:5
msgid ""
"Merging is one of the strengths of Bazaar, and something we do often in "
"Ubuntu development.  Updates can be merged from Debian, from a new upstream "
"release, and from other Ubuntu developers.  Doing it in Bazaar is pretty "
"simple, and all based around the ``bzr merge`` command [#]_."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:10
msgid ""
"While you are in any branch's working directory, you can merge in a branch "
"from a different location.  First check that you have no uncommitted "
"changes::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:15
msgid ""
"If that reports anything then you will either have to commit the changes, "
"revert them, or shelve them to come back to later."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:20
msgid "Merging from Debian"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:22
msgid ""
"Next run ``bzr merge`` passing the URL of the branch to merge from.  For "
"example, to merge from the version of the package in Debian Unstable run "
"[#]_::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:28
msgid ""
"This will merge the changes since the last merge point and leave you with "
"changes to review.  This may cause some conflicts.  You can see everything "
"that the ``merge`` command did by running::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:35
msgid ""
"If conflicts are reported then you need to edit those files to make them "
"look how they should, removing the *conflict markers*.  Once you have done "
"this, run::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:42
msgid ""
"This will resolve any conflicted files that you fixed, and then tell you "
"what else you have to deal with."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:45
msgid ""
"Once any conflicts are resolved, and you have made any other changes that "
"you need, you will add a new changelog entry, and commit::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:51
msgid "as described earlier."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:53
msgid ""
"However, before you commit, it is always a good thing to check all the "
"Ubuntu changes by running::"
msgstr ""
"Toutefois, avant de soumettre, il est toujours bon de vérifier toutes les "
"modifications d'Ubuntu en exécutant ::"

#: ../ubuntu-packaging-guide/udd-merging.rst:58
msgid ""
"which will show the differences between the Debian (0.6.10-5) and Ubuntu "
"versions (0.6.10-5ubuntu1).  In similar way you can compare to any other "
"versions.  To see all available versions run::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:64
msgid ""
"After testing and committing the merge, you will need to seek sponsorship or "
"upload to the archive in the normal way."
msgstr ""
"Après avoir testé et soumis votre fusion, vous devrez rechercher un "
"parrainage ou télécharger vers l'archive de la manière habituelle."

#: ../ubuntu-packaging-guide/udd-merging.rst:67
msgid ""
"If you are going to build the source package from this merged branch, you "
"would use the ``-S`` option to the ``bd`` command.  One other thing you'll "
"want to consider is also using the ``--package-merge`` option.  This will "
"add the appropriate ``-v`` and ``-sa`` options to the source package so that "
"all the changelog entries since the last Ubuntu change will be included in "
"your ``_source.changes`` file.  For example::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:78
msgid "Merging a new upstream version"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:80
msgid ""
"When upstream releases a new version (or you want to package a snapshot), "
"you have to merge a tarball into your branch."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:83
msgid ""
"This is done using the ``bzr merge-upstream`` command.  If your package has "
"a valid ``debian/watch`` file, from inside the branch that you want to merge "
"to, just type this::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:89
msgid ""
"This will download the tarball and merge it into your branch, automatically "
"adding a ``debian/changelog`` entry for you.  ``bzr-builddeb`` looks at the "
"``debian/watch`` file for the upstream tarball location."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:93
msgid ""
"If you do *not* have a ``debian/watch`` file, you'll need to specify the "
"location of the upstream tarball, and the version manually::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:98
msgid ""
"The ``--version`` option is used to specify the upstream version that is "
"being merged in, as the command isn't able to infer that (yet)."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:101
msgid ""
"The last parameter is the location of the tarball that you are upgrading to; "
"this can either be a local filesystem path, or a http, ftp, sftp, etc. URI "
"as shown.  The command will automatically download the tarball for you.  The "
"tarball will be renamed appropriately and, if required, converted to ``.gz``."
msgstr ""
"Le dernier paramètre est l'emplacement de l'archive que vous mettez à "
"niveau ; cela peut être soit un chemin du système de fichiers local, soit "
"une URI http, ftp, sftp, etc. comme indiqué. La commande va vous télécharger "
"automatiquement l'archive. Elle sera renommée convenablement et, si "
"nécessaire, convertie en ``.gz``."

#: ../ubuntu-packaging-guide/udd-merging.rst:106
msgid ""
"The `merge-upstream` command will either tell you that it completed "
"successfully, or that there were conflicts.  Either way you will be able to "
"review the changes before committing as normal."
msgstr ""
"La commande `merge-upstream` va vous indiquer sa réussite ou si il y a eu "
"des conflits. De toute façon, vous serez en mesure d'examiner les "
"modifications avant la soumission habituelle."

#: ../ubuntu-packaging-guide/udd-merging.rst:110
msgid ""
"If you are merging an upstream release into an existing Bazaar branch that "
"has not previously used the UDD layout, ``bzr merge-upstream`` will fail "
"with an error that the tag for the previous upstream version is not "
"available; the merge can't be completed without knowing what base version to "
"merge against. To work around this, create a tag in your existing repository "
"for the last upstream version present there; e.g., if the last Ubuntu "
"release was *1.1-0ubuntu3*, create the tag *upstream-1.1* pointing to the "
"bzr revision you want to use as the tip of the upstream branch."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:120
msgid ""
"You will need newer versions of ``bzr`` and the ``bzr-builddeb`` for the "
"``merge`` command to work.  Use the versions from Ubuntu 12.04 (Precise) or "
"the development versions from the ``bzr`` PPA.  Specifically, you need "
"``bzr`` version 2.5 beta 5 or newer, and ``bzr-builddeb`` version 2.8.1 or "
"newer.  For older versions, use the ``bzr merge-package`` command instead."
msgstr ""

#: ../ubuntu-packaging-guide/udd-merging.rst:127
msgid ""
"To check other available branches of a package in Debian, see package code "
"page. E.g. https://code.launchpad.net/debian/+source/tomboy"
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:3
msgid "Seeking Review and Sponsorship"
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:5
msgid ""
"One of the biggest advantages to using the UDD workflow is to improve "
"quality by seeking review of changes by your peers.  This is true whether or "
"not you have upload rights yourself.  Of course, if you don't have upload "
"rights, you will need to seek sponsorship."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:10
msgid ""
"Once you are happy with your fix, and have a branch ready to go, the "
"following steps can be used to publish your branch on Launchpad, link it to "
"the bug issue, and create a *merge proposal* for others to review, and "
"sponsors to upload."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:19
msgid "Pushing to Launchpad"
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:21
msgid ""
"We previously showed you how to :ref:`associate your branch to the bug <link-"
"via-changelog>` using ``dch`` and ``bzr commit``.  However, the branch and "
"bug don't actually get linked until you push the branch to Launchpad."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:25
msgid ""
"It is not critical to have a link to a bug for every change you make, but if "
"you are fixing reported bugs then linking to them will be useful."
msgstr ""
"Il n'est pas essentiel d'avoir un lien vers un bogue pour chaque "
"modification que vous apportez, mais si vous corrigez des bogues déjà "
"rapportés, les relier sera utile."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:28
msgid "The general form of the URL you should push your branch to is::"
msgstr "La forme générale de l'URL pour publier votre branche est ::"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:32
msgid ""
"For example, to push your fix for bug 12345 in the Tomboy package for Natty, "
"you'd use::"
msgstr ""
"Par exemple, pour publier votre correctif au bogue 12345 dans le paquet "
"Tomboy pour Natty, vous devriez utiliser ::"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:37
msgid ""
"The last component of the path is arbitrary; it's up to you to pick "
"something meaningful."
msgstr ""
"Le dernier élément du chemin est arbitraire ; c'est à vous de choisir "
"quelque chose d'expressif."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:40
msgid ""
"However, this usually isn't enough to get Ubuntu developers to review and "
"sponsor your change.  You should next submit a *merge proposal*."
msgstr ""
"Toutefois, ce n'est généralement pas suffisant pour obtenir la relecture et "
"le parrainage de vos modifications pas les développeurs d'Ubuntu. Vous devez "
"ensuite soumettre une * proposition de fusion*."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:43
msgid "To do this open the bug page in a browser, e.g.::"
msgstr ""
"Pour ce faire, ouvrez la page de bogue dans un navigateur, par exemple ::"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:47
msgid "If that fails, then you can use::"
msgstr "En cas d'échec, vous pouvez utiliser ::"

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:51
msgid ""
"where most of the URL matches what you used for `bzr push`.  On this page, "
"you'll see a link that says *Propose for merging into another branch*.  Type "
"in an explanation of your change in the *Initial Comment* box.  Lastly, "
"click *Propose Merge* to complete the process."
msgstr ""
"où la plupart des URL correspond à ce que vous avez utilisé pour `bzr push`. "
"Sur cette page, vous verrez un lien *Proposer la fusion vers une autre "
"branche*. Tapez une explication de votre modification dans la boîte de "
"dialogue *Commentaire initial*. Enfin, cliquez sur *Proposer la fusion* pour "
"terminer le processus."

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:56
msgid ""
"Merge proposals to package source branches will automatically subscribe the "
"`~ubuntu-branches` team, which should be enough to reach an Ubuntu developer "
"who can review and sponsor your package change."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:62
msgid "Generating a debdiff"
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:64
msgid ""
"As noted above, some sponsors still prefer reviewing a *debdiff* attached to "
"bug reports instead of a merge proposal.  If you're requested to include a "
"debdiff, you can generate one like this (from inside your `bug-12345` "
"branch)::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:71
msgid ""
"Another way is to is to open the merge proposal and download the diff."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:73
msgid ""
"You should ensure that diff has the changes you expect, no more and no less. "
"Name the diff appropriately, e.g. ``foobar-12345.debdiff`` and attach it to "
"the bug report."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:79
msgid "Dealing with feedback from sponsors"
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:81
msgid ""
"If a sponsor reviews your branch and asks you to change something, you can "
"do this fairly easily.  Simply go to the branch that you were working in "
"before, make the changes requested, and then commit::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:87
msgid ""
"Now when you push your branch to Launchpad, Bazaar will remembered where you "
"pushed to, and will update the branch on Launchpad with your latest commits. "
"All you need to do is::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:93
msgid ""
"You can then reply to the merge proposal review email explaining what you "
"changed, and asking for re-review, or you can reply on the merge proposal "
"page in Launchpad."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:97
msgid ""
"Note that if you are sponsored via a debdiff attached to a bug report you "
"need to manually update by generating a new diff and attaching that to the "
"bug report."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:103
msgid "Expectations"
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:105
msgid ""
"The Ubuntu developers have set up a schedule of \"patch pilots\", who "
"regularly review the sponsoring queue and give feedback on branches and "
"patches. Even though this measure has been put in place it might still take "
"several days until you hear back. This depends on how busy everybody is, if "
"the development release is currently frozen, or other factors."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:111
msgid ""
"If you haven't heard back in a while, feel free to join `#ubuntu-devel` on "
"`irc.freenode.net` and find out if somebody can help you there."
msgstr ""

#: ../ubuntu-packaging-guide/udd-sponsorship.rst:114
msgid ""
"For more information on the generall sponsorship process, review the "
"documentation on our wiki as well: https://wiki.ubuntu.com/SponsorshipProcess"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:3
msgid "Uploading a package"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:5
msgid ""
"Once your merge proposal is reviewed and approved, you will want to upload "
"your package, either to the archive (if you have permission) or to your "
"`Personal Package Archive`_ (PPA).  You might also want to do an upload if "
"you are sponsoring someone else's changes."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:12
msgid "Uploading a change made by you"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:14
msgid ""
"When you have a branch with a change that you would like to upload you need "
"to get that change back on to the main source branch, build a source "
"package, and then upload it."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:18
msgid ""
"First, you need to check that you have the latest version of the package in "
"your checkout of the development package trunk::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:24
msgid ""
"This pulls in any changes that may have been committed while you were "
"working on your fix.  From here, you have several options.  If the changes "
"on the trunk are large and you feel should be tested along with your change "
"you can merge them into your bug fix branch and test there.  If not, then "
"you can carry on merging your bug fix branch into the development trunk "
"branch.  As of bzr 2.5 and bzr-builddeb 2.8.1, this works with just the "
"standard ``merge`` command::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:34
msgid ""
"For older versions of bzr, you can use the ``merge-package`` command "
"instead::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:38
msgid ""
"This will merge the two trees, possibly producing conflicts, which you'll "
"need to resolve manually."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:41
msgid ""
"Next you should make sure the ``debian/changelog`` is as you would like, "
"with the correct distribution, version number, etc."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:44
msgid ""
"Once that is done you should review the change you are about to commit with "
"``bzr diff``.  This should show you the same changes as a debdiff would "
"before you upload the source package."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:48
msgid ""
"The next step is to build and test the modified source package as you "
"normally would::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:53
msgid ""
"When you're finally happy with your branch, make sure you've committed all "
"your changes, then tag the branch with the changelog's version number.  The "
"``bzr tag`` command will do this for you automatically when given no "
"arguments::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:60
msgid ""
"This tag will tell the package importer that what is in the Bazaar branch is "
"the same as in the archive."
msgstr ""
"Cette balise indique à l'importateur du paquet que le contenu de la branche "
"Bazaar est le même que celui de l'archive."

#: ../ubuntu-packaging-guide/udd-uploading.rst:63
msgid "Now you can push the changes back to Launchpad::"
msgstr ""
"Maintenant, vous pouvez publier de nouveau vos modifications dans "
"Launchpad ::"

#: ../ubuntu-packaging-guide/udd-uploading.rst:67
msgid "(Change the destination if you are uploading an SRU or similar.)"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:69
msgid ""
"You need one last step to get your changes uploaded into Ubuntu or your PPA; "
"you need to ``dput`` the source package to the appropriate location.  For "
"example, if you want to upload your changes to your PPA, you'd do::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:75
msgid "or, if you have permission to upload to the primary archive::"
msgstr ""
"ou, si vous avez la permission de téléverser vers l'archive principale::"

#: ../ubuntu-packaging-guide/udd-uploading.rst:79
msgid ""
"You are now free to delete your feature branch, as it is merged, and can be "
"re-downloaded from Launchpad if needed."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:84
msgid "Sponsoring a change"
msgstr "Parrainage d'un changement"

#: ../ubuntu-packaging-guide/udd-uploading.rst:86
msgid ""
"Sponsoring someone else's change is just like the above procedure, but "
"instead of merging from a branch you created, you merge from the branch in "
"the merge proposal::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:92
msgid ""
"If there are lots of merge conflicts you would probably want to ask the "
"contributor to fix them up.  See the next section to learn how to cancel a "
"pending merge."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:96
msgid ""
"But if the changes look good, commit and then follow the rest of the "
"uploading process::"
msgstr ""
"Mais si les modifications paraissent correctes, engagez et suivez le reste "
"du processus de téléversement ::"

#: ../ubuntu-packaging-guide/udd-uploading.rst:103
msgid "Canceling an upload"
msgstr "Annulation d'un téléchargement"

#: ../ubuntu-packaging-guide/udd-uploading.rst:105
msgid ""
"At any time before you `dput` the source package you can decide to cancel an "
"upload and revert the changes::"
msgstr ""
"A chaque fois que vous allez exécuter `dput` sur le paquet source, vous "
"pouvez décider d'annuler un téléchargement et de revenir sur les "
"modifications ::"

#: ../ubuntu-packaging-guide/udd-uploading.rst:110
msgid ""
"You can do this if you notice something needs more work, or if you would "
"like to ask the contributor to fix up conflicts when sponsoring something."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:115
msgid "Sponsoring something and making your own changes"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:117
msgid ""
"If you are going to sponsor someone's work, but you would like to roll it up "
"with some changes of your own then you can merge their work in to a separate "
"branch first."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:121
msgid ""
"If you already have a branch where you are working on the package and you "
"would like to include their changes, then simply run the ``bzr merge`` from "
"that branch, instead of the checkout of the development package.  You can "
"then make the changes and commit, and then carry on with your changes to the "
"package."
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:127
msgid ""
"If you don't have an existing branch, but you know you would like to make "
"changes based on what the contributor provides then you should start by "
"grabbing their branch::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-uploading.rst:133
msgid ""
"then work in this new branch, and then merge it in to the main one and "
"upload as if it was your own work.  The contributor will still be mentioned "
"in the changelog, and Bazaar will correctly attribute the changes they made "
"to them."
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:3
msgid "Working on a Package"
msgstr "Travail sur un paquet"

#: ../ubuntu-packaging-guide/udd-working.rst:5
msgid ""
"Once you have the source package branch in a shared repository, you'll want "
"to create additional branches for the fixes or other work you plan to do.  "
"You'll want to base your branch off the package source branch for the distro "
"release that you plan to upload to.  Usually this is the current development "
"release, but it may be older releases if you're backporting to an SRU for "
"example."
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:13
msgid "Branching for a change"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:15
msgid ""
"The first thing to do is to make sure your source package branch is up-to-"
"date.  It will be if you just checked it out, otherwise do this::"
msgstr ""
"La première chose à faire est de vous assurer que votre branche du paquet "
"source est à jour. Elle le sera si vous venez juste de l'extraire, sinon "
"faites ::"

#: ../ubuntu-packaging-guide/udd-working.rst:21
msgid ""
"Any updates to the package that have uploaded since your checkout will now "
"be pulled in.  You do not want to make changes to this branch.  Instead, "
"create a branch that will contain just the changes you're going to make.  "
"Let's say you want to fix bug 12345 for the Tomboy project.  When you're in "
"the shared repository you previously created for Tomboy, you can create your "
"bug fix branch like this::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:31
msgid ""
"Now you can do all my work in the ``bug-12345`` directory.  You make changes "
"there as necessary, committing as you go along.  This is just like doing any "
"kind of software development with Bazaar.  You can make intermediate commits "
"as often as you like, and when your changes are finished, you will use the "
"standard ``dch`` command (from the ``devscripts`` package)::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:39
msgid ""
"This will drop you in an editor to add an entry to the `debian/changelog` "
"file."
msgstr ""
"Cela vous ouvre un éditeur pour ajouter une entrée au fichier "
"`debian/changelog`."

#: ../ubuntu-packaging-guide/udd-working.rst:44
msgid ""
"When you added your ``debian/changelog`` entry, you should have included a "
"bug fix tag that indicated which Launchpad bug issue you're fixing.  The "
"format of this textual tag is pretty strict: ``LP: #12345``.  The space "
"between the ``:`` and the ``#`` is required and of course you should use the "
"actual bug number that you're fixing.  Your ``debian/changelog`` entry might "
"look something like::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:57
msgid "Commit with the normal::"
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:61
msgid ""
"A hook in bzr-builddeb will use the debian/changelog text as the commit "
"message and set the tag to mark bug #12345 as fixed."
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:64
msgid ""
"This only works with bzr-builddeb 2.7.5 and bzr 2.4, for older versions use "
"``debcommit``."
msgstr ""
"Cela ne fonctionne qu'avec bzr-builddeb 2.7.5 et bzr 2.4, pour les versions "
"plus anciennes, utilisez ``debcommit``."

#: ../ubuntu-packaging-guide/udd-working.rst:71
msgid ""
"Along the way, you'll want to build your branch so that you can test it to "
"make sure it does actually fix the bug."
msgstr ""
"Tout au long du développement, vous construirez votre branche de manière à "
"la tester pour être sûr qu'elle corrige réellement le bogue."

#: ../ubuntu-packaging-guide/udd-working.rst:74
msgid ""
"In order to build the package you can use the ``bzr builddeb`` command from "
"the ``bzr-builddeb`` package.  You can build a source package with::"
msgstr ""
"De manière à construire le paquet, vous pouvez utiliser la commande ``bzr "
"builddeb`` du paquet ``bzr-builddeb``. Vous pouvez construire un paquet "
"source avec ::"

#: ../ubuntu-packaging-guide/udd-working.rst:79
msgid ""
"(``bd`` is an alias for ``builddeb``.)  You can leave the package unsigned "
"by appending ``-- -uc -us`` to the command."
msgstr ""
"(``bd`` est un alias pour ``builddeb``.) Vous pouvez laisser le paquet non "
"signé en ajoutant les paramètres ``-- -uc -us`` à la commande."

#: ../ubuntu-packaging-guide/udd-working.rst:82
msgid ""
"It is also possible to use your normal tools, as long as they are able to "
"strip the .bzr directories from the package, e.g.::"
msgstr ""
"Il est également possible d'utiliser vos outils habituels, aussi longtemps "
"qu'ils sont capables d'extraire les répertoires .bzr depuis le paquet, par "
"exemple ::"

#: ../ubuntu-packaging-guide/udd-working.rst:87
msgid ""
"If you ever see an error related to trying to build a native package without "
"a tarball, check to see if there is a ``.bzr-builddeb/default.conf`` file "
"erroneously specifying the package as native.  If the changelog version has "
"a dash in it, then it's not a native package, so remove the configuration "
"file. Note that while ``bzr builddeb`` has a ``--native`` switch, it does "
"not have a ``--no-native`` switch."
msgstr ""

#: ../ubuntu-packaging-guide/udd-working.rst:94
msgid ""
"Once you've got the source package, you can build it as normal with "
"``pbuilder-dist`` (or ``pbuilder`` or `sbuild`_)."
msgstr ""
"Une fois que vous avez obtenu le paquet source, vous pouvez le construire "
"comme d'habitude avec ``pbuilder-dist``  (ou ``pbuilder`` ou `sbuild` _)."

msgid "translator-credits"
msgstr ""
"Launchpad Contributions:\n"
"  Anne https://launchpad.net/~anneonyme017\n"
"  Calinou https://launchpad.net/~calinou9999spam\n"
"  Daniel Holbach https://launchpad.net/~dholbach\n"
"  Florent (LSc) https://launchpad.net/~lorkscorguar\n"
"  GillesY https://launchpad.net/~perso-gillesy\n"
"  Gérard Duteil https://launchpad.net/~gerardduteil\n"
"  Olivier Febwin https://launchpad.net/~febcrash\n"
"  Pa2squale https://launchpad.net/~pmaugendre\n"
"  Paquelier Alain https://launchpad.net/~paquelier-alain\n"
"  Pierre Slamich https://launchpad.net/~pierre-slamich\n"
"  Sebastien Bacher https://launchpad.net/~seb128\n"
"  Sylvie Gallet https://launchpad.net/~sylvie-gallet\n"
"  Tubuntu https://launchpad.net/~t-ubuntu\n"
"  Winael https://launchpad.net/~vinzjobard\n"
"  flaipe https://launchpad.net/~flaipe1\n"
"  gisele perreault https://launchpad.net/~gisele-perreault\n"
"  jean-bernard marcon https://launchpad.net/~jean-bernard-marcon"

#~ msgid ""
#~ "This command will create a pristine Raring AMD64 VM from a cloud image. To "
#~ "run the tests, simply run::"
#~ msgstr ""
#~ "Cette commande créera une machine virtuelle Raring AMD64 toute neuve à "
#~ "partir d'une image cloud. Pour lancer les tests, lancer simplement::"
